<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>alincode</title>
  <subtitle>學無止境</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://alincode.github.io/"/>
  <updated>2016-05-19T11:00:52.000Z</updated>
  <id>http://alincode.github.io/</id>
  
  <author>
    <name>alincode</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>有效的時間管理 - 重點整理(3)</title>
    <link href="http://alincode.github.io/2016/05/18/Effective-Time-Management-3/"/>
    <id>http://alincode.github.io/2016/05/18/Effective-Time-Management-3/</id>
    <published>2016-05-18T15:52:40.000Z</published>
    <updated>2016-05-19T11:00:52.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;如何用一半的時間，完成10倍的 Task Done。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好聳動的口號，讓我決定開始看這篇線上教學。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;有三件事情可以幫助你，把高價值的事情做完&quot;&gt;&lt;a href=&quot;#有三件事情可以幫助你，把高價值的事情做完&quot; class=&quot;headerlink&quot; title=&quot;有三件事情可以幫助你，把高價值的事情做完&quot;&gt;&lt;/a&gt;有三件事情可以幫助你，把高價值的事情做完&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;識別真正的高價值的任務&lt;/li&gt;
&lt;li&gt;擴大規模&lt;/li&gt;
&lt;li&gt;確認它們真的被完成&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;識別真正的高價值的任務&quot;&gt;&lt;a href=&quot;#識別真正的高價值的任務&quot; class=&quot;headerlink&quot; title=&quot;識別真正的高價值的任務&quot;&gt;&lt;/a&gt;識別真正的高價值的任務&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;常見高價值任務&lt;ul&gt;
&lt;li&gt;高獲利的 idea&lt;/li&gt;
&lt;li&gt;高價值的人際關係&lt;/li&gt;
&lt;li&gt;建立強大的團隊&lt;/li&gt;
&lt;li&gt;建立高收益系統機制&lt;/li&gt;
&lt;li&gt;可讓成果翻倍突破性的任務&lt;/li&gt;
&lt;li&gt;找尋可以提供產能的機會&lt;/li&gt;
&lt;li&gt;Making profitable offers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;特別高價值任務&lt;ul&gt;
&lt;li&gt;花一分鐘的時間，寫下你認為目前帶給你高價值的任務&lt;/li&gt;
&lt;li&gt;寫下這些任務帶來的回饋價值，或未來預估會帶來的價值&lt;/li&gt;
&lt;li&gt;建立一個循環機制，讓它比以前更頻繁地被發生。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;擴大規模&quot;&gt;&lt;a href=&quot;#擴大規模&quot; class=&quot;headerlink&quot; title=&quot;擴大規模&quot;&gt;&lt;/a&gt;擴大規模&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;重新設計任務讓它可以用更少的資源，產生更高的價值。&lt;/li&gt;
&lt;li&gt;規模化之後，哪些價值會被倍增。&lt;/li&gt;
&lt;li&gt;如果你確定用更少的資源，無止境的提升產能，你會去做的？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;擴大規模常見高價值任務&quot;&gt;&lt;a href=&quot;#擴大規模常見高價值任務&quot; class=&quot;headerlink&quot; title=&quot;擴大規模常見高價值任務&quot;&gt;&lt;/a&gt;擴大規模常見高價值任務&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;高獲利的 idea —&amp;gt; 建立智囊團可以提供給你 ideas&lt;/li&gt;
&lt;li&gt;高價值的人際關係 —&amp;gt; 找尋可以幫你介紹給別人的高價值人際關係&lt;/li&gt;
&lt;li&gt;建立強大的團隊 —&amp;gt; 找個 CEO 幫你訓練你的團隊&lt;/li&gt;
&lt;li&gt;建立高收益系統 —&amp;gt; 直接購買一個別人建立好的高收益系統&lt;/li&gt;
&lt;li&gt;可讓成果翻倍突破性的任務 —&amp;gt; 建立突破性的團隊&lt;/li&gt;
&lt;li&gt;找尋可以提供產能的機會 —&amp;gt; 建立強大的團隊，幫助你找機會&lt;/li&gt;
&lt;li&gt;Making profitable offers —&amp;gt; Get offer making team&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/effective-time-management/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udemy 免費線上課程網址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;如何用一半的時間，完成10倍的 Task Done。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好聳動的口號，讓我決定開始看這篇線上教學。&lt;/p&gt;
    
    </summary>
    
      <category term="時間管理" scheme="http://alincode.github.io/categories/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="時間管理" scheme="http://alincode.github.io/tags/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
      <category term="有效的時間管理" scheme="http://alincode.github.io/tags/%E6%9C%89%E6%95%88%E7%9A%84%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>如何改善英文閱讀能力 - 經驗分享</title>
    <link href="http://alincode.github.io/2016/05/17/how-to-improve-english-reading-skills/"/>
    <id>http://alincode.github.io/2016/05/17/how-to-improve-english-reading-skills/</id>
    <published>2016-05-17T14:43:31.000Z</published>
    <updated>2016-05-18T15:37:21.000Z</updated>
    
    <content type="html">&lt;p&gt;去年在加拿大語言學校的時候，入學測驗會先考聽說讀寫，考試的方式基本上就是寫考卷，交卷後去另一個教室，隨機指派一個老師幫你面試，基本就是自我介紹，然後他會說三個題目，你可以挑任何一個你覺得比較好發揮的題目回答。如果是半天課程的人只有兩堂課，溝通課是必修，然後他會告訴你成績最差的一科，建議你選課方向。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;通常台灣人最強的應該是讀，但讀卻是我最弱的一項，所以我被指派到了閱讀課，有些人會覺得閱讀課很浪費時間，不過之前已經在菲律賓上了 5 個月的一對一對話課程，閱讀課反而給我帶來一些新鮮感。在這個人人上大學的時代，閱讀有什麼困難呢？不就多花一點時間就好了？&lt;code&gt;但上了閱讀課之後，我才明白原來我真的不懂閱讀。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;「如何閱讀一本書」這本書有提到，閱讀有三個層次基礎閱讀、檢視閱讀、分析閱讀，只要有國中畢業得人，都不需要在乎基本閱讀這個層級，甚至我們從不知道有發生過這個階段，除了國小老師誰會記得國小上課內容？但所有內容我們已經內化成內功了，根本不需要思考。但在接觸另一個語言的時候，並沒有意識到，原來閱讀能力被降級了，所以我們仍用了以往讀母語書的技巧去讀英文書，發現效果很差。&lt;/p&gt;
&lt;p&gt;大概記錄一下，我自己體驗過覺得很重要的技能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如何知道這本書適不適合你閱讀？有兩件事必須要評估。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你有沒有興趣&lt;/li&gt;
&lt;li&gt;你能不能看懂&lt;ul&gt;
&lt;li&gt;如果一頁有超過十個單字你看不懂，那這本書遠遠超過你目前的閱讀能力，你應該換更簡單的書籍。&lt;/li&gt;
&lt;li&gt;有些人會選擇硬 K 它，通常最後會轉變成直接放棄。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;同個內容分三種技巧閱讀&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一遍&lt;ul&gt;
&lt;li&gt;用極快的速度用跳躍的方式閱讀&lt;/li&gt;
&lt;li&gt;&lt;code&gt;挑出三個一直重複出現的關鍵字&lt;/code&gt;，如果這三個字不懂，試著從前後文推敲，真的不行在查字典。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第二遍&lt;ul&gt;
&lt;li&gt;用中等速度閱讀&lt;/li&gt;
&lt;li&gt;每個段落挑出最重要的一行句子，然後把被挑句子&lt;code&gt;濃縮成一段話&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第三遍&lt;ul&gt;
&lt;li&gt;細讀&lt;/li&gt;
&lt;li&gt;如果不知道這個字就不知道整句句子的意思的字，特別挑出來嘗試 &lt;code&gt;猜測&lt;/code&gt; 單字的意思。&lt;/li&gt;
&lt;li&gt;通常八成不懂的單字，都可以靠從句子中推測，抓出大概的意思，可以逐漸磨練出猜測的準度提升閱讀技巧。&lt;/li&gt;
&lt;li&gt;如果每個不懂的單字都查，很快就破壞你閱讀的興致而放棄閱讀。&lt;/li&gt;
&lt;li&gt;有些單字會依照情境不同而有不同意義，所以有時候查了也沒用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;去年在加拿大語言學校的時候，入學測驗會先考聽說讀寫，考試的方式基本上就是寫考卷，交卷後去另一個教室，隨機指派一個老師幫你面試，基本就是自我介紹，然後他會說三個題目，你可以挑任何一個你覺得比較好發揮的題目回答。如果是半天課程的人只有兩堂課，溝通課是必修，然後他會告訴你成績最差的一科，建議你選課方向。&lt;/p&gt;
    
    </summary>
    
    
      <category term="學英文" scheme="http://alincode.github.io/tags/%E5%AD%B8%E8%8B%B1%E6%96%87/"/>
    
      <category term="經驗分享" scheme="http://alincode.github.io/tags/%E7%B6%93%E9%A9%97%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>有效的時間管理 - 重點整理(2)</title>
    <link href="http://alincode.github.io/2016/05/16/Effective-Time-Management-2/"/>
    <id>http://alincode.github.io/2016/05/16/Effective-Time-Management-2/</id>
    <published>2016-05-16T10:29:09.000Z</published>
    <updated>2016-05-19T11:01:02.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;如何用一半的時間，完成10倍的 Task Done。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好聳動的口號，讓我決定開始看這篇線上教學。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;什麼是高價值的事情&quot;&gt;&lt;a href=&quot;#什麼是高價值的事情&quot; class=&quot;headerlink&quot; title=&quot;什麼是高價值的事情&quot;&gt;&lt;/a&gt;什麼是高價值的事情&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;相對於其他事情，它可以帶給你更高的報酬。&lt;/li&gt;
&lt;li&gt;這項活動將帶你更趨近於你的願景。&lt;/li&gt;
&lt;li&gt;這項活動將帶你領你，跳到更高一層的階段。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;找出過去你專注的事情？&quot;&gt;&lt;a href=&quot;#找出過去你專注的事情？&quot; class=&quot;headerlink&quot; title=&quot;找出過去你專注的事情？&quot;&gt;&lt;/a&gt;找出過去你專注的事情？&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;列出你昨天做的每件事&lt;/li&gt;
&lt;li&gt;接著寫下你預期會從這些事情回報到你自己身上價值的數值。&lt;/li&gt;
&lt;li&gt;回顧你的列表，你到底得到多少回報？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;80-20法則&quot;&gt;&lt;a href=&quot;#80-20法則&quot; class=&quot;headerlink&quot; title=&quot;80 / 20法則&quot;&gt;&lt;/a&gt;80 / 20法則&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;80% 的收獲，來自於 20% 的付出。&lt;/li&gt;
&lt;li&gt;80% 的結果，來自於 20% 的原因。&lt;/li&gt;
&lt;li&gt;反過來說，在我們所做的全部努力之中，有 80% 的付出只能帶來 20% 的結果。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/effective-time-management/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udemy 免費線上課程網址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;如何用一半的時間，完成10倍的 Task Done。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好聳動的口號，讓我決定開始看這篇線上教學。&lt;/p&gt;
    
    </summary>
    
      <category term="時間管理" scheme="http://alincode.github.io/categories/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="時間管理" scheme="http://alincode.github.io/tags/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
      <category term="有效的時間管理" scheme="http://alincode.github.io/tags/%E6%9C%89%E6%95%88%E7%9A%84%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>有效的時間管理 - 重點整理(1)</title>
    <link href="http://alincode.github.io/2016/05/15/Effective-Time-Management/"/>
    <id>http://alincode.github.io/2016/05/15/Effective-Time-Management/</id>
    <published>2016-05-15T09:01:19.000Z</published>
    <updated>2016-05-19T11:01:21.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;如何用一半的時間，完成10倍的 Task Done。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好聳動的口號，讓我決定開始看這篇線上教學。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;有效的時間管理&quot;&gt;&lt;a href=&quot;#有效的時間管理&quot; class=&quot;headerlink&quot; title=&quot;有效的時間管理&quot;&gt;&lt;/a&gt;有效的時間管理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;時間管理是一種數學&lt;ul&gt;
&lt;li&gt;時間管理無用論，即使知道了時間怎麼使用，還是無法把事情做完。&lt;/li&gt;
&lt;li&gt;原因是我們無法在擁有更多的時間，每個人都只有 24 小時。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;任務管理&lt;ul&gt;
&lt;li&gt;任務管理更重要，因為你可以無限的增加價值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;所有人都擁有相同的時間，但成功人士的差別在於他們將時間花在高價值，並會回饋到自己身上的事。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;最大的挑戰是什麼？&quot;&gt;&lt;a href=&quot;#最大的挑戰是什麼？&quot; class=&quot;headerlink&quot; title=&quot;最大的挑戰是什麼？&quot;&gt;&lt;/a&gt;最大的挑戰是什麼？&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;被 TODO List 淹沒&lt;/li&gt;
&lt;li&gt;我們傾向做很多事情，但不幸的事，只有少部分的事情真正對我們有價值。&lt;/li&gt;
&lt;li&gt;無論我們決定要做哪件事，我們都只有有限的時間。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;專注是關鍵&quot;&gt;&lt;a href=&quot;#專注是關鍵&quot; class=&quot;headerlink&quot; title=&quot;專注是關鍵&quot;&gt;&lt;/a&gt;專注是關鍵&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;只專注在最高價值的事情&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/effective-time-management/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udemy 免費線上課程網址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;如何用一半的時間，完成10倍的 Task Done。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好聳動的口號，讓我決定開始看這篇線上教學。&lt;/p&gt;
    
    </summary>
    
      <category term="時間管理" scheme="http://alincode.github.io/categories/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="80/20 法則" scheme="http://alincode.github.io/tags/80-20-%E6%B3%95%E5%89%87/"/>
    
      <category term="時間管理" scheme="http://alincode.github.io/tags/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
      <category term="有效的時間管理" scheme="http://alincode.github.io/tags/%E6%9C%89%E6%95%88%E7%9A%84%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>React Bind</title>
    <link href="http://alincode.github.io/2016/05/14/react-about-bind/"/>
    <id>http://alincode.github.io/2016/05/14/react-about-bind/</id>
    <published>2016-05-14T15:15:27.000Z</published>
    <updated>2016-05-18T15:38:52.000Z</updated>
    
    <content type="html">&lt;p&gt;React on ES6 不再 &lt;code&gt;自動綁定&lt;/code&gt;，這是在很多網路文章都會提到的事，但總是覺得矇矇懂，今天看到一個範例終於比較有感了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;就是在之前 handleOptionsButtonClick 內的 this 不需要綁定，就會預設為 this 是一個 component instance，但是在 ES6 的寫法，你需要加 &lt;code&gt;this.handleOptionsButtonClick.bind(this)&lt;/code&gt;，它才會將 handleOptionsButtonClick 內的 this 視為是 &lt;code&gt;component instance&lt;/code&gt;，否則無法使用 component instance 的 method。&lt;/p&gt;
&lt;h3 id=&quot;範例一&quot;&gt;&lt;a href=&quot;#範例一&quot; class=&quot;headerlink&quot; title=&quot;範例一&quot;&gt;&lt;/a&gt;範例一&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class PostInfo extends React.Component &amp;#123;&amp;#10;  constructor(props) &amp;#123;&amp;#10;    super(props);&amp;#10;    // &amp;#25163;&amp;#21205;&amp;#32129;&amp;#23450;&amp;#65292;&amp;#36889;&amp;#35041;&amp;#30340; this &amp;#25351;&amp;#30340;&amp;#26159; component instance&amp;#10;    this.handleOptionsButtonClick = this.handleOptionsButtonClick.bind(this);&amp;#10;  &amp;#125;&amp;#10;  handleOptionsButtonClick(e) &amp;#123;&amp;#10;    // &amp;#34987; bind &amp;#20043;&amp;#24460;&amp;#65292;&amp;#36889;&amp;#35041;&amp;#30340; this &amp;#23559;&amp;#25351;&amp;#30340;&amp;#26159; component instance&amp;#12290;&amp;#10;    this.setState(&amp;#123;showOptionsModal: true&amp;#125;);&amp;#10;  &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;範例二&quot;&gt;&lt;a href=&quot;#範例二&quot; class=&quot;headerlink&quot; title=&quot;範例二&quot;&gt;&lt;/a&gt;範例二&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;_checkShopCode() &amp;#123;&amp;#10;// &amp;#8230; &amp;#30053;...&amp;#10;&amp;#125;&amp;#10;&amp;#10;_changeDeliverZone(e) &amp;#123;&amp;#10;  CartActions.changeDeliverZone(e.target.value);&amp;#10;  this._updateCartSum();&amp;#10;&amp;#125;&amp;#10;&amp;#10;&amp;#60;select style=&amp;#123;styles.select&amp;#125; value=&amp;#123;this.props.selectedDeliverZone&amp;#125; onChange=&amp;#123;this._changeDeliverZone.bind(this)&amp;#125;&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;React on ES6 不再 &lt;code&gt;自動綁定&lt;/code&gt;，這是在很多網路文章都會提到的事，但總是覺得矇矇懂，今天看到一個範例終於比較有感了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="React" scheme="http://alincode.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>CDNJS - JavaScript CDN</title>
    <link href="http://alincode.github.io/2016/05/13/CDNJS/"/>
    <id>http://alincode.github.io/2016/05/13/CDNJS/</id>
    <published>2016-05-13T14:22:28.000Z</published>
    <updated>2016-05-14T14:33:48.000Z</updated>
    
    <content type="html">&lt;p&gt;這個網站提供了 &lt;code&gt;JavaScript Libraries CDN&lt;/code&gt;，大多數的 JavaScript Libraries 都可以在這裡找到，例如 JQuery, Babel, React 等等，如果你的網站並沒有自己的 CDN 供應商，這似乎也是一個不錯的替代方案。&lt;/p&gt;
&lt;img src=&quot;/blog/2016/05/13/CDNJS/CDNJS.png&quot; alt=&quot;CDNJS.png&quot; title=&quot;&quot;&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;這個網站提供了 &lt;code&gt;JavaScript Libraries CDN&lt;/code&gt;，大多數的 JavaScript Libraries 都可以在這裡找到，例如 JQuery, Babel, React 等等，如果你的網站並沒有自己的 CDN 供應商，這似乎也是一個不
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Selenium 執行異常</title>
    <link href="http://alincode.github.io/2016/05/12/execute-selenium-error/"/>
    <id>http://alincode.github.io/2016/05/12/execute-selenium-error/</id>
    <published>2016-05-12T14:51:57.000Z</published>
    <updated>2016-05-11T15:00:09.000Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;No Java runtime present, requesting install.&amp;#10;/usr/local/lib/node_modules/selenium-standalone/bin/selenium-standalone:61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果你看到此訊息，請先安裝 JDK，因為 Selenium 需要它。&lt;/p&gt;
&lt;img src=&quot;/blog/2016/05/12/execute-selenium-error/error.png&quot; alt=&quot;error.png&quot; title=&quot;&quot;&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
    
    </summary>
    
    
      <category term="Selenium" scheme="http://alincode.github.io/tags/Selenium/"/>
    
  </entry>
  
  <entry>
    <title>線上 JSON 產生器</title>
    <link href="http://alincode.github.io/2016/05/11/json-generator/"/>
    <id>http://alincode.github.io/2016/05/11/json-generator/</id>
    <published>2016-05-11T05:53:31.000Z</published>
    <updated>2016-05-11T06:35:03.000Z</updated>
    
    <content type="html">&lt;img src=&quot;/blog/2016/05/11/json-generator/json-generator.png&quot; alt=&quot;json-generator.png&quot; title=&quot;&quot;&gt;
&lt;p&gt;在寫一些 demo sample 的時候，需要 json 資料，而且必須是 http url 的形式，自己弄靜態 server 來放假資料？似乎太麻煩了，或許你可以試試看這個免費的線上服務，它提供了一些 &lt;code&gt;template tags&lt;/code&gt; 讓你去建立這些假資料，而且還提供公開的 url。&lt;/p&gt;
&lt;p&gt;有哪些 &lt;code&gt;template tags&lt;/code&gt; 可以使用，你可以按一些 Help 按鈕，就找的到所有值了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.json-generator.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Json Generator&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;/blog/2016/05/11/json-generator/json-generator.png&quot; alt=&quot;json-generator.png&quot; title=&quot;&quot;&gt;
&lt;p&gt;在寫一些 demo sample 的時候，需要 json 資料，而且必須是 ht
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何時候該用 Promise？</title>
    <link href="http://alincode.github.io/2016/05/10/when-use-promise/"/>
    <id>http://alincode.github.io/2016/05/10/when-use-promise/</id>
    <published>2016-05-10T00:59:58.000Z</published>
    <updated>2016-05-18T15:40:24.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://fakeimg.pl/350x200/?text=Promise&quot; alt=&quot;Promise&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用時機&quot;&gt;&lt;a href=&quot;#使用時機&quot; class=&quot;headerlink&quot; title=&quot;使用時機&quot;&gt;&lt;/a&gt;使用時機&lt;/h3&gt;&lt;p&gt;在寫 async function 時，最容易搞錯的就是執行順序，然而在寫 async function 時，可以用 &lt;code&gt;await&lt;/code&gt; 去解掉層層的巢狀callback 結構，但如果 async 內使用到 sync function，那該怎麼做？&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;實作方式&quot;&gt;&lt;a href=&quot;#實作方式&quot; class=&quot;headerlink&quot; title=&quot;實作方式&quot;&gt;&lt;/a&gt;實作方式&lt;/h3&gt;&lt;p&gt;在 sync function 包一個 Promise&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TokenAuth.js&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module.exports.getUser = (token) =&amp;#62; &amp;#123;&amp;#10;  return new Promise((resolve, reject) =&amp;#62; &amp;#123;&amp;#10;    // &amp;#36889;&amp;#20491;&amp;#26159;&amp;#19968;&amp;#20491; sync function&amp;#10;    TokenAuth.verifyToken(token, async(err, decodedToken) =&amp;#62; &amp;#123;&amp;#10;      if (err) reject(err);&amp;#10;      let user = await db.User.findById(decodedToken.sub);&amp;#10;      resolve(user);&amp;#10;    &amp;#125;);&amp;#10;  &amp;#125;);&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;CartAPIController&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import Promise from &amp;#34;bluebird&amp;#34;;&amp;#10;&amp;#10;module.exports = &amp;#123;&amp;#10;  get: async(req, res) =&amp;#62; &amp;#123;&amp;#10;    try &amp;#123;&amp;#10;      let promise = TokenAuth.getUser(req);&amp;#10;      let loginUser = await promise.then();&amp;#10;      let result = await CartService.getCartInfo(loginUser);&amp;#10;      return res.ok(result);&amp;#10;    &amp;#125; catch (e) &amp;#123;&amp;#10;      return res.serverError(e);&amp;#10;    &amp;#125;&amp;#10;  &amp;#125;&amp;#10;&amp;#10;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://fakeimg.pl/350x200/?text=Promise&quot; alt=&quot;Promise&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用時機&quot;&gt;&lt;a href=&quot;#使用時機&quot; class=&quot;headerlink&quot; title=&quot;使用時機&quot;&gt;&lt;/a&gt;使用時機&lt;/h3&gt;&lt;p&gt;在寫 async function 時，最容易搞錯的就是執行順序，然而在寫 async function 時，可以用 &lt;code&gt;await&lt;/code&gt; 去解掉層層的巢狀callback 結構，但如果 async 內使用到 sync function，那該怎麼做？&lt;/p&gt;
    
    </summary>
    
    
      <category term="promise" scheme="http://alincode.github.io/tags/promise/"/>
    
  </entry>
  
  <entry>
    <title>如何開始使用 Story Points？</title>
    <link href="http://alincode.github.io/2016/05/09/how-to-getting-started-story-points/"/>
    <id>http://alincode.github.io/2016/05/09/how-to-getting-started-story-points/</id>
    <published>2016-05-09T03:48:38.000Z</published>
    <updated>2016-05-18T15:45:55.000Z</updated>
    
    <content type="html">&lt;img src=&quot;/blog/2016/05/09/how-to-getting-started-story-points/PlanningPoker.jpg&quot; alt=&quot;PlanningPoker.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;預估-Story-Points-單位&quot;&gt;&lt;a href=&quot;#預估-Story-Points-單位&quot; class=&quot;headerlink&quot; title=&quot;預估 Story Points 單位&quot;&gt;&lt;/a&gt;預估 Story Points 單位&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;衣服 Size 種類 (XS, S, M, L, XL…)&lt;/li&gt;
&lt;li&gt;費氏數列卡片(Planning Poker)&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;怎麼開始？&quot;&gt;&lt;a href=&quot;#怎麼開始？&quot; class=&quot;headerlink&quot; title=&quot;怎麼開始？&quot;&gt;&lt;/a&gt;怎麼開始？&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;數字越大代表越複雜，可以從先挑一個介於中間值的 Story 開始，然後再逐一針對每個 Story 給 Point。&lt;/li&gt;
&lt;li&gt;針對預估不一致的 Story 進行細部討論。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;補充&quot;&gt;&lt;a href=&quot;#補充&quot; class=&quot;headerlink&quot; title=&quot;補充&quot;&gt;&lt;/a&gt;補充&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.pointingpoker.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;線上版 Pointing Poker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此評估方式希望每個人都可以以客觀的方式預估，不受別人影響，這個網站提供了這樣的小功能，在所有人都遞交評估後，才顯示所有人的評估果。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;/blog/2016/05/09/how-to-getting-started-story-points/PlanningPoker.jpg&quot; alt=&quot;PlanningPoker.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;預估-Story-Points-單位&quot;&gt;&lt;a href=&quot;#預估-Story-Points-單位&quot; class=&quot;headerlink&quot; title=&quot;預估 Story Points 單位&quot;&gt;&lt;/a&gt;預估 Story Points 單位&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;衣服 Size 種類 (XS, S, M, L, XL…)&lt;/li&gt;
&lt;li&gt;費氏數列卡片(Planning Poker)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Story Points" scheme="http://alincode.github.io/tags/Story-Points/"/>
    
      <category term="預估" scheme="http://alincode.github.io/tags/%E9%A0%90%E4%BC%B0/"/>
    
  </entry>
  
  <entry>
    <title>什麼是 Story Points</title>
    <link href="http://alincode.github.io/2016/05/08/estimating-with-story-points/"/>
    <id>http://alincode.github.io/2016/05/08/estimating-with-story-points/</id>
    <published>2016-05-08T02:41:17.000Z</published>
    <updated>2016-05-18T15:45:33.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://fakeimg.pl/350x200/?text=Story%20Points&quot; alt=&quot;Story Points&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近 Team 開始試 Story Points 來評估專案，所以稍微花了點時間了解一下。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;預估&quot;&gt;&lt;a href=&quot;#預估&quot; class=&quot;headerlink&quot; title=&quot;預估&quot;&gt;&lt;/a&gt;預估&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;我想從事軟體業，最難的一項就是預估，為什麼呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因為預估往往是針對從前的經驗，去推算出未來需要的時間，如果鋪一塊柏油需要2個小時，在相同大小的情況下，就可以很準確的預估出下一次所需要的時間，但是從事軟體業的技術日益更新，今年夯物聯網，明年又會有另一種題材竄起，即使每天使用的框架，一、兩年後又會有新的局面。所以永遠預估不準，索性乾脆不要預估，或業界常用的預估方式，抓三倍的時間，因為永遠會有意外發生。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;既然估不準，那還要不要預估？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;當我們去景點區的時候，第一件事會做什麼？通常會先看一下門口放置的觀光地圖，挑出想去的景點，規劃一下 Route，這個地圖非常的不精準，但卻不可或缺對吧。&lt;/p&gt;
&lt;h3 id=&quot;什麼是-Story-Points？&quot;&gt;&lt;a href=&quot;#什麼是-Story-Points？&quot; class=&quot;headerlink&quot; title=&quot;什麼是 Story Points？&quot;&gt;&lt;/a&gt;什麼是 Story Points？&lt;/h3&gt;&lt;p&gt;既然估不準，那我們就不應該花太多時間預估，Story Points 就是一個提供&lt;code&gt;快速預估的方法論&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story Points 採用需求複雜度所估算，不是針對小時估算。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;人很擅長比較大小，我們可以在一分鐘內說出，甲物比乙物大，但是如果你再追問，甲物比乙物大多少？1.5倍？2倍？1.8倍？那就會變成一個相當耗時的評估。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;優點&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Story Points 是一個客觀的估算基準點，它不牽扯到個人的經驗背景。如果用小時估算，有可能資深的只需要兩天，資淺的需要一周，但這個 Task 也還沒決定給誰，而且就算決定給誰了，人是會流動的，所以我們需要一個客觀的評估方式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在評估過程中，如果甲跟乙所估算的 Story Points 差異太大，可以趁這時間做交流，例如可能甲以前有做過類似的Task，所以他已經知道大概怎麼進行會比較快，或是甲沒預估到乙覺得可能會發生的一些問題。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://fakeimg.pl/350x200/?text=Story%20Points&quot; alt=&quot;Story Points&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近 Team 開始試 Story Points 來評估專案，所以稍微花了點時間了解一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Story Points" scheme="http://alincode.github.io/tags/Story-Points/"/>
    
      <category term="預估" scheme="http://alincode.github.io/tags/%E9%A0%90%E4%BC%B0/"/>
    
  </entry>
  
  <entry>
    <title>過度設計</title>
    <link href="http://alincode.github.io/2016/05/07/overdesign/"/>
    <id>http://alincode.github.io/2016/05/07/overdesign/</id>
    <published>2016-05-07T02:14:34.000Z</published>
    <updated>2016-05-08T08:02:52.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://fakeimg.pl/350x200/?text=Overdesign&quot; alt=&quot;Overdesign&quot;&gt;&lt;/p&gt;
&lt;p&gt;在一個目前維護的專案中，看到一個相依性很高的 code，似乎是一個很棒的例子說明過度設計這件事。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;撰寫者的美意&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是讓 controller 內，只有一行就可以發出不同狀態的通知信，但這樣的設計卻帶來更多的災難。一個好的設計是什麼？基本原則不外乎是，一次變動只需影響到一個地方，每個最小單元只做一件事，並可充分表態自己的意圖。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那這樣的設計問題在哪裡？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;當 Order 的 Type 有更名的時候，如果不是原設計者，接手人並不會知道同步去更變 CustomMailerService 內的 function 名稱，基本上他也不應該需要去做這件事。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CustomMailerService[status](order)&lt;/code&gt; 隱含著，有可能會 &lt;code&gt;CustomMailerService.paymentConfirm&lt;/code&gt; 只傳一個參數的意圖，另一個參數或許會是 null Code 這本書上有提到，不應該傳入 null 為參數。&lt;/li&gt;
&lt;li&gt;如果有一天 CustomMailerService 的 function 名稱需要修改，接手人也不容易察覺與 Order.type 有相關聯。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;簡略架構&quot;&gt;&lt;a href=&quot;#簡略架構&quot; class=&quot;headerlink&quot; title=&quot;簡略架構&quot;&gt;&lt;/a&gt;簡略架構&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;OrderController&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;let messageConfig = await CustomMailerService[status](order);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Order&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;type: DataTypes.ENUM(&amp;#39;new&amp;#39;, &amp;#39;paymentConfirm&amp;#39;, &amp;#39;deliveryConfirm&amp;#39;, &amp;#39;orderCancel&amp;#39;),&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CustomMailerService&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;orderConfirm: (result)&amp;#10;paymentConfirm: (order, email)&amp;#10;deliveryConfirm: (order)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://fakeimg.pl/350x200/?text=Overdesign&quot; alt=&quot;Overdesign&quot;&gt;&lt;/p&gt;
&lt;p&gt;在一個目前維護的專案中，看到一個相依性很高的 code，似乎是一個很棒的例子說明過度設計這件事。&lt;/p&gt;
&lt;p&gt;&lt;s
    
    </summary>
    
    
      <category term="bad smell" scheme="http://alincode.github.io/tags/bad-smell/"/>
    
  </entry>
  
  <entry>
    <title>如何閱讀一本書 - 如何做一個自我要求的讀者(重點整理)</title>
    <link href="http://alincode.github.io/2016/05/06/How-to-be-a-self-demanding-readers/"/>
    <id>http://alincode.github.io/2016/05/06/How-to-be-a-self-demanding-readers/</id>
    <published>2016-05-06T01:48:30.000Z</published>
    <updated>2016-05-08T02:13:22.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;主動閱讀者要提出四個基本問題&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整理來說，這本書到底在談些什麼？&lt;/li&gt;
&lt;li&gt;作者細部說了什麼？&lt;/li&gt;
&lt;li&gt;這本書說得有道理嗎？是全部有道理？還是部分有道理？&lt;/li&gt;
&lt;li&gt;這本書跟你有什麼關係？有哪些你可以運用到自己身上？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;為什麼對閱讀來說，做筆記是不可或缺的事？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那會讓你保持清醒&lt;/li&gt;
&lt;li&gt;閱讀，如果是主動的，就是一種思考。&lt;ul&gt;
&lt;li&gt;思考傾向於用語言表達出來，不管是用講的還是用寫的。&lt;/li&gt;
&lt;li&gt;一個人如果說他知道他在想些什麼，卻說不出來，通常是他其實並不知道自己在想些什麼。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;將你的感想寫下來，能幫助你記住作者的思想。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;什麼是一個有技術的人&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我們並不是在說他知道該如何去做那件事，而是他已經養成去做那件事的習慣了。&lt;/li&gt;
&lt;li&gt;當然，對於規則是否了解得夠清楚，是能不能擁有技巧的關鍵。如果你不知道規則是什麼，就根本不可能照規則來行事，而你不能照規則來做，就不可能養成任何技能的習慣。&lt;/li&gt;
&lt;li&gt;只要照著規則練習，就可以培養出習慣，也就可以成為一個有技術的人。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;如何成為一個專家&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;規則的多樣化，意味著要養成一個習慣的複雜度，而非表示要形成許多個不同的習慣。&lt;/li&gt;
&lt;li&gt;在到達一個程度時，每個分開的動作自然就會壓縮、聯結起來，變成一個完整的動作。&lt;/li&gt;
&lt;li&gt;所有相關的動作都能相當自然地做出來時，你就離成為一個專家不遠了。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;主動閱讀者要提出四個基本問題&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整理來說，這本書到底在談些什麼？&lt;/li&gt;
&lt;li&gt;作者細部說了什麼？&lt;/li&gt;
&lt;li&gt;這本書說得有道理嗎？是全部有道理？還是部分有道理？&lt;/li&gt;
&lt;li&gt;這本書跟你有什麼關係？有
    
    </summary>
    
      <category term="非專業書閱讀" scheme="http://alincode.github.io/categories/%E9%9D%9E%E5%B0%88%E6%A5%AD%E6%9B%B8%E9%96%B1%E8%AE%80/"/>
    
    
      <category term="如何閱讀一本書" scheme="http://alincode.github.io/tags/%E5%A6%82%E4%BD%95%E9%96%B1%E8%AE%80%E4%B8%80%E6%9C%AC%E6%9B%B8/"/>
    
  </entry>
  
  <entry>
    <title>WebdriverIO 與 Chai 整合</title>
    <link href="http://alincode.github.io/2016/05/05/webdriverio-with-chai/"/>
    <id>http://alincode.github.io/2016/05/05/webdriverio-with-chai/</id>
    <published>2016-05-05T15:01:49.000Z</published>
    <updated>2016-05-07T15:11:02.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://chaijs.com/img/chai-logo-small.png&quot; alt=&quot;chai&quot;&gt;&lt;/p&gt;
&lt;p&gt;有了 Mocha 之後，那也少不了要引入 assertion library，這裡就用 Chai 當範例。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var chai = require(&amp;#39;chai&amp;#39;);&amp;#10;global.should = chai.should();&amp;#10;&amp;#10;describe(&amp;#39;mokayo&amp;#39;, function() &amp;#123;&amp;#10;  it(&amp;#39;check title&amp;#39;, function() &amp;#123;&amp;#10;      browser.url(&amp;#39;http://blog.mokayo.com/&amp;#39;);&amp;#10;      var title = browser.getTitle();&amp;#10;      title.should.be.equal(&amp;#39;&amp;#25945;&amp;#20320;&amp;#25152;&amp;#24819;&amp;#23416;&amp;#30340;&amp;#65292;&amp;#29992;&amp;#30524;&amp;#27138;&amp;#35712; - blog.mokayo.com&amp;#39;);&amp;#10;  &amp;#125;);&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alincode/front-end-test-sandbox/tree/master/webdriverio-sandbox2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原始碼下載&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://chaijs.com/img/chai-logo-small.png&quot; alt=&quot;chai&quot;&gt;&lt;/p&gt;
&lt;p&gt;有了 Mocha 之後，那也少不了要引入 assertion library，這裡就用 Chai 當範例。&lt;/p&gt;
&lt;figure
    
    </summary>
    
      <category term="前端測試" scheme="http://alincode.github.io/categories/%E5%89%8D%E7%AB%AF%E6%B8%AC%E8%A9%A6/"/>
    
    
      <category term="WebdriverIO" scheme="http://alincode.github.io/tags/WebdriverIO/"/>
    
      <category term="chai" scheme="http://alincode.github.io/tags/chai/"/>
    
  </entry>
  
  <entry>
    <title>發散式變化 vs 霰彈式修改</title>
    <link href="http://alincode.github.io/2016/05/04/Divergent-Change-vs-Shotgun-Surgery/"/>
    <id>http://alincode.github.io/2016/05/04/Divergent-Change-vs-Shotgun-Surgery/</id>
    <published>2016-05-04T02:22:22.000Z</published>
    <updated>2016-05-07T03:19:52.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;發散式變化-Divergent-Change&quot;&gt;&lt;a href=&quot;#發散式變化-Divergent-Change&quot; class=&quot;headerlink&quot; title=&quot;發散式變化(Divergent Change)&quot;&gt;&lt;/a&gt;發散式變化(Divergent Change)&lt;/h3&gt;&lt;p&gt;一個類別做了多於它責任的事，應該把這個 function 搬到其他類別或獨立一個類別。&lt;/p&gt;
&lt;h4 id=&quot;改變前&quot;&gt;&lt;a href=&quot;#改變前&quot; class=&quot;headerlink&quot; title=&quot;改變前&quot;&gt;&lt;/a&gt;改變前&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Account&amp;#10;function getAccount&amp;#10;function getBalance&amp;#10;function credit&amp;#10;function debit&amp;#10;function toXml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;toXml 似乎不算 Account 的責任，而且 toXml 的邏輯，可以在其他地方也會用到，所以應該把它獨立出來一個類別或搬到它應該所屬的類別。&lt;/p&gt;
&lt;h4 id=&quot;改變後&quot;&gt;&lt;a href=&quot;#改變後&quot; class=&quot;headerlink&quot; title=&quot;改變後&quot;&gt;&lt;/a&gt;改變後&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Account&amp;#10;function getAccount&amp;#10;function getBalance&amp;#10;function credit&amp;#10;function debit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class XmlTool&amp;#10;function toAccountXml(account)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;霰彈式修改-Shotgun-Surgery&quot;&gt;&lt;a href=&quot;#霰彈式修改-Shotgun-Surgery&quot; class=&quot;headerlink&quot; title=&quot;霰彈式修改(Shotgun Surgery)&quot;&gt;&lt;/a&gt;霰彈式修改(Shotgun Surgery)&lt;/h3&gt;&lt;p&gt;當你需要有一個邏輯更變，需要修改多個類別，那應該把這些更變，搬到同個類別，而不是多個類別同時承受同個責任。&lt;/p&gt;
&lt;h4 id=&quot;改變前-1&quot;&gt;&lt;a href=&quot;#改變前-1&quot; class=&quot;headerlink&quot; title=&quot;改變前&quot;&gt;&lt;/a&gt;改變前&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class OrderService&amp;#10;function sendMail&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class PaymentService&amp;#10;function sendMail&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class UserService&amp;#10;function sendMail&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;改變後-1&quot;&gt;&lt;a href=&quot;#改變後-1&quot; class=&quot;headerlink&quot; title=&quot;改變後&quot;&gt;&lt;/a&gt;改變後&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class MailerService&amp;#10;function orderConfirmed&amp;#10;function paymentConfirmed&amp;#10;function registerConfirmd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;發散式變化-Divergent-Change&quot;&gt;&lt;a href=&quot;#發散式變化-Divergent-Change&quot; class=&quot;headerlink&quot; title=&quot;發散式變化(Divergent Change)&quot;&gt;&lt;/a&gt;發散式變化(Divergent Cha
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>歐付寶 ChoosePayment vs PaymentType</title>
    <link href="http://alincode.github.io/2016/05/03/allpay-ChoosePayment-vs-paymentType/"/>
    <id>http://alincode.github.io/2016/05/03/allpay-ChoosePayment-vs-paymentType/</id>
    <published>2016-05-03T14:56:58.000Z</published>
    <updated>2016-05-04T15:31:32.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://www.allpay.com.tw/Content/Themes/WebStyle20131201/images/header_logo.png&quot; alt=&quot;allpay&quot;&gt;&lt;/p&gt;
&lt;p&gt;記錄一下最近抓到前人留下來的 bug，這幾個值是完全不一樣的東西，但在名字或值上非常相似。&lt;/p&gt;
&lt;h3 id=&quot;訂單產生&quot;&gt;&lt;a href=&quot;#訂單產生&quot; class=&quot;headerlink&quot; title=&quot;訂單產生&quot;&gt;&lt;/a&gt;訂單產生&lt;/h3&gt;&lt;p&gt;時機發生在發出去的 request&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PaymentType = 交易類型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ChoosePayment = 付款方式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Credit:&amp;#20449;&amp;#29992;&amp;#21345;&amp;#10;WebATM:&amp;#32178;&amp;#36335; ATM&amp;#10;ATM:&amp;#33258;&amp;#21205;&amp;#27331;&amp;#21729;&amp;#27231;&amp;#10;CVS:&amp;#36229;&amp;#21830;&amp;#20195;&amp;#30908;&amp;#10;BARCODE:&amp;#36229;&amp;#21830;&amp;#26781;&amp;#30908;&amp;#10;Alipay:&amp;#25903;&amp;#20184;&amp;#23542;&amp;#10;Tenpay:&amp;#36001;&amp;#20184;&amp;#36890;&amp;#10;TopUpUsed:&amp;#20786;&amp;#20540;&amp;#28040;&amp;#36027;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;ATM、CVS-或-BARCODE-的取號結果通知&quot;&gt;&lt;a href=&quot;#ATM、CVS-或-BARCODE-的取號結果通知&quot; class=&quot;headerlink&quot; title=&quot;ATM、CVS 或 BARCODE 的取號結果通知&quot;&gt;&lt;/a&gt;ATM、CVS 或 BARCODE 的取號結果通知&lt;/h3&gt;&lt;p&gt;時機發生在被動收到的 response&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PaymentType = 會員選擇的付款方式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ATM_TAISHIN&amp;#10;(...&amp;#30053;...&amp;#38750;&amp;#24120;&amp;#22810;&amp;#31278;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.allpay.com.tw/Content/Themes/WebStyle20131201/images/header_logo.png&quot; alt=&quot;allpay&quot;&gt;&lt;/p&gt;
&lt;p&gt;記錄一下最近抓到前人留下來的 bug，這幾個值是
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sequelizejs HasOne vs belongsTo</title>
    <link href="http://alincode.github.io/2016/05/02/sequelizejs-HasOne-vs-belongsTo/"/>
    <id>http://alincode.github.io/2016/05/02/sequelizejs-HasOne-vs-belongsTo/</id>
    <published>2016-05-02T14:37:24.000Z</published>
    <updated>2016-05-04T14:47:44.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://docs.sequelizejs.com/en/latest/images/logo-small.png&quot; alt=&quot;sequelizejs&quot;&gt;&lt;/p&gt;
&lt;p&gt;兩個語法相當容易混淆，都是設為一對一的關聯，並可以使用 Shipment.getOrder 和 Order.getShipment 取到關聯的物件值，唯一不同在於實際外來鍵會存在 Shipment table 裡面。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Shipment.belongsTo(models.Order);&amp;#10;Order.hasOne(models.Shipment);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://docs.sequelizejs.com/en/latest/images/logo-small.png&quot; alt=&quot;sequelizejs&quot;&gt;&lt;/p&gt;
&lt;p&gt;兩個語法相當容易混淆，都是設為一對一的關聯，並可以使用 Shipment.get
    
    </summary>
    
    
      <category term="sequelizejs" scheme="http://alincode.github.io/tags/sequelizejs/"/>
    
  </entry>
  
  <entry>
    <title>WebdriverIO 介紹</title>
    <link href="http://alincode.github.io/2016/05/01/webdriverio-introduction/"/>
    <id>http://alincode.github.io/2016/05/01/webdriverio-introduction/</id>
    <published>2016-05-01T10:02:29.000Z</published>
    <updated>2016-04-30T07:02:28.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;什麼是-WebdriverIO&quot;&gt;&lt;a href=&quot;#什麼是-WebdriverIO&quot; class=&quot;headerlink&quot; title=&quot;什麼是 WebdriverIO&quot;&gt;&lt;/a&gt;什麼是 WebdriverIO&lt;/h3&gt;&lt;img src=&quot;/blog/2016/05/01/webdriverio-introduction/webdriverio.png&quot; alt=&quot;webdriverio.png&quot; title=&quot;&quot;&gt;
&lt;ul&gt;
&lt;li&gt;WebdriverIO 是一個 open source 專案，用 NodeJS 語言所撰寫的測試工具，它讓你讓你只撰寫少許的 code，就能控制你的瀏覽器。&lt;/li&gt;
&lt;li&gt;底層透過呼叫 selenium 去操縱瀏覽器行為&lt;/li&gt;
&lt;li&gt;你的測試 code 將看起來簡單、清晰、易於閱讀，並可以整合 BDD 或 TDD 測試框架。&lt;/li&gt;
&lt;li&gt;你也可以將測試程式，透過像 Sauce Labs or BrowserStack 的雲端服務，做到測試所有種類平台跟裝置的需求。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;WebdriverIO-的特色&quot;&gt;&lt;a href=&quot;#WebdriverIO-的特色&quot; class=&quot;headerlink&quot; title=&quot;WebdriverIO 的特色&quot;&gt;&lt;/a&gt;WebdriverIO 的特色&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;synchronous command handling&lt;/li&gt;
&lt;li&gt;支援多種 hooks&lt;/li&gt;
&lt;li&gt;支援命令式撰寫模式&lt;/li&gt;
&lt;li&gt;Visual Regression Test Integration&lt;/li&gt;
&lt;li&gt;支援 Gulp 和 Grunt&lt;/li&gt;
&lt;li&gt;selector chaining&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什麼是-WebdriverIO&quot;&gt;&lt;a href=&quot;#什麼是-WebdriverIO&quot; class=&quot;headerlink&quot; title=&quot;什麼是 WebdriverIO&quot;&gt;&lt;/a&gt;什麼是 WebdriverIO&lt;/h3&gt;&lt;img src=&quot;/blog/2016/
    
    </summary>
    
      <category term="前端測試" scheme="http://alincode.github.io/categories/%E5%89%8D%E7%AB%AF%E6%B8%AC%E8%A9%A6/"/>
    
    
      <category term="WebdriverIO" scheme="http://alincode.github.io/tags/WebdriverIO/"/>
    
  </entry>
  
  <entry>
    <title>WebdriverIO 與 Chimp 和 Mocha 整合</title>
    <link href="http://alincode.github.io/2016/04/30/webdriverio-with-chimp-with-mocha/"/>
    <id>http://alincode.github.io/2016/04/30/webdriverio-with-chimp-with-mocha/</id>
    <published>2016-04-30T08:41:38.000Z</published>
    <updated>2016-05-07T14:49:46.000Z</updated>
    
    <content type="html">&lt;p&gt;此篇與之前的教學延續，WebdriverIO 基礎的部分，請看舊文。&lt;/p&gt;
&lt;h3 id=&quot;安裝-Chimp&quot;&gt;&lt;a href=&quot;#安裝-Chimp&quot; class=&quot;headerlink&quot; title=&quot;安裝 Chimp&quot;&gt;&lt;/a&gt;安裝 Chimp&lt;/h3&gt;&lt;p&gt;&lt;code&gt;npm install -g chimp&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;撰寫一個自動化測試-script&quot;&gt;&lt;a href=&quot;#撰寫一個自動化測試-script&quot; class=&quot;headerlink&quot; title=&quot;撰寫一個自動化測試 script&quot;&gt;&lt;/a&gt;撰寫一個自動化測試 script&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/xolvio/chimp/raw/master/images/realtime.gif?raw=true&quot; alt=&quot;官方範例&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;圖片來自於官方網站&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這邊就直接使用了官網上的範例。需要特別注意的一點是在測試描述的標題上，需要加入 &lt;code&gt;@watch&lt;/code&gt; 才會被監聽。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;describe(&amp;#39;Chimp Mocha&amp;#39;, () =&amp;#62; &amp;#123;&amp;#10;  describe(&amp;#39;Page title&amp;#39;, () =&amp;#62; &amp;#123;&amp;#10;    it(&amp;#39;should be set by the Meteor method @watch&amp;#39;, () =&amp;#62; &amp;#123;&amp;#10;      browser.url(&amp;#39;http://google.com&amp;#39;);&amp;#10;      expect(browser.getTitle()).to.equal(&amp;#39;Google&amp;#39;);&amp;#10;    &amp;#125;);&amp;#10;  &amp;#125;);&amp;#10;&amp;#10;  describe(&amp;#39;ES2015&amp;#39;, function () &amp;#123;&amp;#10;    it(&amp;#39;is supported&amp;#39;, function () &amp;#123;&amp;#10;      const &amp;#123;a, b&amp;#125; = &amp;#123;a: &amp;#39;foo&amp;#39;, b: &amp;#39;bar&amp;#39;&amp;#125;;&amp;#10;      const arrowFunc = (foo) =&amp;#62; foo;&amp;#10;      class Foo &amp;#123;&amp;#10;        constructor() &amp;#123;&amp;#125;&amp;#10;        foo() &amp;#123;&amp;#125;&amp;#10;      &amp;#125;&amp;#10;      var object = &amp;#123;&amp;#10;        foo() &amp;#123;&amp;#125;&amp;#10;      &amp;#125;;&amp;#10;      const templateString = `Foo`;&amp;#10;      const [c, ,d] = [1,2,3];&amp;#10;    &amp;#125;);&amp;#10;  &amp;#125;);&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;執行&quot;&gt;&lt;a href=&quot;#執行&quot; class=&quot;headerlink&quot; title=&quot;執行&quot;&gt;&lt;/a&gt;執行&lt;/h3&gt;&lt;p&gt;&lt;code&gt;chimp --mocha --watch --path=test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;預設的 path 是 features 資料夾，如果你的測試資料夾不在預設位置，則需另外指定 path 得值。&lt;/p&gt;
&lt;h3 id=&quot;問題排解&quot;&gt;&lt;a href=&quot;#問題排解&quot; class=&quot;headerlink&quot; title=&quot;問題排解&quot;&gt;&lt;/a&gt;問題排解&lt;/h3&gt;&lt;p&gt; Using removed Babel 5 option: base.stage - Check out the corresponding stage-x presets &lt;a href=&quot;http://babeljs.io/docs/plugins/#presets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://babeljs.io/docs/plugins/#presets&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;安裝-Babel&quot;&gt;&lt;a href=&quot;#安裝-Babel&quot; class=&quot;headerlink&quot; title=&quot;安裝 Babel&quot;&gt;&lt;/a&gt;安裝 Babel&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i babel-preset-es2015 -S&amp;#10;npm i babel-preset-stage-2 -S&amp;#10;npm i babel-plugin-transform-runtime -S&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;建立-Babel-設定檔-babelrc&quot;&gt;&lt;a href=&quot;#建立-Babel-設定檔-babelrc&quot; class=&quot;headerlink&quot; title=&quot;建立 Babel 設定檔 .babelrc&quot;&gt;&lt;/a&gt;建立 Babel 設定檔 .babelrc&lt;/h4&gt; &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&amp;#10;  &amp;#34;plugins&amp;#34;: [&amp;#34;transform-runtime&amp;#34;],&amp;#10;  &amp;#34;presets&amp;#34;: [&amp;#34;es2015&amp;#34;, &amp;#34;stage-2&amp;#34;]&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;參考資料&quot;&gt;&lt;a href=&quot;#參考資料&quot; class=&quot;headerlink&quot; title=&quot;參考資料&quot;&gt;&lt;/a&gt;參考資料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://chimp.readme.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;chimp 官網&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alincode/front-end-test-sandbox/tree/master/webdriverio-sandbox3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原始範例下載&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;此篇與之前的教學延續，WebdriverIO 基礎的部分，請看舊文。&lt;/p&gt;
&lt;h3 id=&quot;安裝-Chimp&quot;&gt;&lt;a href=&quot;#安裝-Chimp&quot; class=&quot;headerlink&quot; title=&quot;安裝 Chimp&quot;&gt;&lt;/a&gt;安裝 Chimp&lt;/h3&gt;&lt;p&gt;&lt;cod
    
    </summary>
    
      <category term="前端測試" scheme="http://alincode.github.io/categories/%E5%89%8D%E7%AB%AF%E6%B8%AC%E8%A9%A6/"/>
    
    
      <category term="Chimp" scheme="http://alincode.github.io/tags/Chimp/"/>
    
      <category term="Mocha" scheme="http://alincode.github.io/tags/Mocha/"/>
    
      <category term="WebdriverIO" scheme="http://alincode.github.io/tags/WebdriverIO/"/>
    
  </entry>
  
  <entry>
    <title>被討厭的勇氣 (重點 5) - 認真活在當下</title>
    <link href="http://alincode.github.io/2016/04/29/Hated-courage-part-5/"/>
    <id>http://alincode.github.io/2016/04/29/Hated-courage-part-5/</id>
    <published>2016-04-29T13:14:57.000Z</published>
    <updated>2016-04-29T09:38:27.000Z</updated>
    
    <content type="html">&lt;img src=&quot;/blog/2016/04/29/Hated-courage-part-5/book.png&quot; alt=&quot;book.png&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;接納自己-gt-肯定自己&quot;&gt;&lt;a href=&quot;#接納自己-gt-肯定自己&quot; class=&quot;headerlink&quot; title=&quot;接納自己 &amp;gt; 肯定自己&quot;&gt;&lt;/a&gt;接納自己 &amp;gt; 肯定自己&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;怎麼擁有社會意識？其中需要的是「接納自我」「信任他人」「貢獻他人」。&lt;/li&gt;
&lt;li&gt;所謂的肯定自我，是明明做不到，卻要暗示自己「我可以」、「我很強」。這種想法也會&lt;code&gt;連結到優越情結上，算欺騙自己的一種生活方式。&lt;/code&gt;另一方面，接納自我」是在自己無能為力的情況下，&lt;code&gt;坦然接受那個「辦不到的自己」，而且盡最大努力朝目標前進，不欺騙自己。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;專注在可以改變&quot;&gt;&lt;a href=&quot;#專注在可以改變&quot; class=&quot;headerlink&quot; title=&quot;專注在可以改變&quot;&gt;&lt;/a&gt;專注在可以改變&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;要分辨「可以改變」的，跟「不能改變的」。&lt;/li&gt;
&lt;li&gt;我們「經歷了什麼」，是無法改變的，但是「如何運用它」卻可以憑自己的力量去決定。既然如此，就&lt;code&gt;不要聚焦在無法改變的事，只關注在可以改變的事。&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;請你給我平靜的心，去接納無法改變的事物；請給我勇氣，去改變可以改變的東西；並給我智慧，去分辨這兩者的差異。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;信任&quot;&gt;&lt;a href=&quot;#信任&quot; class=&quot;headerlink&quot; title=&quot;信任&quot;&gt;&lt;/a&gt;信任&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在怎麼無條件信任他人，最後不過是遭到背叛而已？決定要不要背叛的並不是你，那是他人的課題。&lt;code&gt;你只需要考慮自己要怎麼做就行了。&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不斷擔心「遭到背叛」，只注意受傷時的痛苦，但是&lt;code&gt;只要你害怕信任，終將無法和任何人建立深厚的關係。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;奉獻&quot;&gt;&lt;a href=&quot;#奉獻&quot; class=&quot;headerlink&quot; title=&quot;奉獻&quot;&gt;&lt;/a&gt;奉獻&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;奉獻他人並不是自我犧牲。那些為別人犧牲自己人生的人，是「過度適應社會」，需要警惕。&lt;/li&gt;
&lt;li&gt;所謂的「貢獻他人」並不是捨棄「我」去為某人鞠躬盡瘁，說穿了，是&lt;code&gt;為了實際感受「我」的價值才做的。&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;對人類而言，最大的不幸是不喜歡自己。只要認為「我對共同體有幫助」「我對某人有用處」，可以讓自己實際感受到自己的價值就對了。&lt;/li&gt;
&lt;li&gt;所謂的幸福，就是奉獻感。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;缺乏人生協調&quot;&gt;&lt;a href=&quot;#缺乏人生協調&quot; class=&quot;headerlink&quot; title=&quot;缺乏人生協調&quot;&gt;&lt;/a&gt;缺乏人生協調&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;的確，這世上並不全都是好人。但必須要搞清楚一個事實，那就是無論在哪種情況下，只有發動攻擊的「那個人」是有問題的，絕對不是「大家」都錯了。&lt;/li&gt;
&lt;li&gt;只看見事物的一小部分，就拿來當成整體的判斷依據，是一種缺乏「人生協調」的生活方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;追求卓越的疑慮&quot;&gt;&lt;a href=&quot;#追求卓越的疑慮&quot; class=&quot;headerlink&quot; title=&quot;追求卓越的疑慮&quot;&gt;&lt;/a&gt;追求卓越的疑慮&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;追求卓越容易遇到一種狀況，一旦達不到「特別好」的狀況，遇到一些挫折，就會轉變成為「特別差」。&lt;/li&gt;
&lt;li&gt;拒絕接受平凡的你，恐怕是把「平凡」和「無能」畫上了等號吧？平凡並不是沒有能力，而是我們&lt;code&gt;沒有必要刻意炫耀自己的優越性&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;人生是一連串的剎那&quot;&gt;&lt;a href=&quot;#人生是一連串的剎那&quot; class=&quot;headerlink&quot; title=&quot;人生是一連串的剎那&quot;&gt;&lt;/a&gt;人生是一連串的剎那&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;人生如果就像一場登山攻頂的活動，那麼&lt;code&gt;人生將有一大半的時間都是在「半路上」&lt;/code&gt;。也就是當你征服那座山後，「真正的人生」才開始，在那之前的上坡路只不過是「虛假的我」所度過的「虛假的人生」。&lt;/li&gt;
&lt;li&gt;那種「在半路上無法到達目的地」的人生，算是「變動式的人生」；相對的，我所說的舞動的人生，則可以稱為「實現式的人生」。&lt;/li&gt;
&lt;li&gt;旅行的目的是什麼？你會盡可能有效率地快點到達目的地，然後以最短距離的方式趕回家嗎？&lt;/li&gt;
&lt;li&gt;生活形態說的是「當下」，是可以依照自己的意願去改變。人生中看起來像是直線的過去，因為你一再決定「不要改變」，當然就只能是一條直線。&lt;/li&gt;
&lt;li&gt;不需要用直線去衡量自己已經到了哪裡，而是要看看每一個剎那是如何度過的。&lt;/li&gt;
&lt;li&gt;只要認真活在「當下」，它本身就已經是一段舞。沒有必要太過嚴肅；&lt;code&gt;不要把認真和嚴肅搞混了。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;/blog/2016/04/29/Hated-courage-part-5/book.png&quot; alt=&quot;book.png&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;接納自己-gt-肯定自己&quot;&gt;&lt;a href=&quot;#接納自己-gt-肯定自己&quot; class=&quot;head
    
    </summary>
    
      <category term="非專業書閱讀" scheme="http://alincode.github.io/categories/%E9%9D%9E%E5%B0%88%E6%A5%AD%E6%9B%B8%E9%96%B1%E8%AE%80/"/>
    
    
      <category term="被討厭的勇氣" scheme="http://alincode.github.io/tags/%E8%A2%AB%E8%A8%8E%E5%8E%AD%E7%9A%84%E5%8B%87%E6%B0%A3/"/>
    
  </entry>
  
</feed>
