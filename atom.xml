<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>alincode</title>
  <subtitle>學無止境</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://alincode.github.io/blog/"/>
  <updated>2016-04-10T19:17:13.000Z</updated>
  <id>http://alincode.github.io/blog/</id>
  
  <author>
    <name>alincode</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Geb for functional testing of Grails app 重點整理</title>
    <link href="http://alincode.github.io/blog/2016/04/11/Geb-for-functional-testing-of-Grails-app/"/>
    <id>http://alincode.github.io/blog/2016/04/11/Geb-for-functional-testing-of-Grails-app/</id>
    <published>2016-04-10T19:03:14.000Z</published>
    <updated>2016-04-10T19:17:13.000Z</updated>
    
    <content type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;//www.youtube.com/embed/HkJQYapam_s&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;p&gt;Geb for functional testing of Grails app | Jacob Aae Mikkelsen | GR8Conf India 2016&lt;/p&gt;
&lt;h3 id=&quot;為什麼我們要用Geb-06-04&quot;&gt;&lt;a href=&quot;#為什麼我們要用Geb-06-04&quot; class=&quot;headerlink&quot; title=&quot;為什麼我們要用Geb (06:04)&quot;&gt;&lt;/a&gt;為什麼我們要用Geb (06:04)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;類似於 JQuery 的語法&lt;/li&gt;
&lt;li&gt;具有非常強大的 WebDriver，卻是使用非常簡單的 API&lt;/li&gt;
&lt;li&gt;Robustness of Page Object Modeling&lt;/li&gt;
&lt;li&gt;使用 Groovy 描述性語言&lt;/li&gt;
&lt;li&gt;跟其他 build framework 整合得很好 (Gradle、Maven)&lt;/li&gt;
&lt;li&gt;可做為傑出的使用者文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Geb-selectors-09-52&quot;&gt;&lt;a href=&quot;#Geb-selectors-09-52&quot; class=&quot;headerlink&quot; title=&quot;Geb selectors (09:52)&quot;&gt;&lt;/a&gt;Geb selectors (09:52)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;相似於 JQuery 的語法&lt;/li&gt;
&lt;li&gt;支援 regex&lt;/li&gt;
&lt;li&gt;選取後，會回傳一個 Navigator 物件&lt;/li&gt;
&lt;li&gt;支援 CSS3 語法&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;取得資訊-12-30&quot;&gt;&lt;a href=&quot;#取得資訊-12-30&quot; class=&quot;headerlink&quot; title=&quot;取得資訊 (12:30)&quot;&gt;&lt;/a&gt;取得資訊 (12:30)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&amp;#39;p&amp;#39;).text() == &amp;#34;a&amp;#34;&amp;#10;$(&amp;#39;p&amp;#39;).tag() == &amp;#34;p&amp;#34;&amp;#10;$(&amp;#39;p&amp;#39;).@title == &amp;#34;a&amp;#34;&amp;#10;$(&amp;#39;p&amp;#39;).classes == [&amp;#34;a&amp;#8221;, &amp;#34;para&amp;#34;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;與內容相互作用-12-47&quot;&gt;&lt;a href=&quot;#與內容相互作用-12-47&quot; class=&quot;headerlink&quot; title=&quot;與內容相互作用 (12:47)&quot;&gt;&lt;/a&gt;與內容相互作用 (12:47)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&amp;#39;a&amp;#39;).click()&amp;#10;$(&amp;#39;div&amp;#39;).isDisplayed()&amp;#10;withConfirm &amp;#123;&amp;#10;  $(&amp;#39;button.delete&amp;#39;).click();&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;傳入-input-13-50&quot;&gt;&lt;a href=&quot;#傳入-input-13-50&quot; class=&quot;headerlink&quot; title=&quot;傳入 input (13:50)&quot;&gt;&lt;/a&gt;傳入 input (13:50)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&amp;#39;div&amp;#39;) &amp;#60;&amp;#60; &amp;#39;abc&amp;#39;&amp;#10;$(&amp;#39;input&amp;#39;, name: &amp;#39;foo&amp;#39;) &amp;#60;&amp;#60; Keys.chord(Keys.CONTROL, &amp;#39;c&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Interaction-14-25&quot;&gt;&lt;a href=&quot;#Interaction-14-25&quot; class=&quot;headerlink&quot; title=&quot;Interaction (14:25)&quot;&gt;&lt;/a&gt;Interaction (14:25)&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Using actions API from WebDriver is possible. But Geb provides the interact closure.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你也許可以使用 WebDriver 的 action API，但 Geb 提供更互動式的 closure。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import org.openga.selenium.Keys&amp;#10;&amp;#10;interact &amp;#123;&amp;#10;     KeyDown Keys.CTRL&amp;#10;     click $(&amp;#39;a.myLink&amp;#39;)&amp;#10;     keyUp Keys.CTRL&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;可使用的變數-16-15&quot;&gt;&lt;a href=&quot;#可使用的變數-16-15&quot; class=&quot;headerlink&quot; title=&quot;可使用的變數 (16:15)&quot;&gt;&lt;/a&gt;可使用的變數 (16:15)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;title&lt;/li&gt;
&lt;li&gt;browser&lt;/li&gt;
&lt;li&gt;currentUrl&lt;/li&gt;
&lt;li&gt;currentWindow&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;更多的可能-16-50&quot;&gt;&lt;a href=&quot;#更多的可能-16-50&quot; class=&quot;headerlink&quot; title=&quot;更多的可能 (16:50)&quot;&gt;&lt;/a&gt;更多的可能 (16:50)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;上傳檔案&lt;/li&gt;
&lt;li&gt;下載檔案&lt;/li&gt;
&lt;li&gt;與 js 互動&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;獨立的-Geb-script-17-10&quot;&gt;&lt;a href=&quot;#獨立的-Geb-script-17-10&quot; class=&quot;headerlink&quot; title=&quot;獨立的 Geb script (17:10)&quot;&gt;&lt;/a&gt;獨立的 Geb script (17:10)&lt;/h3&gt;&lt;h3 id=&quot;Geb-Spec-Basic-23-00&quot;&gt;&lt;a href=&quot;#Geb-Spec-Basic-23-00&quot; class=&quot;headerlink&quot; title=&quot;Geb Spec Basic (23:00)&quot;&gt;&lt;/a&gt;Geb Spec Basic (23:00)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import geb.spock.GebSpec&amp;#10;&amp;#10;@Stepwise&amp;#10;class XXXFunctionalSpec extends GebSpec &amp;#123;&amp;#10;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Page-物件-描述一個頁面-23-50&quot;&gt;&lt;a href=&quot;#Page-物件-描述一個頁面-23-50&quot; class=&quot;headerlink&quot; title=&quot;Page 物件 - 描述一個頁面 (23:50)&quot;&gt;&lt;/a&gt;Page 物件 - 描述一個頁面 (23:50)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Url&lt;/li&gt;
&lt;li&gt;如何檢查是否在對的地方&lt;/li&gt;
&lt;li&gt;內容是否是我們要的跟如何找到它&lt;/li&gt;
&lt;li&gt;Helper method&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;content-closure-25-35&quot;&gt;&lt;a href=&quot;#content-closure-25-35&quot; class=&quot;headerlink&quot; title=&quot;content closure (25:35)&quot;&gt;&lt;/a&gt;content closure (25:35)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static content = &amp;#123;&amp;#10;     info(required: false) &amp;#123;$(&amp;#39;div.info&amp;#39;)&amp;#125;&amp;#10;     message(wait: false) &amp;#123;$(&amp;#39;div.message&amp;#39;)&amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Modules-描述重複的內容-26-10&quot;&gt;&lt;a href=&quot;#Modules-描述重複的內容-26-10&quot; class=&quot;headerlink&quot; title=&quot;Modules - 描述重複的內容 (26:10)&quot;&gt;&lt;/a&gt;Modules - 描述重複的內容 (26:10)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;跨頁面&lt;/li&gt;
&lt;li&gt;Within the same page&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Modules-for-repeated-content-in-a-page-27-00&quot;&gt;&lt;a href=&quot;#Modules-for-repeated-content-in-a-page-27-00&quot; class=&quot;headerlink&quot; title=&quot;Modules for repeated content in a page (27:00)&quot;&gt;&lt;/a&gt;Modules for repeated content in a page (27:00)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import geb.Module&amp;#10;&amp;#10;class XXXListItemModules extends Module &amp;#123;&amp;#10;     data &amp;#123; $(&amp;#34;td&amp;#8221;, it) &amp;#125;&amp;#10;     name &amp;#123; data(0).text() &amp;#125;&amp;#10;     email &amp;#123; data(1).text() &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Waiting-36-00&quot;&gt;&lt;a href=&quot;#Waiting-36-00&quot; class=&quot;headerlink&quot; title=&quot;Waiting (36:00)&quot;&gt;&lt;/a&gt;Waiting (36:00)&lt;/h3&gt;&lt;p&gt;自定預設的 Waiting 設定值&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// GebConfig.groovy&amp;#10;waiting &amp;#123;&amp;#10;     timeout: 10&amp;#10;     retryInterval: 0.5&amp;#10;&amp;#125;&amp;#10;&amp;#10;baseNavigatorWaiting = true&amp;#10;atCheckWaiting = true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Pausing-Geb-36-55&quot;&gt;&lt;a href=&quot;#Pausing-Geb-36-55&quot; class=&quot;headerlink&quot; title=&quot;Pausing Geb (36:55)&quot;&gt;&lt;/a&gt;Pausing Geb (36:55)&lt;/h3&gt;&lt;p&gt;可做為 debug 用途&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;when:&amp;#10;pause() // for Pause Geb until button pressed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;//www.youtube.com/embed/HkJQYapam_s&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;p&gt;Geb for fu
    
    </summary>
    
    
      <category term="Geb" scheme="http://alincode.github.io/blog/tags/Geb/"/>
    
  </entry>
  
  <entry>
    <title>Buddy CI 與 Slack 整合</title>
    <link href="http://alincode.github.io/blog/2016/04/10/buddy-ci-4/"/>
    <id>http://alincode.github.io/blog/2016/04/10/buddy-ci-4/</id>
    <published>2016-04-09T18:03:56.000Z</published>
    <updated>2016-04-09T18:20:20.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;將-Slack-的訊息通知-Action-設上去&quot;&gt;&lt;a href=&quot;#將-Slack-的訊息通知-Action-設上去&quot; class=&quot;headerlink&quot; title=&quot;將 Slack 的訊息通知 Action 設上去&quot;&gt;&lt;/a&gt;將 Slack 的訊息通知 Action 設上去&lt;/h3&gt;&lt;img src=&quot;/blog/2016/04/10/buddy-ci-4/on-failure.png&quot; alt=&quot;on-failure.png&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;Action-內可以自訂要傳送的文字&quot;&gt;&lt;a href=&quot;#Action-內可以自訂要傳送的文字&quot; class=&quot;headerlink&quot; title=&quot;Action 內可以自訂要傳送的文字&quot;&gt;&lt;/a&gt;Action 內可以自訂要傳送的文字&lt;/h3&gt;&lt;img src=&quot;/blog/2016/04/10/buddy-ci-4/send-message-setting.png&quot; alt=&quot;send-message-setting.png&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;最後-Buddy-傳到-Slack-Channel-的結果&quot;&gt;&lt;a href=&quot;#最後-Buddy-傳到-Slack-Channel-的結果&quot; class=&quot;headerlink&quot; title=&quot;最後 Buddy 傳到 Slack Channel 的結果&quot;&gt;&lt;/a&gt;最後 Buddy 傳到 Slack Channel 的結果&lt;/h3&gt;&lt;img src=&quot;/blog/2016/04/10/buddy-ci-4/slack.png&quot; alt=&quot;slack.png&quot; title=&quot;&quot;&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;將-Slack-的訊息通知-Action-設上去&quot;&gt;&lt;a href=&quot;#將-Slack-的訊息通知-Action-設上去&quot; class=&quot;headerlink&quot; title=&quot;將 Slack 的訊息通知 Action 設上去&quot;&gt;&lt;/a&gt;將 Slack 的訊息通知 
    
    </summary>
    
    
      <category term="Buddy CI" scheme="http://alincode.github.io/blog/tags/Buddy-CI/"/>
    
  </entry>
  
  <entry>
    <title>Buddy CI 踩雷心得</title>
    <link href="http://alincode.github.io/blog/2016/04/09/buddy-ci-3/"/>
    <id>http://alincode.github.io/blog/2016/04/09/buddy-ci-3/</id>
    <published>2016-04-09T15:29:02.000Z</published>
    <updated>2016-04-09T17:50:27.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;script-內的指令，一定要指定指令路徑。&quot;&gt;&lt;a href=&quot;#script-內的指令，一定要指定指令路徑。&quot; class=&quot;headerlink&quot; title=&quot;script 內的指令，一定要指定指令路徑。&quot;&gt;&lt;/a&gt;script 內的指令，一定要指定指令路徑。&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;錯&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;grunt build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;對&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node_modules/.bin/grunt build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What you need to know about SSH commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each line is executed in the context of the working directory (default: user’s home dir) Lines are executed from top to bottom&lt;/li&gt;
&lt;li&gt;Each command should be one separate line&lt;/li&gt;
&lt;li&gt;If a command fails, the next line will not be executed and the action will fail (unless you check ignore errors)&lt;/li&gt;
&lt;li&gt;Use absolute paths: the cd command will not be carried to the next line You can use Buddy specific variables in commands and URL’s Environmental variables between lines are not shared&lt;/li&gt;
&lt;li&gt;If you want to use a more complex script, it its advised to call it from the server side (make sure the exit code it returns is correct).&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;免輸入github帳密&quot;&gt;&lt;a href=&quot;#免輸入github帳密&quot; class=&quot;headerlink&quot; title=&quot;免輸入github帳密&quot;&gt;&lt;/a&gt;免輸入github帳密&lt;/h3&gt;&lt;img src=&quot;/blog/2016/04/09/buddy-ci-3/git_pull_error.png&quot; alt=&quot;git_pull_error.png&quot; title=&quot;&quot;&gt;
&lt;p&gt;因為是透過 Buddy robot 去執行 script，所以當 script 有用到 git pull 指令，就一定得設 github 的免密碼 ssh。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/generating-an-ssh-key/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github - Generating an SSH key&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;小提醒&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;設定完，別忘了改 &lt;code&gt;.git/config&lt;/code&gt; 裡的 url，要變成 ssh 格式的，例如 &lt;code&gt;git@github.com:yourname/xxxxx.git&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;設定-node-的-path&quot;&gt;&lt;a href=&quot;#設定-node-的-path&quot; class=&quot;headerlink&quot; title=&quot;設定 node 的 path&quot;&gt;&lt;/a&gt;設定 node 的 path&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/node-v0.x-archive/issues/3911&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;run npm command gives error “/usr/bin/env: node: No such file or directory&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;解法&quot;&gt;&lt;a href=&quot;#解法&quot; class=&quot;headerlink&quot; title=&quot;解法&quot;&gt;&lt;/a&gt;解法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;ln -s /usr/bin/nodejs /usr/bin/node&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;script-內的指令，一定要指定指令路徑。&quot;&gt;&lt;a href=&quot;#script-內的指令，一定要指定指令路徑。&quot; class=&quot;headerlink&quot; title=&quot;script 內的指令，一定要指定指令路徑。&quot;&gt;&lt;/a&gt;script 內的指令，一定要指定指令路
    
    </summary>
    
    
      <category term="Buddy CI" scheme="http://alincode.github.io/blog/tags/Buddy-CI/"/>
    
  </entry>
  
  <entry>
    <title>Buddy CI Pipelines 流程</title>
    <link href="http://alincode.github.io/blog/2016/04/08/buddy-ci-2/"/>
    <id>http://alincode.github.io/blog/2016/04/08/buddy-ci-2/</id>
    <published>2016-04-08T15:48:35.000Z</published>
    <updated>2016-04-09T18:08:35.000Z</updated>
    
    <content type="html">&lt;p&gt;每個帳號一開始進去，它就已經建好一個 sample project，基本每個 Pipeline 由四個步驟所組成。每個步驟中，可指定多個 Action。&lt;/p&gt;
&lt;h3 id=&quot;Pipelines-的四個流程&quot;&gt;&lt;a href=&quot;#Pipelines-的四個流程&quot; class=&quot;headerlink&quot; title=&quot;Pipelines 的四個流程&quot;&gt;&lt;/a&gt;Pipelines 的四個流程&lt;/h3&gt;&lt;img src=&quot;/blog/2016/04/08/buddy-ci-2/4-step.png&quot; alt=&quot;4-step.png&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;On-Manual-Every-push-Recurrently-Run&quot;&gt;&lt;a href=&quot;#On-Manual-Every-push-Recurrently-Run&quot; class=&quot;headerlink&quot; title=&quot;On ( Manual / Every push / Recurrently ) Run&quot;&gt;&lt;/a&gt;On ( Manual / Every push / Recurrently ) Run&lt;/h4&gt;&lt;p&gt;觸發 build 的條件，對應到之前指定的 &lt;code&gt;Trigger Mode&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;On-Success&quot;&gt;&lt;a href=&quot;#On-Success&quot; class=&quot;headerlink&quot; title=&quot;On Success&quot;&gt;&lt;/a&gt;On Success&lt;/h4&gt;&lt;p&gt;指定 build 成功後，所觸發的一連串 Action&lt;/p&gt;
&lt;h4 id=&quot;On-Failure&quot;&gt;&lt;a href=&quot;#On-Failure&quot; class=&quot;headerlink&quot; title=&quot;On Failure&quot;&gt;&lt;/a&gt;On Failure&lt;/h4&gt;&lt;p&gt;指定 build 失敗後，所觸發的一連串 Action&lt;/p&gt;
&lt;h4 id=&quot;On-Back-To-Success&quot;&gt;&lt;a href=&quot;#On-Back-To-Success&quot; class=&quot;headerlink&quot; title=&quot;On Back To Success&quot;&gt;&lt;/a&gt;On Back To Success&lt;/h4&gt;&lt;p&gt;指定從 build 失敗恢復後，所觸發的一連串 Action&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;每個帳號一開始進去，它就已經建好一個 sample project，基本每個 Pipeline 由四個步驟所組成。每個步驟中，可指定多個 Action。&lt;/p&gt;
&lt;h3 id=&quot;Pipelines-的四個流程&quot;&gt;&lt;a href=&quot;#Pipelines-的四個流程&quot; clas
    
    </summary>
    
    
      <category term="Buddy CI" scheme="http://alincode.github.io/blog/tags/Buddy-CI/"/>
    
  </entry>
  
  <entry>
    <title>Buddy CI 介紹</title>
    <link href="http://alincode.github.io/blog/2016/04/07/buddy-ci/"/>
    <id>http://alincode.github.io/blog/2016/04/07/buddy-ci/</id>
    <published>2016-04-07T15:14:39.000Z</published>
    <updated>2016-04-09T18:09:57.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://buddy.works&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Buddy CI / CD&lt;/a&gt; 是一個挺新的 CI 雲端服務方案，推出於2015年中旬。&lt;/p&gt;
&lt;img src=&quot;/blog/2016/04/07/buddy-ci/pipelines.png&quot; alt=&quot;pipelines.png&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;收費方案&quot;&gt;&lt;a href=&quot;#收費方案&quot; class=&quot;headerlink&quot; title=&quot;收費方案&quot;&gt;&lt;/a&gt;收費方案&lt;/h3&gt;&lt;p&gt;只使用一個專案的情況下免費，之後新增的每個專案每月 5 USD，每個專案有無限制的空間、使用者數、跟 pipelines。&lt;/p&gt;
&lt;h3 id=&quot;支援的語言&quot;&gt;&lt;a href=&quot;#支援的語言&quot; class=&quot;headerlink&quot; title=&quot;支援的語言&quot;&gt;&lt;/a&gt;支援的語言&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;li&gt;Node.js&lt;/li&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;li&gt;Scala&lt;/li&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;Go&lt;/li&gt;
&lt;li&gt;Erlang&lt;/li&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;整合的的功能有&quot;&gt;&lt;a href=&quot;#整合的的功能有&quot; class=&quot;headerlink&quot; title=&quot;整合的的功能有&quot;&gt;&lt;/a&gt;整合的的功能有&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;執行在 build 與 docker&lt;/li&gt;
&lt;li&gt;傳送檔案&lt;ul&gt;
&lt;li&gt;FTP&lt;/li&gt;
&lt;li&gt;FTPS&lt;/li&gt;
&lt;li&gt;SFTP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;支援部署到 IAAS&lt;ul&gt;
&lt;li&gt;AMAZON S3&lt;/li&gt;
&lt;li&gt;HEROKU&lt;/li&gt;
&lt;li&gt;DIGITAL OCEAN&lt;/li&gt;
&lt;li&gt;MODULUS&lt;/li&gt;
&lt;li&gt;ELASTIC BEANSTALK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本控制&lt;ul&gt;
&lt;li&gt;WebDav&lt;/li&gt;
&lt;li&gt;Git push&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DEVOPS&lt;ul&gt;
&lt;li&gt;執行 SSH 命令指令&lt;/li&gt;
&lt;li&gt;在 HEROKU 上執行命令指令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;訊息通知&lt;ul&gt;
&lt;li&gt;傳送 HTTP POST&lt;/li&gt;
&lt;li&gt;Slack&lt;/li&gt;
&lt;li&gt;簡訊&lt;/li&gt;
&lt;li&gt;Email&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;監控的方式&lt;ul&gt;
&lt;li&gt;Web&lt;/li&gt;
&lt;li&gt;Ping&lt;/li&gt;
&lt;li&gt;TCP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;核心架構&quot;&gt;&lt;a href=&quot;#核心架構&quot; class=&quot;headerlink&quot; title=&quot;核心架構&quot;&gt;&lt;/a&gt;核心架構&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;What are pipelines?&lt;br&gt;A pipeline is a sequence of Continuous Delivery actions. For example, you can configure Buddy to upload files to the server and update assets on AWS on every push to branch, or create a pipeline that will build, test and deploy your mobile app.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所有服務都圍繞在一個 pipeline 的觀念身上，這裡的 pipeline 是指一連串有順序的 Continuous Delivery 動作，例如你可以透過預先的設定，透過 Buddy 提供的自動化整合服務，當每次你的 source code repo 有更動時，可上傳檔案到你的 server 端，或建立一系列建構、測試、部署你的應用程式。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://buddy.works&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Buddy CI / CD&lt;/a&gt; 是一個挺新的 CI 雲端服務方案，推出於2015年中旬。&lt;/p&gt;
&lt;img src=&quot;/blog/2016/04/0
    
    </summary>
    
    
      <category term="Buddy CI" scheme="http://alincode.github.io/blog/tags/Buddy-CI/"/>
    
  </entry>
  
  <entry>
    <title>Building Isomorphic Web Applications with React 重點整理</title>
    <link href="http://alincode.github.io/blog/2016/04/06/Building-Isomorphic-Web-Applications-with-React/"/>
    <id>http://alincode.github.io/blog/2016/04/06/Building-Isomorphic-Web-Applications-with-React/</id>
    <published>2016-04-06T15:12:46.000Z</published>
    <updated>2016-04-10T19:21:35.000Z</updated>
    
    <content type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;//www.youtube.com/embed/QPXNb6bl7hc&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;h3 id=&quot;為什麼我們要用-Isomorphic-1-50&quot;&gt;&lt;a href=&quot;#為什麼我們要用-Isomorphic-1-50&quot; class=&quot;headerlink&quot; title=&quot;為什麼我們要用 Isomorphic (1:50)&quot;&gt;&lt;/a&gt;為什麼我們要用 Isomorphic (1:50)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;SEO 爬蟲&lt;/li&gt;
&lt;li&gt;效能&lt;br&gt;server side 已經 build 好了 html，client 只需要 render html 的部分。&lt;/li&gt;
&lt;li&gt;dev 的好處&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;支援-React-Isomorphic-的框架-7-30&quot;&gt;&lt;a href=&quot;#支援-React-Isomorphic-的框架-7-30&quot; class=&quot;headerlink&quot; title=&quot;支援 React Isomorphic 的框架 (7:30)&quot;&gt;&lt;/a&gt;支援 React Isomorphic 的框架 (7:30)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Pellet (Vevo)&lt;/li&gt;
&lt;li&gt;React Nexus&lt;/li&gt;
&lt;li&gt;Relay (Facebook)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;React-讓-Isomorphic-架構變成可能-8-00&quot;&gt;&lt;a href=&quot;#React-讓-Isomorphic-架構變成可能-8-00&quot; class=&quot;headerlink&quot; title=&quot;React 讓 Isomorphic 架構變成可能 (8:00)&quot;&gt;&lt;/a&gt;React 讓 Isomorphic 架構變成可能 (8:00)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Virtual DOM&lt;br&gt;Virtual DOM vs xxx DOM&lt;br&gt;Virtual DOM is small update&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;In-the-Browser&quot;&gt;&lt;a href=&quot;#In-the-Browser&quot; class=&quot;headerlink&quot; title=&quot;In the Browser&quot;&gt;&lt;/a&gt;In the Browser&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;SPA&lt;/li&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;React Router&lt;/li&gt;
&lt;li&gt;Browser Sync to serve / update the file&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Webpack-讓你做到了哪些事&quot;&gt;&lt;a href=&quot;#Webpack-讓你做到了哪些事&quot; class=&quot;headerlink&quot; title=&quot;Webpack 讓你做到了哪些事&quot;&gt;&lt;/a&gt;Webpack 讓你做到了哪些事&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;不同的環境產生不同的 build&lt;/li&gt;
&lt;li&gt;specific code&lt;/li&gt;
&lt;li&gt;Chunk code into smaller downloadable files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(….未完成…)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Functional View&lt;/li&gt;
&lt;li&gt;renderToString&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/elyseko/iso-react-demo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/elyseko/iso-react-demo&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;//www.youtube.com/embed/QPXNb6bl7hc&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;h3 id=&quot;為什麼我們
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>github 快速鍵</title>
    <link href="http://alincode.github.io/blog/2016/04/05/github-shortcut/"/>
    <id>http://alincode.github.io/blog/2016/04/05/github-shortcut/</id>
    <published>2016-04-05T14:18:54.000Z</published>
    <updated>2016-04-05T14:45:40.000Z</updated>
    
    <content type="html">&lt;p&gt;在一個 youtube 的教學影片看到，對方用快速搜尋檔案，才發現 github 有快速鍵，真是不錯。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快速鍵&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;g + n&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;查看你的通知訊息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;g + i&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;查看你的 issue&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;g + p&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;查看你的 pr&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;l&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;在檢視原始碼時，快速跳行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;t&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;搜尋檔案&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/using-keyboard-shortcuts/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多 Github 快速鍵&lt;/a&gt;&lt;/p&gt;
&lt;img src=&quot;/blog/2016/04/05/github-shortcut/search-file.png&quot; alt=&quot;search-file.png&quot; title=&quot;&quot;&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在一個 youtube 的教學影片看到，對方用快速搜尋檔案，才發現 github 有快速鍵，真是不錯。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快速鍵&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/the
    
    </summary>
    
    
      <category term="github" scheme="http://alincode.github.io/blog/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>view model vs model</title>
    <link href="http://alincode.github.io/blog/2016/04/04/view-model-vs-model/"/>
    <id>http://alincode.github.io/blog/2016/04/04/view-model-vs-model/</id>
    <published>2016-04-04T08:43:14.000Z</published>
    <updated>2016-04-06T05:43:15.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;View-Model&quot;&gt;&lt;a href=&quot;#View-Model&quot; class=&quot;headerlink&quot; title=&quot;View Model&quot;&gt;&lt;/a&gt;View Model&lt;/h3&gt;&lt;p&gt;除了 MVC 之外，後來 Microsoft 又提出一個 &lt;code&gt;model-view-view model (MVVM)&lt;/code&gt;，view model 是一種 model 的變形，有時候你 view 需要的資料，不只會包含一個 model，又或者它僅需要部分的資料，因為有部分不能傳給使用者，例如資料庫中記錄的密碼或一些對使用者無意義的資料，但對系統有意義的資料。&lt;/p&gt;
&lt;h3 id=&quot;Model&quot;&gt;&lt;a href=&quot;#Model&quot; class=&quot;headerlink&quot; title=&quot;Model&quot;&gt;&lt;/a&gt;Model&lt;/h3&gt;&lt;p&gt;不太嚴謹的說法，可以直接對照到資料庫的 table&lt;/p&gt;
&lt;h3 id=&quot;範例&quot;&gt;&lt;a href=&quot;#範例&quot; class=&quot;headerlink&quot; title=&quot;範例&quot;&gt;&lt;/a&gt;範例&lt;/h3&gt;&lt;h4 id=&quot;改變前&quot;&gt;&lt;a href=&quot;#改變前&quot; class=&quot;headerlink&quot; title=&quot;改變前&quot;&gt;&lt;/a&gt;改變前&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;User.js&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributes: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firstName: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lastName: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nickname: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    email: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    password: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    address: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    phone: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Profile.js&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributes: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...略...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;UserController.js&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apiMe: &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;(req, res) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!req.userId)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;userId is null&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; user = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; UserService.findById(req.userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; profile = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; ProfileService.findByUesrId(req.userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      user.toJSON();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      profile.toJSON();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.view(&lt;span class=&quot;string&quot;&gt;&#39;profile&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          email: user.email,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          nickname: user.nickname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          image: profile.image,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//...略...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res.serverError(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;改變後&quot;&gt;&lt;a href=&quot;#改變後&quot; class=&quot;headerlink&quot; title=&quot;改變後&quot;&gt;&lt;/a&gt;改變後&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;UserController.js&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; userViewModel = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;../viewModels/UserViewModel.js&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiMe: &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;(req, res) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!req.userId)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;userId is null&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.view(&lt;span class=&quot;string&quot;&gt;&#39;profile&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; userViewModel(req.userId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res.serverError(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;UserViewModel.js&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; (userId) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; user = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; UserService.findById(userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; profile = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; ProfileService.findByUesrId(userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  user.toJSON();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  profile.toJSON();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    email: user.email,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nickname: user.nickname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image: profile.image,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...略...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;結論&quot;&gt;&lt;a href=&quot;#結論&quot; class=&quot;headerlink&quot; title=&quot;結論&quot;&gt;&lt;/a&gt;結論&lt;/h3&gt;&lt;p&gt;主要是好處是把 ViewModel 封裝起來，在其他地方也可以被重複使用。&lt;/p&gt;
&lt;h3 id=&quot;補充&quot;&gt;&lt;a href=&quot;#補充&quot; class=&quot;headerlink&quot; title=&quot;補充&quot;&gt;&lt;/a&gt;補充&lt;/h3&gt;&lt;p&gt;View：主要是將 model 呈現給使用者&lt;br&gt;Controller：會接收使用者輸入的資料，並決定要顯示哪個 view。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;View-Model&quot;&gt;&lt;a href=&quot;#View-Model&quot; class=&quot;headerlink&quot; title=&quot;View Model&quot;&gt;&lt;/a&gt;View Model&lt;/h3&gt;&lt;p&gt;除了 MVC 之外，後來 Microsoft 又提出一個 &lt;code&gt;mod
    
    </summary>
    
    
      <category term="view model" scheme="http://alincode.github.io/blog/tags/view-model/"/>
    
  </entry>
  
  <entry>
    <title>PM2 管理工具</title>
    <link href="http://alincode.github.io/blog/2016/04/03/PM2/"/>
    <id>http://alincode.github.io/blog/2016/04/03/PM2/</id>
    <published>2016-04-02T18:30:15.000Z</published>
    <updated>2016-04-03T15:39:20.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;PM2&lt;/code&gt; 主要的功能是保證你的 process 永遠活著，如果你的程序發生意外關閉，它會自動幫你重開。如果你同時要開多個程序，又帶了一堆參數，PM2 可以提供更簡易的管理，即使只用到你的開發主機，也可以避免不小心把 terminal 關掉，一直要重開它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提供的功能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;內建簡易監控功能&lt;/li&gt;
&lt;li&gt;Cluster Mode&lt;/li&gt;
&lt;li&gt;記憶體管理，重新 reload&lt;/li&gt;
&lt;li&gt;Hot reload&lt;/li&gt;
&lt;li&gt;啟動參數設定檔化&lt;/li&gt;
&lt;li&gt;Log 管理&lt;/li&gt;
&lt;li&gt;支援啟動 Scripts&lt;/li&gt;
&lt;li&gt;Keymetrics 監控&lt;/li&gt;
&lt;li&gt;提供 API，你可以運用它，實做一些你自定的需求。&lt;/li&gt;
&lt;li&gt;Deployment workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;安裝&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install pm2@latest -g&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;常用指令&quot;&gt;&lt;a href=&quot;#常用指令&quot; class=&quot;headerlink&quot; title=&quot;常用指令&quot;&gt;&lt;/a&gt;常用指令&lt;/h2&gt;&lt;h3 id=&quot;基本程序操作&quot;&gt;&lt;a href=&quot;#基本程序操作&quot; class=&quot;headerlink&quot; title=&quot;基本程序操作&quot;&gt;&lt;/a&gt;基本程序操作&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;說明&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;備註&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pm2 start app.js&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;啟動程序&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pm2 stop all&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;停止所有程序&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pm2 stop 0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;停止單一程序&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;pm2 stop [pid]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pm2 restart all&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;重啟所有程序&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pm2 delete 0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;刪除單一程序&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;進階啟動程序&quot;&gt;&lt;a href=&quot;#進階啟動程序&quot; class=&quot;headerlink&quot; title=&quot;進階啟動程序&quot;&gt;&lt;/a&gt;進階啟動程序&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;啟動程序並指定名稱&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pm2 start app.js --name my-api&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;啟動程序並帶變數&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NODE_ENV=local pm2 start app.js --name my-api&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;查看程序&quot;&gt;&lt;a href=&quot;#查看程序&quot; class=&quot;headerlink&quot; title=&quot;查看程序&quot;&gt;&lt;/a&gt;查看程序&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;查看所有註冊的程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pm2 list&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/blog/2016/04/03/PM2/pm2.png&quot; alt=&quot;pm2.png&quot; title=&quot;&quot;&gt;
&lt;p&gt;&lt;strong&gt;查看程序內容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pm2 show 0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;監看程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pm2 monit&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/blog/2016/04/03/PM2/monit.png&quot; alt=&quot;monit.png&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;log-相關指令&quot;&gt;&lt;a href=&quot;#log-相關指令&quot; class=&quot;headerlink&quot; title=&quot;log 相關指令&quot;&gt;&lt;/a&gt;log 相關指令&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;查看log集合&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pm2 logs&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/blog/2016/04/03/PM2/logs.png&quot; alt=&quot;logs.png&quot; title=&quot;&quot;&gt;
&lt;p&gt;&lt;strong&gt;清空log&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pm2 flush&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;PM2&lt;/code&gt; 主要的功能是保證你的 process 永遠活著，如果你的程序發生意外關閉，它會自動幫你重開。如果你同時要開多個程序，又帶了一堆參數，PM2 可以提供更簡易的管理，即使只用到你的開發主機，也可以避免不小心把 terminal 關掉，一直要重開
    
    </summary>
    
    
      <category term="PM2" scheme="http://alincode.github.io/blog/tags/PM2/"/>
    
  </entry>
  
  <entry>
    <title>Geb 0.10.x ~ 0.12.x 更新重點</title>
    <link href="http://alincode.github.io/blog/2016/04/02/geb-version-12-x/"/>
    <id>http://alincode.github.io/blog/2016/04/02/geb-version-12-x/</id>
    <published>2016-04-01T23:46:19.000Z</published>
    <updated>2016-04-02T05:44:31.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;0-12-2&quot;&gt;&lt;a href=&quot;#0-12-2&quot; class=&quot;headerlink&quot; title=&quot;0.12.2&quot;&gt;&lt;/a&gt;0.12.2&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;改善對 Null 的驗證 &lt;a href=&quot;https://github.com/geb/issues/issues/398&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#398&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;0-12-1&quot;&gt;&lt;a href=&quot;#0-12-1&quot; class=&quot;headerlink&quot; title=&quot;0.12.1&quot;&gt;&lt;/a&gt;0.12.1&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;針對 Intellij 的抱怨修改 &lt;code&gt;waitFor()&lt;/code&gt; 使得 &lt;code&gt;waitFor()&lt;/code&gt; 可在 Intellij 被辨識 &lt;a href=&quot;https://github.com/geb/issues/issues/391&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#391&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;修正 class attribute selector 的錯誤，兩種寫法都應該可以正常執行。 &lt;a href=&quot;https://github.com/geb/issues/issues/390&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;390&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;寫法一&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static content = &amp;#123;&amp;#10;  userMenuButton &amp;#123; $(&amp;#39;a.user-menu-button&amp;#39;) &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;寫法二&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static content = &amp;#123;&amp;#10;  userMenuButton &amp;#123; $(&amp;#39;a&amp;#39;, class: &amp;#39;user-menu-button&amp;#39;) &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;0-12-0&quot;&gt;&lt;a href=&quot;#0-12-0&quot; class=&quot;headerlink&quot; title=&quot;0.12.0&quot;&gt;&lt;/a&gt;0.12.0&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;特別對 Page 和 module，有多項改善&lt;/li&gt;
&lt;li&gt;改善錯誤訊息，讓開發者更容易除錯&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;新功能&quot;&gt;&lt;a href=&quot;#新功能&quot; class=&quot;headerlink&quot; title=&quot;新功能&quot;&gt;&lt;/a&gt;新功能&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;支援 page 的 title 可以帶變數，變成可動態的。&lt;a href=&quot;https://github.com/geb/issues/issues/310&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#310&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ProductPage&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Page&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  String productId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ProductPage(String productId) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.productId = productId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; at = &amp;#123; title == &lt;span class=&quot;string&quot;&gt;&quot;Product &#39;$productId&#39;&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;to &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ProductPage(&lt;span class=&quot;string&quot;&gt;&quot;myId&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;支援在 Page 內，也可以使用 click 方法，做頁面切換&lt;a href=&quot;https://github.com/geb/issues/issues/183&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#183&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ListPage&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Page&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; content = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    movie(&lt;span class=&quot;string&quot;&gt;to:&lt;/span&gt; MoviePage) &amp;#123; $(&lt;span class=&quot;string&quot;&gt;&quot;a.movie&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;text:&lt;/span&gt; contains(it) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MoviePage&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Page&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; at = &amp;#123; title == movieTitle &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  String movieTitle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at ListPage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;movie.click &amp;#123; movieTitle = &lt;span class=&quot;string&quot;&gt;&quot;Jaws&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at MoviePage&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;改善 WaitTimeoutException 的錯誤訊息 &lt;a href=&quot;https://github.com/geb/issues/issues/386&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#386&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;waitFor block exception message contains cause&quot;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;  given:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; wait = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Wait(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  when:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  wait.waitFor &amp;#123; &lt;span class=&quot;string&quot;&gt;&#39;not empty&#39;&lt;/span&gt;.empty &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  then:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  WaitTimeoutException exception = thrown()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  exception.message.contains(&lt;span class=&quot;string&quot;&gt;&quot;&#39;not empty&#39;.empty&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/geb/geb/pull/103/commits/d1e19c8b552396621d80c34ba09a12b0a2a86a0d&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;test case&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/geb/geb/pull/103/commits/d1e19c8b552396621d80c34ba09a12b0a2a86a0d&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;改善 UnexpectedPageException 的錯誤訊息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Deprecations&quot;&gt;&lt;a href=&quot;#Deprecations&quot; class=&quot;headerlink&quot; title=&quot;Deprecations&quot;&gt;&lt;/a&gt;Deprecations&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;module(Class&amp;lt;? extends Module&amp;gt;, Map args) 被 Navigator.module(Module) 取代&lt;a href=&quot;https://github.com/geb/issues/issues/311&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#311&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;module(Class&amp;lt;? extends Module&amp;gt;, Navigator base, Map args) 被 Navigable.module(Module) 取代&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;重大改變&quot;&gt;&lt;a href=&quot;#重大改變&quot; class=&quot;headerlink&quot; title=&quot;重大改變&quot;&gt;&lt;/a&gt;重大改變&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Page.toString() now returns full page class name instead of its simple name.&lt;/li&gt;
&lt;li&gt;MissingPropertyException is thrown instead of UnresolvablePropertyException when content with a given name is not found on page or module.&lt;/li&gt;
&lt;li&gt;建構在 Groovy 2.3.10 and Spock 1.0-groovy-2.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;0-10-0&quot;&gt;&lt;a href=&quot;#0-10-0&quot; class=&quot;headerlink&quot; title=&quot;0.10.0&quot;&gt;&lt;/a&gt;0.10.0&lt;/h3&gt;&lt;p&gt;增加對 cloud browsers 的支援度&lt;/p&gt;
&lt;h4 id=&quot;新功能-1&quot;&gt;&lt;a href=&quot;#新功能-1&quot; class=&quot;headerlink&quot; title=&quot;新功能&quot;&gt;&lt;/a&gt;新功能&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Navigator 新增了一個 &lt;code&gt;css()&lt;/code&gt; &lt;a href=&quot;https://github.com/geb/issues/issues/141#event-279283375&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#141&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在 content 定義的區塊，多了一個 &lt;code&gt;atWait&lt;/code&gt; 的屬性，以增加對 ajax 動態新增元素的支援度 &lt;a href=&quot;https://github.com/geb/issues/issues/134&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#134&lt;/a&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static content = &amp;#123;&amp;#10;  submitButton(to: SuccessPage, toWait: true) &amp;#123; send() &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;bugs-修復&quot;&gt;&lt;a href=&quot;#bugs-修復&quot; class=&quot;headerlink&quot; title=&quot;bugs 修復&quot;&gt;&lt;/a&gt;bugs 修復&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;修復 manipulating checkboxes 取值時的問題 &lt;a href=&quot;https://github.com/geb/issues/issues/268&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#268&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;修復 withNewWindow() 和 withWindow() 再切換頁面時的一個小問題 &lt;a href=&quot;https://github.com/geb/issues/issues/279&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#279&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0-12-2&quot;&gt;&lt;a href=&quot;#0-12-2&quot; class=&quot;headerlink&quot; title=&quot;0.12.2&quot;&gt;&lt;/a&gt;0.12.2&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;改善對 Null 的驗證 &lt;a href=&quot;https://github.com/geb/iss
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Geb 0.13.x 更新重點</title>
    <link href="http://alincode.github.io/blog/2016/04/01/geb-version-13-x/"/>
    <id>http://alincode.github.io/blog/2016/04/01/geb-version-13-x/</id>
    <published>2016-04-01T13:28:33.000Z</published>
    <updated>2016-04-01T23:51:02.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;0-13-0&quot;&gt;&lt;a href=&quot;#0-13-0&quot; class=&quot;headerlink&quot; title=&quot;0.13.0&quot;&gt;&lt;/a&gt;0.13.0&lt;/h3&gt;&lt;h4 id=&quot;新功能&quot;&gt;&lt;a href=&quot;#新功能&quot; class=&quot;headerlink&quot; title=&quot;新功能&quot;&gt;&lt;/a&gt;新功能&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;對 Spock 和 Junit4 支援 config.reportOnTestFailureOnly&lt;a href=&quot;https://github.com/geb/issues/issues/92&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#92&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;新增 navigator 的 isFocused 方法&lt;a href=&quot;https://github.com/geb/issues/issues/208&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#208&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;提供更多的 InvalidPageContent exception，易於 debug &lt;a href=&quot;https://github.com/geb/issues/issues/109&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#109&lt;/a&gt; &lt;a href=&quot;https://github.com/geb/issues/issues/122&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#122&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;bugs-修復&quot;&gt;&lt;a href=&quot;#bugs-修復&quot; class=&quot;headerlink&quot; title=&quot;bugs 修復&quot;&gt;&lt;/a&gt;bugs 修復&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;修正與 TestNG 整合時，報表的 bug&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;…(待補)…&lt;/p&gt;
&lt;h4 id=&quot;Deprecations&quot;&gt;&lt;a href=&quot;#Deprecations&quot; class=&quot;headerlink&quot; title=&quot;Deprecations&quot;&gt;&lt;/a&gt;Deprecations&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;geb.testng.GebTest 被 geb.testng.GebTestTrait 取代&lt;/li&gt;
&lt;li&gt;geb.testng.GebReportingTest 被 geb.testng.GebReportingTestTrait 取代&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;重大改變&quot;&gt;&lt;a href=&quot;#重大改變&quot; class=&quot;headerlink&quot; title=&quot;重大改變&quot;&gt;&lt;/a&gt;重大改變&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Geb 0.13.0 相依在 Groovy 2.4.5 和 Spock 1.0-groovy-2.4&lt;/li&gt;
&lt;li&gt;在操作 Navigator 時，若選取多個元素，卻又呼叫只支援單元素 method 的時候，會拋出 SingleElementNavigatorOnlyMethodException &lt;a href=&quot;https://github.com/geb/issues/issues/284&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#284&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hasClass(java.lang.String),&amp;#10;is(java.lang.String),&amp;#10;isDisplayed(),&amp;#10;isDisabled(),&amp;#10;isEnabled(),&amp;#10;isReadOnly(),&amp;#10;isEditable(),&amp;#10;tag(),&amp;#10;text(),&amp;#10;getAttribute(java.lang.String),&amp;#10;attr(java.lang.String),&amp;#10;classes(),&amp;#10;value(),&amp;#10;click(),&amp;#10;getHeight(),&amp;#10;getWidth(),&amp;#10;getX(),&amp;#10;getY(),&amp;#10;css(java.lang.String),&amp;#10;isFocused().&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0-13-0&quot;&gt;&lt;a href=&quot;#0-13-0&quot; class=&quot;headerlink&quot; title=&quot;0.13.0&quot;&gt;&lt;/a&gt;0.13.0&lt;/h3&gt;&lt;h4 id=&quot;新功能&quot;&gt;&lt;a href=&quot;#新功能&quot; class=&quot;headerlink&quot; title=&quot;新功能
    
    </summary>
    
    
      <category term="Geb" scheme="http://alincode.github.io/blog/tags/Geb/"/>
    
  </entry>
  
  <entry>
    <title>Flux 生命週期範例</title>
    <link href="http://alincode.github.io/blog/2016/03/31/flux-life-cycle-demo/"/>
    <id>http://alincode.github.io/blog/2016/03/31/flux-life-cycle-demo/</id>
    <published>2016-03-30T19:52:49.000Z</published>
    <updated>2016-03-31T18:40:53.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/alincode/flux-sandbox/commit/6183e66dac79317f5e0b457a3e489e4de6abaf75&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;完整範例&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;初始化&quot;&gt;&lt;a href=&quot;#初始化&quot; class=&quot;headerlink&quot; title=&quot;初始化&quot;&gt;&lt;/a&gt;初始化&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;第一次 Component 被載入時，會做哪些事？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;執行 getInitialState&lt;/li&gt;
&lt;li&gt;getInitialState 去 Store 拿 state 第一次初始化需要載入的資料&lt;/li&gt;
&lt;li&gt;執行 componentWillMount&lt;/li&gt;
&lt;li&gt;執行 Component render&lt;/li&gt;
&lt;li&gt;執行 componentDidMount&lt;/li&gt;
&lt;li&gt;componentDidMount 會加入 store 的 addChangeListener&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TestStore.addChangeListener(this.storeCallback);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;有值更動時&quot;&gt;&lt;a href=&quot;#有值更動時&quot; class=&quot;headerlink&quot; title=&quot;有值更動時&quot;&gt;&lt;/a&gt;有值更動時&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;執行被 bind 的 onChange&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#60;textarea rows=&amp;#34;4&amp;#34; cols=&amp;#34;50&amp;#34; onChange=&amp;#123;this._onChange&amp;#125; value=&amp;#123;this.state.text&amp;#125;/&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;onChange 取得值後傳給 action&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;_onChange: function(event) &amp;#123;&amp;#10;   TestAction.updateText(event.target.value);&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action 呼叫 AppDispatcher，並告訴它要做什麼事(ActionTypes)，跟把要更新的值傳給它。&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module.exports = &amp;#123;&amp;#10;  updateText: function(text) &amp;#123;&amp;#10;    console.log(&amp;#39;=== action updateText ===&amp;#39;);&amp;#10;    AppDispatcher.dispatch(&amp;#123;&amp;#10;      type: ActionTypes.UPDATE_TEXT,&amp;#10;      text: text&amp;#10;    &amp;#125;);&amp;#10;  &amp;#125;,&amp;#10;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接著 Store 的 dispatcherIndex 被觸發&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatcherIndex: AppDispatcher.register(function(payload) &amp;#123;&amp;#10;    var action = payload.type;&amp;#10;    switch(action) &amp;#123;&amp;#10;      case TestConstants.ActionTypes.UPDATE_TEXT:&amp;#10;        _text = payload.text;&amp;#10;        TestStore.emitChange();&amp;#10;        break;&amp;#10;      default:&amp;#10;        console.log(&amp;#39;=== store dispatcherIndex default ===&amp;#39;);&amp;#10;    &amp;#125;&amp;#10;    return true; // No errors. Needed by promise in Dispatcher.&amp;#10;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;emitChange 被呼叫後，會通知所有 listen 這個 Store 的 Component，Component 的 callback 會收到通知。&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;storeCallback: function() &amp;#123;&amp;#10;  this.setState(getStateStores());&amp;#10;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;callback 要做的事，就是重新去 Store 拿新的值，並把自己更新(this.setState)。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;當 callback 做 setState 的時候，會觸發 shouldComponentUpdate，如果回傳值是 true&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;會接著執行 componentWillUpdate&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;然後會重新 render component&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;render 完後會，會執行 componentDidUpdate&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;資料來源&quot;&gt;&lt;a href=&quot;#資料來源&quot; class=&quot;headerlink&quot; title=&quot;資料來源&quot;&gt;&lt;/a&gt;資料來源&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/component-specs.html#lifecycle-methods&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Component Lifecycle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/alincode/flux-sandbox/commit/6183e66dac79317f5e0b457a3e489e4de6abaf75&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;完整範例&lt;/a
    
    </summary>
    
    
      <category term="Flux" scheme="http://alincode.github.io/blog/tags/Flux/"/>
    
  </entry>
  
  <entry>
    <title>React 防止連點</title>
    <link href="http://alincode.github.io/blog/2016/03/30/react-disable-button/"/>
    <id>http://alincode.github.io/blog/2016/03/30/react-disable-button/</id>
    <published>2016-03-30T15:09:36.000Z</published>
    <updated>2016-03-30T17:23:05.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;實作流程&quot;&gt;&lt;a href=&quot;#實作流程&quot; class=&quot;headerlink&quot; title=&quot;實作流程&quot;&gt;&lt;/a&gt;實作流程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;有一個 isSending 狀態，記錄是否在之前已經送出 submit，只是 response 還沒回來。&lt;/li&gt;
&lt;li&gt;加兩個 Action Type，AUTH_SENDING 和 AUTH_SENT&lt;/li&gt;
&lt;li&gt;在 Store 的地方要更新 isSending 狀態&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Component-要做的事&quot;&gt;&lt;a href=&quot;#Component-要做的事&quot; class=&quot;headerlink&quot; title=&quot;Component 要做的事&quot;&gt;&lt;/a&gt;Component 要做的事&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;submit() &amp;#123;&amp;#10;  var email = this.state.email&amp;#10;  var password =  this.state.password&amp;#10;&amp;#10;  if (email &amp;#38;&amp;#38; password &amp;#38;&amp;#38; !this.state.isSending) &amp;#123;&amp;#10;    AuthActions.login(email, password);&amp;#10;  &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Action-要做的事&quot;&gt;&lt;a href=&quot;#Action-要做的事&quot; class=&quot;headerlink&quot; title=&quot;Action 要做的事&quot;&gt;&lt;/a&gt;Action 要做的事&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module.exports.login = function(email, password) &amp;#123;&amp;#10;&amp;#10;  AppDispatcher.dispatch(&amp;#123;&amp;#10;    action: AuthConstants.AUTH_SENDING,&amp;#10;  &amp;#125;);&amp;#10;&amp;#10;  var req = new XMLHttpRequest();&amp;#10;  ...&amp;#30053;...&amp;#10;  req.onreadystatechange = function() &amp;#123;&amp;#10;    if (req.readyState !== 4) return;&amp;#10;&amp;#10;    AppDispatcher.dispatch(&amp;#123;&amp;#10;      action: AuthConstants.AUTH_SENT,&amp;#10;    &amp;#125;);&amp;#10;&amp;#10;    switch (req.status) &amp;#123;&amp;#10;      case 200:&amp;#10;        AppDispatcher.dispatch(&amp;#123;&amp;#10;          action: AuthConstants.AUTH_LOGINED,&amp;#10;          ...&amp;#30053;...&amp;#10;        &amp;#125;);&amp;#10;    &amp;#125;&amp;#10;  &amp;#125;;&amp;#10;  ...&amp;#30053;...&amp;#10;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Store-要做的事&quot;&gt;&lt;a href=&quot;#Store-要做的事&quot; class=&quot;headerlink&quot; title=&quot;Store 要做的事&quot;&gt;&lt;/a&gt;Store 要做的事&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;case AuthConstants.AUTH_SENDING:&amp;#10;  _isSending = true;&amp;#10;  AuthStore.emitChange();&amp;#10;  break;&amp;#10;&amp;#10;case AuthConstants.AUTH_SENT:&amp;#10;  _isSending = false;&amp;#10;  AuthStore.emitChange();&amp;#10;  break;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;實作流程&quot;&gt;&lt;a href=&quot;#實作流程&quot; class=&quot;headerlink&quot; title=&quot;實作流程&quot;&gt;&lt;/a&gt;實作流程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;有一個 isSending 狀態，記錄是否在之前已經送出 submit，只是 response 還沒回來。&lt;/l
    
    </summary>
    
    
      <category term="React" scheme="http://alincode.github.io/blog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Jade Mixins</title>
    <link href="http://alincode.github.io/blog/2016/03/29/jade-mixins/"/>
    <id>http://alincode.github.io/blog/2016/03/29/jade-mixins/</id>
    <published>2016-03-29T14:31:36.000Z</published>
    <updated>2016-03-29T17:13:40.000Z</updated>
    
    <content type="html">&lt;p&gt;一般在 &lt;code&gt;view engine&lt;/code&gt; 中，要如何有效的控制重複的 code，就是把重複的 code 封裝到另一個檔案，需要的時候直接寫 include，&lt;code&gt;Jade&lt;/code&gt; 也有提供這樣的功能。&lt;/p&gt;
&lt;h3 id=&quot;安裝測試環境&quot;&gt;&lt;a href=&quot;#安裝測試環境&quot; class=&quot;headerlink&quot; title=&quot;安裝測試環境&quot;&gt;&lt;/a&gt;安裝測試環境&lt;/h3&gt;&lt;p&gt;&lt;code&gt;sails new jade-sandbox --template=jade&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;範例&quot;&gt;&lt;a href=&quot;#範例&quot; class=&quot;headerlink&quot; title=&quot;範例&quot;&gt;&lt;/a&gt;範例&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/alincode/jade-sandbox&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;完整範例&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;單純無變化的-template&quot;&gt;&lt;a href=&quot;#單純無變化的-template&quot; class=&quot;headerlink&quot; title=&quot;單純無變化的 template&quot;&gt;&lt;/a&gt;單純無變化的 template&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;static-list-page.jade&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;include ./mixins/static-list&amp;#10;&amp;#10;block body&amp;#10;  +static-list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;mixin/static-list.jade&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mixin static-list&amp;#10;  ul&amp;#10;    li AAA&amp;#10;    li BBB&amp;#10;    li CCC&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;輸出格式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#60;ul&amp;#62;&amp;#10;  &amp;#60;li&amp;#62;AAA&amp;#60;/li&amp;#62;&amp;#10;  &amp;#60;li&amp;#62;BBB&amp;#60;/li&amp;#62;&amp;#10;  &amp;#60;li&amp;#62;CCC&amp;#60;/li&amp;#62;&amp;#10;&amp;#60;/ul&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;有帶參數的-template&quot;&gt;&lt;a href=&quot;#有帶參數的-template&quot; class=&quot;headerlink&quot; title=&quot;有帶參數的 template&quot;&gt;&lt;/a&gt;有帶參數的 template&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;color-page.jade&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;include ./mixins/color&amp;#10;&amp;#10;block body&amp;#10;  ul&amp;#10;    +color(&amp;#39;yellow&amp;#39;)&amp;#10;    +color(&amp;#39;red&amp;#39;)&amp;#10;    +color(&amp;#39;blue&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;mixins/color.jade&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mixin color(colorName)&amp;#10;  li.color= colorName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;輸出格式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#60;ul&amp;#62;&amp;#10;  &amp;#60;li class=&amp;#34;color&amp;#34;&amp;#62;yellow&amp;#60;/li&amp;#62;&amp;#10;  &amp;#60;li class=&amp;#34;color&amp;#34;&amp;#62;red&amp;#60;/li&amp;#62;&amp;#10;  &amp;#60;li class=&amp;#34;color&amp;#34;&amp;#62;blue&amp;#60;/li&amp;#62;&amp;#10;&amp;#60;/ul&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;有帶屬性的-template&quot;&gt;&lt;a href=&quot;#有帶屬性的-template&quot; class=&quot;headerlink&quot; title=&quot;有帶屬性的 template&quot;&gt;&lt;/a&gt;有帶屬性的 template&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;person-page.jade&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;include ./mixins/person&amp;#10;&amp;#10;block body&amp;#10;  ul&amp;#10;    +person(&amp;#34;Alin&amp;#34;)#first&amp;#10;    +person(&amp;#34;John&amp;#34;)(title=&amp;#34;&amp;#19968;&amp;#20491;&amp;#22909;&amp;#20154;&amp;#34;)&amp;#10;    +person(&amp;#34;Bill&amp;#34;).last&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;mixins/person.jade&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mixin person(name)&amp;#10;  div&amp;#38;attributes(attributes)= name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;輸出格式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#60;ul&amp;#62;&amp;#10;  &amp;#60;div id=&amp;#34;first&amp;#34;&amp;#62;Alin&amp;#60;/div&amp;#62;&amp;#10;  &amp;#60;div title=&amp;#34;&amp;#19968;&amp;#20491;&amp;#22909;&amp;#20154;&amp;#34;&amp;#62;John&amp;#60;/div&amp;#62;&amp;#10;  &amp;#60;div class=&amp;#34;last&amp;#34;&amp;#62;Bill&amp;#60;/div&amp;#62;&amp;#10;&amp;#60;/ul&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一般在 &lt;code&gt;view engine&lt;/code&gt; 中，要如何有效的控制重複的 code，就是把重複的 code 封裝到另一個檔案，需要的時候直接寫 include，&lt;code&gt;Jade&lt;/code&gt; 也有提供這樣的功能。&lt;/p&gt;
&lt;h3 id=&quot;安裝測試環境&quot;&gt;&lt;a
    
    </summary>
    
    
      <category term="Jade" scheme="http://alincode.github.io/blog/tags/Jade/"/>
    
      <category term="Mixins" scheme="http://alincode.github.io/blog/tags/Mixins/"/>
    
  </entry>
  
  <entry>
    <title>物件宣告 Sails 多國語系</title>
    <link href="http://alincode.github.io/blog/2016/03/28/sails-i18n-object-notation/"/>
    <id>http://alincode.github.io/blog/2016/03/28/sails-i18n-object-notation/</id>
    <published>2016-03-28T09:12:56.000Z</published>
    <updated>2016-03-28T10:41:10.000Z</updated>
    
    <content type="html">&lt;p&gt;Sails 官方的文件，在於說明多國語系的部分非常簡略，請教 Google 大師之後，發現 Sails 多國語系的底層是使用&lt;a href=&quot;https://github.com/mashpie/i18n-node&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;i18n-node&lt;/a&gt;，所以基本 i18n-node 有提供的功能都可以使用。&lt;/p&gt;
&lt;p&gt;objectNotation 這個功能預設是 false，所以必須得先設定。&lt;/p&gt;
&lt;h3 id=&quot;範例&quot;&gt;&lt;a href=&quot;#範例&quot; class=&quot;headerlink&quot; title=&quot;範例&quot;&gt;&lt;/a&gt;範例&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;修改多國語系設定檔&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// config/i18n.js&amp;#10;&amp;#10;module.exports.i18n = &amp;#123;&amp;#10;  updateFiles: true,&amp;#10;  localesDirectory: &amp;#39;/config/locales&amp;#39;,&amp;#10;  locales: [&amp;#39;en&amp;#39;, &amp;#39;zh&amp;#39;],&amp;#10;  // &amp;#21152;&amp;#36889;&amp;#34892;&amp;#10;  objectNotation: true&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;支援物件式的寫法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// config/locales/zh.json&amp;#10;&amp;#123;&amp;#10;  &amp;#34;admin&amp;#34;: &amp;#123;&amp;#10;    &amp;#34;common&amp;#34;: &amp;#123;&amp;#10;      &amp;#34;createdAt&amp;#34;: &amp;#34;&amp;#24314;&amp;#31435;&amp;#26085;&amp;#26399;&amp;#34;,&amp;#10;      &amp;#34;publishAt&amp;#34;: &amp;#34;&amp;#30332;&amp;#20296;&amp;#26085;&amp;#26399;&amp;#34;,&amp;#10;      &amp;#34;title&amp;#34;: &amp;#34;&amp;#27161;&amp;#38988;&amp;#34;,&amp;#10;      &amp;#34;content&amp;#34;: &amp;#34;&amp;#20839;&amp;#23481;&amp;#34;,&amp;#10;    &amp;#125;&amp;#10;  &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;修改 view 檔&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此範例是針對 &lt;code&gt;Jade&lt;/code&gt; 的寫法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#&amp;#123;i18n(&amp;#39;admin.common.createdAt&amp;#39;)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;相關連結&quot;&gt;&lt;a href=&quot;#相關連結&quot; class=&quot;headerlink&quot; title=&quot;相關連結&quot;&gt;&lt;/a&gt;相關連結&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/balderdashy/sails/issues/1878&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;i18n does not support the objectNotation config option &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sailsjs.org/documentation/reference/configuration/sails-config-i-18-n&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sails i18n&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Sails 官方的文件，在於說明多國語系的部分非常簡略，請教 Google 大師之後，發現 Sails 多國語系的底層是使用&lt;a href=&quot;https://github.com/mashpie/i18n-node&quot; target=&quot;_blank&quot; rel=&quot;externa
    
    </summary>
    
    
      <category term="Sails" scheme="http://alincode.github.io/blog/tags/Sails/"/>
    
      <category term="i18n" scheme="http://alincode.github.io/blog/tags/i18n/"/>
    
  </entry>
  
  <entry>
    <title>sequelize delete</title>
    <link href="http://alincode.github.io/blog/2016/03/27/sequelize-delete/"/>
    <id>http://alincode.github.io/blog/2016/03/27/sequelize-delete/</id>
    <published>2016-03-27T13:30:16.000Z</published>
    <updated>2016-03-27T13:47:14.000Z</updated>
    
    <content type="html">&lt;p&gt;當你需要刪除一筆資料，但不要實際刪除資料，只想多一個欄位叫 &lt;code&gt;deletedAt&lt;/code&gt;，並把刪除時間更新上去，&lt;code&gt;sequelize&lt;/code&gt; 有提供這個功能，真的蠻實用的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;don’t delete database entries but set the newly added attribute deletedAt&lt;br&gt; to the current date (when deletion was done). paranoid will only work if&lt;br&gt; timestamps are enabled&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var ContactUs = sequelize.define(&amp;#39;ContactUs&amp;#39;, &amp;#123;&amp;#10;  name: DataTypes.STRING,&amp;#10;  email: DataTypes.STRING,&amp;#10;  phone: DataTypes.STRING,&amp;#10;  content: DataTypes.TEXT,&amp;#10;&amp;#125;,&amp;#123;&amp;#10;  // &amp;#21152;&amp;#36889;&amp;#34892;&amp;#10;  paranoid: true,&amp;#10;  classMethods: &amp;#123;&amp;#10;    associate: function(models)&amp;#123;&amp;#10;    &amp;#125;&amp;#10;  &amp;#125;&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;資料來源&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://docs.sequelizejs.com/en/latest/docs/models-definition/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://docs.sequelizejs.com/en/latest/docs/models-definition/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;當你需要刪除一筆資料，但不要實際刪除資料，只想多一個欄位叫 &lt;code&gt;deletedAt&lt;/code&gt;，並把刪除時間更新上去，&lt;code&gt;sequelize&lt;/code&gt; 有提供這個功能，真的蠻實用的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;don’t delete d
    
    </summary>
    
    
      <category term="sequelize" scheme="http://alincode.github.io/blog/tags/sequelize/"/>
    
  </entry>
  
  <entry>
    <title>React Debug 小技巧</title>
    <link href="http://alincode.github.io/blog/2016/03/26/react-debug-tip/"/>
    <id>http://alincode.github.io/blog/2016/03/26/react-debug-tip/</id>
    <published>2016-03-25T18:00:19.000Z</published>
    <updated>2016-04-10T19:26:35.000Z</updated>
    
    <content type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;//www.youtube.com/embed/bvEC6i7CUyE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;p&gt;Flux Store Events&lt;/p&gt;
&lt;p&gt;其實也沒有高深的理論，但我從來沒想過可以這樣用，將 Store / Action / Dispatcher 暫時變成全域變數。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// TodoStore.js&amp;#10;window.todoStore = todoStore;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然後就可以在 Chrome Console 直接下，直接執行 function。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;todoStore.your-function-name();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://youtu.be/bvEC6i7CUyE?t=2m57s&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://youtu.be/bvEC6i7CUyE?t=2m57s&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;//www.youtube.com/embed/bvEC6i7CUyE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;p&gt;Flux Store
    
    </summary>
    
    
      <category term="debug" scheme="http://alincode.github.io/blog/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>取得其他 git remote branch</title>
    <link href="http://alincode.github.io/blog/2016/03/25/git-branch/"/>
    <id>http://alincode.github.io/blog/2016/03/25/git-branch/</id>
    <published>2016-03-25T15:18:45.000Z</published>
    <updated>2016-03-25T15:34:21.000Z</updated>
    
    <content type="html">&lt;p&gt;如果 remote 上面有很分支，你在下 &lt;code&gt;git clone&lt;/code&gt; 的時候，會發現它只有幫你建一個預設的分支。&lt;/p&gt;
&lt;h3 id=&quot;查看-local-分支&quot;&gt;&lt;a href=&quot;#查看-local-分支&quot; class=&quot;headerlink&quot; title=&quot;查看 local 分支&quot;&gt;&lt;/a&gt;查看 local 分支&lt;/h3&gt;&lt;p&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;checkout-origin-上其他分支&quot;&gt;&lt;a href=&quot;#checkout-origin-上其他分支&quot; class=&quot;headerlink&quot; title=&quot;checkout origin 上其他分支&quot;&gt;&lt;/a&gt;checkout origin 上其他分支&lt;/h3&gt;&lt;p&gt;如果你也需要 origin 上其他分支，你可以下 &lt;code&gt;git branch --all&lt;/code&gt; 找到你要 checkout 的分支名稱。&lt;/p&gt;
&lt;img src=&quot;/blog/2016/03/25/git-branch/git-branch.png&quot; alt=&quot;git-branch.png&quot; title=&quot;&quot;&gt;
&lt;p&gt;然後把分支 checkout 出來，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b master origin/master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;如果 remote 上面有很分支，你在下 &lt;code&gt;git clone&lt;/code&gt; 的時候，會發現它只有幫你建一個預設的分支。&lt;/p&gt;
&lt;h3 id=&quot;查看-local-分支&quot;&gt;&lt;a href=&quot;#查看-local-分支&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
    
      <category term="git branch" scheme="http://alincode.github.io/blog/tags/git-branch/"/>
    
  </entry>
  
  <entry>
    <title>JQuery Module Pattern</title>
    <link href="http://alincode.github.io/blog/2016/03/24/JQuery-Module-Pattern/"/>
    <id>http://alincode.github.io/blog/2016/03/24/JQuery-Module-Pattern/</id>
    <published>2016-03-24T13:36:33.000Z</published>
    <updated>2016-03-24T18:11:31.000Z</updated>
    
    <content type="html">&lt;p&gt;這個 Pattern 主要是可以區別出 Private 跟 Public 的變數跟函式，把不需要對外的資料封裝起來。&lt;/p&gt;
&lt;h3 id=&quot;範例&quot;&gt;&lt;a href=&quot;#範例&quot; class=&quot;headerlink&quot; title=&quot;範例&quot;&gt;&lt;/a&gt;範例&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(function($) &amp;#123;&amp;#10;&amp;#10;  // link The Module Pattern&amp;#10;  // https://learn.jquery.com/code-organization/concepts/&amp;#10;  var member = (function() &amp;#123;&amp;#10;&amp;#10;    // &amp;#31169;&amp;#26377;&amp;#35722;&amp;#25976;&amp;#10;    var deleteMemberElement = &amp;#39;#deleteMember&amp;#39;;&amp;#10;    var memberNoElement = &amp;#39;input[name=memberNo]&amp;#39;;&amp;#10;    var memberTypeElement = &amp;#39;#memberDetail select[name=memberType]&amp;#39;;&amp;#10;    var memberTypeSelectedElement = memberTypeElement + &amp;#39; :selected&amp;#39;;&amp;#10;&amp;#10;    // &amp;#31169;&amp;#26377;&amp;#20989;&amp;#24335;&amp;#10;    var deleteMember = function(e) &amp;#123;&amp;#10;      e.preventDefault();&amp;#10;    &amp;#125;&amp;#10;&amp;#10;    var checkMemberID = function(e) &amp;#123;&amp;#10;      e.preventDefault();&amp;#10;    &amp;#125;&amp;#10;&amp;#10;    var hello = function() &amp;#123;&amp;#10;      alert(&amp;#39;hello&amp;#39;);&amp;#10;    &amp;#125;&amp;#10;&amp;#10;    // &amp;#20844;&amp;#38283;&amp;#30340; API&amp;#10;    return &amp;#123;&amp;#10;      init: function() &amp;#123;&amp;#10;        $(deleteMemberElement).on(&amp;#39;click&amp;#39;, deleteMember);&amp;#10;        $(memberNoElement).on(&amp;#39;change&amp;#39;, checkMemberID);&amp;#10;      &amp;#125;,&amp;#10;      otherAPI: function() &amp;#123;&amp;#10;        hello();&amp;#10;      &amp;#125;&amp;#10;    &amp;#125;;&amp;#10;  &amp;#125;)();&amp;#10;&amp;#10;  member.init();&amp;#10;  member.otherAPI();&amp;#10;&amp;#10;&amp;#125;(jQuery));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;資料來源&quot;&gt;&lt;a href=&quot;#資料來源&quot; class=&quot;headerlink&quot; title=&quot;資料來源&quot;&gt;&lt;/a&gt;資料來源&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://learn.jquery.com/code-organization/concepts/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code Organization Concepts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;這個 Pattern 主要是可以區別出 Private 跟 Public 的變數跟函式，把不需要對外的資料封裝起來。&lt;/p&gt;
&lt;h3 id=&quot;範例&quot;&gt;&lt;a href=&quot;#範例&quot; class=&quot;headerlink&quot; title=&quot;範例&quot;&gt;&lt;/a&gt;範例&lt;/h3&gt;&lt;figure
    
    </summary>
    
    
      <category term="JQuery" scheme="http://alincode.github.io/blog/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>ckeditor 換行語法調整</title>
    <link href="http://alincode.github.io/blog/2016/03/23/ckeditor-p/"/>
    <id>http://alincode.github.io/blog/2016/03/23/ckeditor-p/</id>
    <published>2016-03-23T14:24:43.000Z</published>
    <updated>2016-03-23T19:22:53.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h3&gt;&lt;p&gt;你要先在 html 的地方，import plugin 檔案，此處不需要 import config 檔。&lt;/p&gt;
&lt;p&gt;特別注意 ckeditor.js 的目錄，會是 config.js 的根目錄，因為我第一次在試的時候，是直接設 ckeditor 的 CDN，然後有另一個獨立的 config 檔案，但這樣是不行的，如果 ckeditor.js 檔是 http url，那 customConfig 的地方，也會變成去抓 url，不是本機的位置。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;./ckeditor.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;第二步&quot;&gt;&lt;a href=&quot;#第二步&quot; class=&quot;headerlink&quot; title=&quot;第二步&quot;&gt;&lt;/a&gt;第二步&lt;/h3&gt;&lt;p&gt;在 html 檔案內，須有對應的 html 元素跟 JS&lt;/p&gt;
&lt;h4 id=&quot;html&quot;&gt;&lt;a href=&quot;#html&quot; class=&quot;headerlink&quot; title=&quot;html&quot;&gt;&lt;/a&gt;html&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#60;textarea name=&amp;#34;editor1&amp;#34; id=&amp;#34;editor1&amp;#34; rows=&amp;#34;10&amp;#34; cols=&amp;#34;80&amp;#34;&amp;#62;&amp;#10;    This is my textarea to be replaced with CKEditor.&amp;#10;&amp;#60;/textarea&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;js&quot;&gt;&lt;a href=&quot;#js&quot; class=&quot;headerlink&quot; title=&quot;js&quot;&gt;&lt;/a&gt;js&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CKEDITOR.replace( &amp;#39;editor1&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;p&gt;不使用預設的 config，另外獨立一個設定擋。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CKEDITOR.replace( &amp;#39;editor1&amp;#39;, &amp;#123;&amp;#10;  customConfig: &amp;#39;./custom/ckeditor_config.js&amp;#39;&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;第三步&quot;&gt;&lt;a href=&quot;#第三步&quot; class=&quot;headerlink&quot; title=&quot;第三步&quot;&gt;&lt;/a&gt;第三步&lt;/h3&gt;&lt;p&gt;改 config 設定內容，預設值是&lt;code&gt;P 元素&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config.enterMode = CKEDITOR.ENTER_P;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但還有其他選項，例如 &lt;code&gt;DIV 元素&lt;/code&gt; 或 &lt;code&gt;BR 元素&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config.enterMode = CKEDITOR.ENTER_DIV;&amp;#10;// or&amp;#10;config.enterMode = CKEDITOR.ENTER_BR;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;完整範例&quot;&gt;&lt;a href=&quot;#完整範例&quot; class=&quot;headerlink&quot; title=&quot;完整範例&quot;&gt;&lt;/a&gt;完整範例&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#60;!DOCTYPE html&amp;#62;&amp;#10;&amp;#60;html&amp;#62;&amp;#10;    &amp;#60;head&amp;#62;&amp;#10;        &amp;#60;meta charset=&amp;#34;utf-8&amp;#34;&amp;#62;&amp;#10;        &amp;#60;title&amp;#62;A Simple Page with CKEditor&amp;#60;/title&amp;#62;&amp;#10;        &amp;#60;!-- Make sure the path to CKEditor is correct. --&amp;#62;&amp;#10;        &amp;#60;script src=&amp;#34;./ckeditor.js&amp;#34;&amp;#62;&amp;#60;/script&amp;#62;&amp;#10;    &amp;#60;/head&amp;#62;&amp;#10;    &amp;#60;body&amp;#62;&amp;#10;        &amp;#60;form&amp;#62;&amp;#10;            &amp;#60;textarea name=&amp;#34;editor1&amp;#34; id=&amp;#34;editor1&amp;#34; rows=&amp;#34;10&amp;#34; cols=&amp;#34;80&amp;#34;&amp;#62;&amp;#10;                This is my textarea to be replaced with CKEditor.&amp;#10;            &amp;#60;/textarea&amp;#62;&amp;#10;            &amp;#60;script&amp;#62;&amp;#10;&amp;#10;                CKEDITOR.replace( &amp;#39;editor1&amp;#39;);&amp;#10;&amp;#10;&amp;#10;                // CKEDITOR.replace( &amp;#39;editor1&amp;#39;, &amp;#123;&amp;#10;                //     customConfig: &amp;#39;./custom/ckeditor_config.js&amp;#39;&amp;#10;                // &amp;#125;);&amp;#10;            &amp;#60;/script&amp;#62;&amp;#10;        &amp;#60;/form&amp;#62;&amp;#10;    &amp;#60;/body&amp;#62;&amp;#10;&amp;#60;/html&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// config.js &amp;#25110; ./custom/ckeditor_config.js&amp;#10;CKEDITOR.editorConfig = function( config ) &amp;#123;&amp;#10;  config.enterMode = CKEDITOR.ENTER_DIV;&amp;#10;  // config.enterMode = CKEDITOR.ENTER_BR;&amp;#10;  // config.enterMode = CKEDITOR.ENTER_P;&amp;#10;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h3&gt;&lt;p&gt;你要先在 html 的地方，import plugin 檔案，此處不需要 import config 檔。&lt;/p&gt;
&lt;p&gt;特別注意 
    
    </summary>
    
    
      <category term="ckeditor" scheme="http://alincode.github.io/blog/tags/ckeditor/"/>
    
  </entry>
  
</feed>
