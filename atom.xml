<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>alincode</title>
  <subtitle>學無止境</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://alincode.github.io/"/>
  <updated>2016-06-30T15:03:43.000Z</updated>
  <id>http://alincode.github.io/</id>
  
  <author>
    <name>alincode</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>單元測試錯誤排解 (1)</title>
    <link href="http://alincode.github.io/2016/07/01/unit-test-error-1/"/>
    <id>http://alincode.github.io/2016/07/01/unit-test-error-1/</id>
    <published>2016-07-01T14:45:30.000Z</published>
    <updated>2016-06-30T15:03:43.000Z</updated>
    
    <content type="html">&lt;p&gt;今天踩到一個自己種的雷，使用 &lt;a href=&quot;http://sailsjs.org/documentation/reference/response-res/res-ok&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;res.ok&lt;/a&gt; 的時候少了一個 &lt;code&gt;{ }&lt;/code&gt;，但其實如果你只傳一個物件，物件本身外層本來就有 &lt;code&gt;{ }&lt;/code&gt; 不需要再多一個 &lt;code&gt;{ }&lt;/code&gt;，但如果是傳基本型別，就一定得要有 &lt;code&gt;{ }&lt;/code&gt; 存在，缺少 &lt;code&gt;{ }&lt;/code&gt; 的時候，單元測試會抓到 &lt;code&gt;res.statusCode == 1&lt;/code&gt;，還蠻神奇的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主程式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;userlikes: async(req, res) =&amp;#62; &amp;#123;&amp;#10;  const gamelistId = req.params.gamelistId;&amp;#10;  try &amp;#123;&amp;#10;    let user = UserService.getLoginUser(req);&amp;#10;    let likeCount = await UserLikeService.like(user.id, gamelistId);&amp;#10;    //return res.ok(&amp;#10;    //  likeCount&amp;#10;    //);&amp;#10;    return res.ok(&amp;#123;&amp;#10;      likeCount&amp;#10;    &amp;#125;);&amp;#10;  &amp;#125; catch (e) &amp;#123;&amp;#10;    return res.serverError(e);&amp;#10;  &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;測試程式&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;it(&amp;#39;post /api/gamelists/:gamelistId/userlikes&amp;#39;, async(done) =&amp;#62; &amp;#123;&amp;#10; request(sails.hooks.http.app)&amp;#10;   .post(`/api/gamelists/$&amp;#123;gamelistId&amp;#125;/userlikes`)&amp;#10;   .end((err, res) =&amp;#62; &amp;#123;&amp;#10;     let result = res.body;&amp;#10;     // res.statusCode.should.be.equal(1);&amp;#10;     res.statusCode.should.be.equal(200);&amp;#10;     result.likeCount.should.be.equal(1);&amp;#10;     done(err);&amp;#10;   &amp;#125;);&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天踩到一個自己種的雷，使用 &lt;a href=&quot;http://sailsjs.org/documentation/reference/response-res/res-ok&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;res.ok&lt;/a&gt; 的時候少了一個
    
    </summary>
    
    
      <category term="Sails" scheme="http://alincode.github.io/tags/Sails/"/>
    
      <category term="Supertest" scheme="http://alincode.github.io/tags/Supertest/"/>
    
      <category term="Unit Test" scheme="http://alincode.github.io/tags/Unit-Test/"/>
    
  </entry>
  
  <entry>
    <title>WebdriverIO VS Protractor 架構(2)</title>
    <link href="http://alincode.github.io/2016/06/30/webdriverio-vs-protractor-architecture-2/"/>
    <id>http://alincode.github.io/2016/06/30/webdriverio-vs-protractor-architecture-2/</id>
    <published>2016-06-30T14:30:38.000Z</published>
    <updated>2016-06-29T14:42:26.000Z</updated>
    
    <content type="html">&lt;p&gt;基本上 WebdriverIO 跟 Protractor 的 Page Object Pattern 都一樣的醜陋，這時候才會發現 Geb 的美。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://webdriver.io/guide/testrunner/pageobjects.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WebdriverIO Page Object Pattern&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function Page () &amp;#123;&amp;#10;    this.title = &amp;#39;My Page&amp;#39;;&amp;#10;&amp;#125;&amp;#10;&amp;#10;Page.prototype.open = function (path) &amp;#123;&amp;#10;    browser.url(&amp;#39;/&amp;#39; + path)&amp;#10;&amp;#125;&amp;#10;&amp;#10;module.exports = new Page()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var Page = require(&amp;#39;./page&amp;#39;)&amp;#10;&amp;#10;var LoginPage = Object.create(Page, &amp;#123;&amp;#10;    /**&amp;#10;     * define elements&amp;#10;     */&amp;#10;    username: &amp;#123; get: function () &amp;#123; return browser.element(&amp;#39;#username&amp;#39;); &amp;#125; &amp;#125;,&amp;#10;    password: &amp;#123; get: function () &amp;#123; return browser.element(&amp;#39;#password&amp;#39;); &amp;#125; &amp;#125;,&amp;#10;    form:     &amp;#123; get: function () &amp;#123; return browser.element(&amp;#39;#login&amp;#39;); &amp;#125; &amp;#125;,&amp;#10;    flash:    &amp;#123; get: function () &amp;#123; return browser.element(&amp;#39;#flash&amp;#39;); &amp;#125; &amp;#125;,&amp;#10;&amp;#10;    /**&amp;#10;     * define or overwrite page methods&amp;#10;     */&amp;#10;    open: &amp;#123; value: function() &amp;#123;&amp;#10;        Page.open.call(this, &amp;#39;login&amp;#39;);&amp;#10;    &amp;#125; &amp;#125;,&amp;#10;&amp;#10;    submit: &amp;#123; value: function() &amp;#123;&amp;#10;        this.form.submitForm();&amp;#10;    &amp;#125; &amp;#125;&amp;#10;&amp;#125;);&amp;#10;&amp;#10;module.exports = LoginPage&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;呼叫 Page Object 使用方式&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var expect = require(&amp;#39;chai&amp;#39;).expect;&amp;#10;var LoginPage = require(&amp;#39;../pageobjects/login.page&amp;#39;);&amp;#10;&amp;#10;describe(&amp;#39;login form&amp;#39;, function () &amp;#123;&amp;#10;    it(&amp;#39;should deny access with wrong creds&amp;#39;, function () &amp;#123;&amp;#10;        LoginPage.open();&amp;#10;        LoginPage.username.setValue(&amp;#39;foo&amp;#39;);&amp;#10;        LoginPage.password.setValue(&amp;#39;bar&amp;#39;);&amp;#10;        LoginPage.submit();&amp;#10;&amp;#10;        expect(LoginPage.flash.getText()).to.contain(&amp;#39;Your username is invalid!&amp;#39;);&amp;#10;    &amp;#125;);&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/angular/protractor/blob/master/docs/page-objects.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Protractor Page Object Pattern&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var AngularHomepage = function() &amp;#123;&amp;#10;  var nameInput = element(by.model(&amp;#39;yourName&amp;#39;));&amp;#10;  var greeting = element(by.binding(&amp;#39;yourName&amp;#39;));&amp;#10;&amp;#10;  this.get = function() &amp;#123;&amp;#10;    browser.get(&amp;#39;http://www.angularjs.org&amp;#39;);&amp;#10;  &amp;#125;;&amp;#10;&amp;#10;  this.setName = function(name) &amp;#123;&amp;#10;    nameInput.sendKeys(name);&amp;#10;  &amp;#125;;&amp;#10;&amp;#10;  this.getGreeting = function() &amp;#123;&amp;#10;    return greeting.getText();&amp;#10;  &amp;#125;;&amp;#10;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;呼叫 Page Object 使用方式&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;describe(&amp;#39;angularjs homepage&amp;#39;, function() &amp;#123;&amp;#10;  it(&amp;#39;should greet the named user&amp;#39;, function() &amp;#123;&amp;#10;    var angularHomepage = new AngularHomepage();&amp;#10;    angularHomepage.get();&amp;#10;    angularHomepage.setName(&amp;#39;Julie&amp;#39;);&amp;#10;    expect(angularHomepage.getGreeting()).toEqual(&amp;#39;Hello Julie!&amp;#39;);&amp;#10;  &amp;#125;);&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.gebish.org/pages&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Geb Page Object Pattern&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import geb.Page&amp;#10;&amp;#10;class LoginPage extends Page &amp;#123;&amp;#10;    static url = &amp;#34;http://myapp.com/login&amp;#34;&amp;#10;    static at = &amp;#123; heading.text() == &amp;#34;Please Login&amp;#34; &amp;#125;&amp;#10;    static content = &amp;#123;&amp;#10;        heading &amp;#123; $(&amp;#34;h1&amp;#34;) &amp;#125;&amp;#10;        loginForm &amp;#123; $(&amp;#34;form.login&amp;#34;) &amp;#125;&amp;#10;        loginButton(to: AdminPage) &amp;#123; loginForm.login() &amp;#125;&amp;#10;    &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;呼叫 Page Object 使用方式&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import geb.Browser&amp;#10;&amp;#10;Browser.drive &amp;#123;&amp;#10;    to LoginPage&amp;#10;    assert at(LoginPage)&amp;#10;    loginForm.with &amp;#123;&amp;#10;        username = &amp;#34;admin&amp;#34;&amp;#10;        password = &amp;#34;password&amp;#34;&amp;#10;    &amp;#125;&amp;#10;    loginButton.click()&amp;#10;    assert at(AdminPage)&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;基本上 WebdriverIO 跟 Protractor 的 Page Object Pattern 都一樣的醜陋，這時候才會發現 Geb 的美。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://webdriver.io/guide/testrunner/pa
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>WebdriverIO vs Protractor 架構(1)</title>
    <link href="http://alincode.github.io/2016/06/29/webdriverio-vs-protractor-architecture/"/>
    <id>http://alincode.github.io/2016/06/29/webdriverio-vs-protractor-architecture/</id>
    <published>2016-06-29T13:41:27.000Z</published>
    <updated>2016-06-29T14:29:07.000Z</updated>
    
    <content type="html">&lt;p&gt;兩個都是目前非常當紅的前端測試框架，雖然他們都是透過呼叫 selenium server 去幫他們做一些事，但實際上從底層就有很大的不同。&lt;/p&gt;
&lt;p&gt;你可以從 Protractor 的 &lt;a href=&quot;https://github.com/angular/protractor/blob/master/package.json&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;package.json&lt;/a&gt; 中，可以找到 selenium-webdriver 的身影，所以基本上 Protractor 是針對 selenium-webdriver 做了一層更友善的界面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;圖一&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/blog/2016/06/29/webdriverio-vs-protractor-architecture/protractor.png&quot; alt=&quot;protractor.png&quot; title=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;而 WebdriverIO 你則無法從 package.json 找到相同的模組，原因是 WebdriverIO 的實作方式，並不直接長在 selenium-webdriver 之上，而是直接呼叫 selenium 的 &lt;a href=&quot;https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JsonWireProtocol&lt;/a&gt; RESTful API。&lt;/p&gt;
&lt;p&gt;Protractor 跟 selenium-webdriver API 的使用方式非常雷同。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://seleniumhq.github.io/selenium/docs/api/javascript/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;selenium-webdriver API&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var dog = driver.findElement(By.id(&amp;#39;dog_id&amp;#39;)).click();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.protractortest.org/#/api?view=webdriver.By.id&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Protractor API&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var dog = browser.findElement(by.id(&amp;#39;dog_id&amp;#39;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但 &lt;a href=&quot;http://webdriver.io/api/protocol/element.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WebdriverIO API&lt;/a&gt; 則更友善一點，非常肯定作者在這方面的努力。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var dog = client.element(&amp;#39;#dog_id&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;兩個都是目前非常當紅的前端測試框架，雖然他們都是透過呼叫 selenium server 去幫他們做一些事，但實際上從底層就有很大的不同。&lt;/p&gt;
&lt;p&gt;你可以從 Protractor 的 &lt;a href=&quot;https://github.com/angular/protra
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>整合 wdio selenium standalone service</title>
    <link href="http://alincode.github.io/2016/06/20/wdio-selenium-standalone-service/"/>
    <id>http://alincode.github.io/2016/06/20/wdio-selenium-standalone-service/</id>
    <published>2016-06-20T03:30:03.000Z</published>
    <updated>2016-06-20T03:45:35.000Z</updated>
    
    <content type="html">&lt;p&gt;最近 &lt;code&gt;WebdriverIO&lt;/code&gt; 又 release 一個新的 service，這個 service 主要是整合 &lt;code&gt;selenium standalone&lt;/code&gt; package，不需要另外執行 &lt;code&gt;selenium-standalone start&lt;/code&gt;，它會在背後自動 hook 做這件事。&lt;/p&gt;
&lt;p&gt;使用上也非常的簡單，只要&lt;a href=&quot;http://alincode.github.io/blog/2016/04/23/getting-started-with-WebdriverIO/&quot;&gt;原本的測試專案安裝&lt;/a&gt;，新增的 service &lt;code&gt;npm i wdio-selenium-standalone-service -D&lt;/code&gt;，並編輯 &lt;code&gt;wdio.conf.js&lt;/code&gt; 加入 &lt;code&gt;services: [&amp;#39;selenium-standalone&amp;#39;],&lt;/code&gt; 設定即可。&lt;/p&gt;
&lt;h3 id=&quot;Ref&quot;&gt;&lt;a href=&quot;#Ref&quot; class=&quot;headerlink&quot; title=&quot;Ref&quot;&gt;&lt;/a&gt;Ref&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://webdriver.io/guide/services/selenium-standalone.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SELENIUM STANDALONE SERVICE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近 &lt;code&gt;WebdriverIO&lt;/code&gt; 又 release 一個新的 service，這個 service 主要是整合 &lt;code&gt;selenium standalone&lt;/code&gt; package，不需要另外執行 &lt;code&gt;selenium-stand
    
    </summary>
    
      <category term="前端測試" scheme="http://alincode.github.io/categories/%E5%89%8D%E7%AB%AF%E6%B8%AC%E8%A9%A6/"/>
    
    
      <category term="WebdriverIO" scheme="http://alincode.github.io/tags/WebdriverIO/"/>
    
  </entry>
  
  <entry>
    <title>用 WebdriverIO 寫一個真實世界的登入範例</title>
    <link href="http://alincode.github.io/2016/06/13/webdriverio-realworld-test-case/"/>
    <id>http://alincode.github.io/2016/06/13/webdriverio-realworld-test-case/</id>
    <published>2016-06-13T05:25:02.000Z</published>
    <updated>2016-06-13T07:20:20.000Z</updated>
    
    <content type="html">&lt;p&gt;此篇會先以最基本的方式去撰寫，下一篇會將此篇相同的程式改寫成 Page Object Pattern。&lt;/p&gt;
&lt;h2 id=&quot;步驟解說&quot;&gt;&lt;a href=&quot;#步驟解說&quot; class=&quot;headerlink&quot; title=&quot;步驟解說&quot;&gt;&lt;/a&gt;步驟解說&lt;/h2&gt;&lt;p&gt;這是一個真實世界測試案例，針對正常登入流程進行測試，基本流程就是前往登入頁，並填入帳號密碼後，按登入按鈕，確認是否登入成功。現在我們一步一步去看，它到底做了什麼。&lt;/p&gt;
&lt;h3 id=&quot;步驟一&quot;&gt;&lt;a href=&quot;#步驟一&quot; class=&quot;headerlink&quot; title=&quot;步驟一&quot;&gt;&lt;/a&gt;步驟一&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;圖一&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/blog/2016/06/13/webdriverio-realworld-test-case/step1.png&quot; alt=&quot;step1.png&quot; title=&quot;&quot;&gt;
&lt;p&gt;因為前端測試是模擬使用者的行為，所以它只能點選使用者可視範圍，登入頁的連結是被隱藏在左側，所以需要先把側欄畫面點開來。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;圖二&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/blog/2016/06/13/webdriverio-realworld-test-case/step2.png&quot; alt=&quot;step2.png&quot; title=&quot;&quot;&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;it(&amp;#39;&amp;#21069;&amp;#24448;&amp;#30331;&amp;#20837;&amp;#38913;&amp;#39;, function(done) &amp;#123;&amp;#10;  browser.url(&amp;#39;/&amp;#39;);&amp;#10;  browser.click(&amp;#39;.open-panel&amp;#39;); // &amp;#22294;&amp;#19968;&amp;#10;  browser.click(&amp;#39;[href*=login]&amp;#39;); // &amp;#22294;&amp;#20108;&amp;#10;  browser.waitForExist(&amp;#39;[name=identifier]&amp;#39;);&amp;#10;  browser.getText(&amp;#39;.login-screen-title&amp;#39;).should.be.equal(&amp;#10;    &amp;#39;Login&amp;#39;);&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;點擊登入連結&lt;/li&gt;
&lt;li&gt;確認已經被轉到登入頁&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;步驟二&quot;&gt;&lt;a href=&quot;#步驟二&quot; class=&quot;headerlink&quot; title=&quot;步驟二&quot;&gt;&lt;/a&gt;步驟二&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;圖三&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/blog/2016/06/13/webdriverio-realworld-test-case/step3.png&quot; alt=&quot;step3.png&quot; title=&quot;&quot;&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;it(&amp;#39;&amp;#22635;&amp;#23531;&amp;#30331;&amp;#20837;&amp;#36039;&amp;#26009;&amp;#20006;&amp;#36865;&amp;#20986;&amp;#39;, function(done) &amp;#123;&amp;#10;  browser.elements(&amp;#39;[name=identifier]&amp;#39;).setValue(&amp;#39;demo&amp;#39;);&amp;#10;  browser.elements(&amp;#39;[name=password]&amp;#39;).setValue(&amp;#39;11111111&amp;#39;);&amp;#10;  browser.click(&amp;#39;[type=submit]&amp;#39;);&amp;#10;  browser.isExisting(&amp;#39;[name=identifier]&amp;#39;, false).should.be.equal(&amp;#10;    true);&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;填入帳號&lt;/li&gt;
&lt;li&gt;填入密碼&lt;/li&gt;
&lt;li&gt;按送出&lt;/li&gt;
&lt;li&gt;確定已經不在登入頁&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;步驟三&quot;&gt;&lt;a href=&quot;#步驟三&quot; class=&quot;headerlink&quot; title=&quot;步驟三&quot;&gt;&lt;/a&gt;步驟三&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;圖四&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/blog/2016/06/13/webdriverio-realworld-test-case/step4.png&quot; alt=&quot;step4.png&quot; title=&quot;&quot;&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;it(&amp;#39;&amp;#30331;&amp;#20837;&amp;#25104;&amp;#21151;&amp;#39;, function(done) &amp;#123;&amp;#10;  browser.pause(2000);&amp;#10;  browser.click(&amp;#39;.open-panel&amp;#39;);&amp;#10;  browser.waitForExist(&amp;#39;[href*=logout]&amp;#39;);&amp;#10;  browser.isExisting(&amp;#39;[href*=logout]&amp;#39;).should.be.equal(true);&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;展開側欄&lt;/li&gt;
&lt;li&gt;確認有登出連結在畫面中&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;完整測試程式碼&quot;&gt;&lt;a href=&quot;#完整測試程式碼&quot; class=&quot;headerlink&quot; title=&quot;完整測試程式碼&quot;&gt;&lt;/a&gt;完整測試程式碼&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;describe(&amp;#39;&amp;#27491;&amp;#24120;&amp;#30331;&amp;#20837;&amp;#27969;&amp;#31243;&amp;#39;, function() &amp;#123;&amp;#10;  it(&amp;#39;&amp;#21069;&amp;#24448;&amp;#30331;&amp;#20837;&amp;#38913;&amp;#39;, function(done) &amp;#123;&amp;#10;    browser.url(&amp;#39;/&amp;#39;);&amp;#10;    browser.click(&amp;#39;.open-panel&amp;#39;); // &amp;#22294;&amp;#19968;&amp;#10;    browser.click(&amp;#39;[href*=login]&amp;#39;); // &amp;#22294;&amp;#20108;&amp;#10;    browser.waitForExist(&amp;#39;[name=identifier]&amp;#39;);&amp;#10;    browser.getText(&amp;#39;.login-screen-title&amp;#39;).should.be.equal(&amp;#10;      &amp;#39;Login&amp;#39;);&amp;#10;  &amp;#125;);&amp;#10;&amp;#10;  it(&amp;#39;&amp;#22635;&amp;#23531;&amp;#30331;&amp;#20837;&amp;#36039;&amp;#26009;&amp;#20006;&amp;#36865;&amp;#20986;&amp;#39;, function(done) &amp;#123;&amp;#10;    browser.elements(&amp;#39;[name=identifier]&amp;#39;).setValue(&amp;#39;demo&amp;#39;);&amp;#10;    browser.elements(&amp;#39;[name=password]&amp;#39;).setValue(&amp;#39;11111111&amp;#39;);&amp;#10;    browser.click(&amp;#39;[type=submit]&amp;#39;);&amp;#10;    browser.isExisting(&amp;#39;[name=identifier]&amp;#39;, false).should.be.equal(&amp;#10;      true);&amp;#10;  &amp;#125;);&amp;#10;&amp;#10;  it(&amp;#39;&amp;#30331;&amp;#20837;&amp;#25104;&amp;#21151;&amp;#39;, function(done) &amp;#123;&amp;#10;    browser.pause(2000);&amp;#10;    browser.click(&amp;#39;.open-panel&amp;#39;);&amp;#10;    browser.waitForExist(&amp;#39;[href*=logout]&amp;#39;);&amp;#10;    browser.isExisting(&amp;#39;[href*=logout]&amp;#39;).should.be.equal(true);&amp;#10;  &amp;#125;);&amp;#10;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;此篇會先以最基本的方式去撰寫，下一篇會將此篇相同的程式改寫成 Page Object Pattern。&lt;/p&gt;
&lt;h2 id=&quot;步驟解說&quot;&gt;&lt;a href=&quot;#步驟解說&quot; class=&quot;headerlink&quot; title=&quot;步驟解說&quot;&gt;&lt;/a&gt;步驟解說&lt;/h2&gt;&lt;p&gt;這是一
    
    </summary>
    
      <category term="前端測試" scheme="http://alincode.github.io/categories/%E5%89%8D%E7%AB%AF%E6%B8%AC%E8%A9%A6/"/>
    
    
      <category term="WebdriverIO" scheme="http://alincode.github.io/tags/WebdriverIO/"/>
    
  </entry>
  
  <entry>
    <title>WebdriverIO 常用語法(3)</title>
    <link href="http://alincode.github.io/2016/06/12/webdriverio-common-syntax-3/"/>
    <id>http://alincode.github.io/2016/06/12/webdriverio-common-syntax-3/</id>
    <published>2016-06-12T13:35:19.000Z</published>
    <updated>2016-06-13T14:29:00.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;基本條件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已假設你有 &lt;a href=&quot;http://www.w3schools.com/jquery/jquery_ref_selectors.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Selector&lt;/a&gt; 的基本知識&lt;/li&gt;
&lt;li&gt;你已經讀過之前在此分享的所有相關文章&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Protocol&quot;&gt;&lt;a href=&quot;#Protocol&quot; class=&quot;headerlink&quot; title=&quot;Protocol&quot;&gt;&lt;/a&gt;Protocol&lt;/h3&gt;&lt;h4 id=&quot;url&quot;&gt;&lt;a href=&quot;#url&quot; class=&quot;headerlink&quot; title=&quot;url&quot;&gt;&lt;/a&gt;url&lt;/h4&gt;&lt;p&gt;前往特定網址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;語法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.url([url]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;範例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.url(&amp;#39;/login&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;實用工具-Utility&quot;&gt;&lt;a href=&quot;#實用工具-Utility&quot; class=&quot;headerlink&quot; title=&quot;實用工具(Utility)&quot;&gt;&lt;/a&gt;實用工具(Utility)&lt;/h3&gt;&lt;h4 id=&quot;waitForExist&quot;&gt;&lt;a href=&quot;#waitForExist&quot; class=&quot;headerlink&quot; title=&quot;waitForExist&quot;&gt;&lt;/a&gt;waitForExist&lt;/h4&gt;&lt;p&gt;等待一個特定元素出現，才進行下一步。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;語法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.waitForExist(selector);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;範例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.waitForExist(&amp;#39;[name=identifier]&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;其他相關語法&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;waitForEnabled&amp;#10;waitForSelected&amp;#10;waitForText&amp;#10;waitForValue&amp;#10;waitForVisible&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;pause&quot;&gt;&lt;a href=&quot;#pause&quot; class=&quot;headerlink&quot; title=&quot;pause&quot;&gt;&lt;/a&gt;pause&lt;/h4&gt;&lt;p&gt;暫停一段時間，常用於模擬真人行為減緩測試速度，及方便肉眼檢視每個測試步驟。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;語法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.pause(milliseconds);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;範例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.pause(2000);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;基本條件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已假設你有 &lt;a href=&quot;http://www.w3schools.com/jquery/jquery_ref_selectors.asp&quot; target=&quot;_blank&quot; rel=&quot;external
    
    </summary>
    
      <category term="前端測試" scheme="http://alincode.github.io/categories/%E5%89%8D%E7%AB%AF%E6%B8%AC%E8%A9%A6/"/>
    
    
      <category term="WebdriverIO" scheme="http://alincode.github.io/tags/WebdriverIO/"/>
    
  </entry>
  
  <entry>
    <title>WebdriverIO 常用語法(2)</title>
    <link href="http://alincode.github.io/2016/06/11/webdriverio-common-syntax-2/"/>
    <id>http://alincode.github.io/2016/06/11/webdriverio-common-syntax-2/</id>
    <published>2016-06-11T13:35:19.000Z</published>
    <updated>2016-06-13T14:34:16.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;基本條件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已假設你有 &lt;a href=&quot;http://www.w3schools.com/jquery/jquery_ref_selectors.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Selector&lt;/a&gt; 的基本知識&lt;/li&gt;
&lt;li&gt;你已經讀過之前在此分享的所有相關文章&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;屬性-Property&quot;&gt;&lt;a href=&quot;#屬性-Property&quot; class=&quot;headerlink&quot; title=&quot;屬性(Property)&quot;&gt;&lt;/a&gt;屬性(Property)&lt;/h3&gt;&lt;p&gt;當你需要驗證測試結果時，常需要取得屬性值做為客觀條件判斷。&lt;/p&gt;
&lt;h4 id=&quot;getTitle&quot;&gt;&lt;a href=&quot;#getTitle&quot; class=&quot;headerlink&quot; title=&quot;getTitle&quot;&gt;&lt;/a&gt;getTitle&lt;/h4&gt;&lt;p&gt;取得標題&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;範例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.getTitle();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;getUrl&quot;&gt;&lt;a href=&quot;#getUrl&quot; class=&quot;headerlink&quot; title=&quot;getUrl&quot;&gt;&lt;/a&gt;getUrl&lt;/h4&gt;&lt;p&gt;取得網址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;範例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.getUrl();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;getValue&quot;&gt;&lt;a href=&quot;#getValue&quot; class=&quot;headerlink&quot; title=&quot;getValue&quot;&gt;&lt;/a&gt;getValue&lt;/h4&gt;&lt;p&gt;取得欄味值&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;語法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.getValue(selector);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;範例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.getValue(&amp;#39;[name=identifier]&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;getText&quot;&gt;&lt;a href=&quot;#getText&quot; class=&quot;headerlink&quot; title=&quot;getText&quot;&gt;&lt;/a&gt;getText&lt;/h4&gt;&lt;p&gt;取得文字&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;語法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.getText(selector);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;範例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.getText(&amp;#39;.tip&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;基本條件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已假設你有 &lt;a href=&quot;http://www.w3schools.com/jquery/jquery_ref_selectors.asp&quot; target=&quot;_blank&quot; rel=&quot;external
    
    </summary>
    
      <category term="前端測試" scheme="http://alincode.github.io/categories/%E5%89%8D%E7%AB%AF%E6%B8%AC%E8%A9%A6/"/>
    
    
      <category term="WebdriverIO" scheme="http://alincode.github.io/tags/WebdriverIO/"/>
    
  </entry>
  
  <entry>
    <title>WebdriverIO 常用語法(1)</title>
    <link href="http://alincode.github.io/2016/06/10/webdriverio-common-syntax/"/>
    <id>http://alincode.github.io/2016/06/10/webdriverio-common-syntax/</id>
    <published>2016-06-10T13:35:19.000Z</published>
    <updated>2016-06-13T14:35:20.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;基本條件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已假設你有 &lt;a href=&quot;http://www.w3schools.com/jquery/jquery_ref_selectors.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Selector&lt;/a&gt; 的基本知識&lt;/li&gt;
&lt;li&gt;你已經讀過之前在此分享的所有相關文章&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;動作-Action&quot;&gt;&lt;a href=&quot;#動作-Action&quot; class=&quot;headerlink&quot; title=&quot;動作(Action)&quot;&gt;&lt;/a&gt;動作(Action)&lt;/h3&gt;&lt;p&gt;模擬使用者操作行為&lt;/p&gt;
&lt;h4 id=&quot;click&quot;&gt;&lt;a href=&quot;#click&quot; class=&quot;headerlink&quot; title=&quot;click&quot;&gt;&lt;/a&gt;click&lt;/h4&gt;&lt;p&gt;點擊元素(按鈕、連結、任何可被點擊的元素)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;語法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.click(selector);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;範例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.click(&amp;#39;.open-panel&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;setValue&quot;&gt;&lt;a href=&quot;#setValue&quot; class=&quot;headerlink&quot; title=&quot;setValue&quot;&gt;&lt;/a&gt;setValue&lt;/h4&gt;&lt;p&gt;設定欄位值&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;語法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.elements(selector).setValue(value);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;範例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.elements(&amp;#39;[name=identifier]&amp;#39;).setValue(&amp;#39;demo&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;submitForm&quot;&gt;&lt;a href=&quot;#submitForm&quot; class=&quot;headerlink&quot; title=&quot;submitForm&quot;&gt;&lt;/a&gt;submitForm&lt;/h4&gt;&lt;p&gt;送出表單&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;語法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.submitForm(selector);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;範例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser.submitForm(&amp;#39;#loginForm&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;基本條件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已假設你有 &lt;a href=&quot;http://www.w3schools.com/jquery/jquery_ref_selectors.asp&quot; target=&quot;_blank&quot; rel=&quot;external
    
    </summary>
    
      <category term="前端測試" scheme="http://alincode.github.io/categories/%E5%89%8D%E7%AB%AF%E6%B8%AC%E8%A9%A6/"/>
    
    
      <category term="WebdriverIO" scheme="http://alincode.github.io/tags/WebdriverIO/"/>
    
  </entry>
  
  <entry>
    <title>Choice Theory - 重點整理(2)</title>
    <link href="http://alincode.github.io/2016/05/25/choice-theory-2/"/>
    <id>http://alincode.github.io/2016/05/25/choice-theory-2/</id>
    <published>2016-05-24T16:19:22.000Z</published>
    <updated>2016-06-05T16:21:46.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;領導管理-vs-指揮管理&quot;&gt;&lt;a href=&quot;#領導管理-vs-指揮管理&quot; class=&quot;headerlink&quot; title=&quot;領導管理 vs 指揮管理&quot;&gt;&lt;/a&gt;領導管理 vs 指揮管理&lt;/h3&gt;&lt;p&gt;使指揮管理俱有破壞性的原因是它強調個人並讓員工互相為敵，使領導管理成功的原因是它強調創造一個互助合作的系統，並且相信只要你善待他人並向他們解釋你想要他們做的，你能夠信任他們會把工作做好。&lt;/p&gt;
&lt;p&gt;領導管理在職場上最強烈的論點是因為，它較有生產力而且使工作品質提高，它使企業減少花費。這種花費是指揮管理無法避免的，對兩個同行的企業來說，實際的勞動成本和物料成本並不造成競爭力的差距。造成競爭實力有差距的實際成本之外的管理成本，而這種管理成本總是運用領導管理比指揮管理節省許多。&lt;/p&gt;
&lt;p&gt;指揮管理導致員工薪資不滿的申訴案件增加、內部竊盜、無故請假、遲到早退、與工會關係緊張、暴力事件等問題層出不窮。即使指揮管理可以做到節省成本，但像推阻這種問題，還是實施指揮管理的職場常見到的問題。&lt;/p&gt;
&lt;h3 id=&quot;推阻&quot;&gt;&lt;a href=&quot;#推阻&quot; class=&quot;headerlink&quot; title=&quot;推阻&quot;&gt;&lt;/a&gt;推阻&lt;/h3&gt;&lt;p&gt;員工越是受指揮，或是因為他們習慣受指揮，所以把每一項要求都當做指揮，他們越是喜歡利用自己有的一點小小的權力來故意推阻。例如：「我很抱歉，我不能那麼做，那違反公司政策，我沒有那個權利。」&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;領導管理-vs-指揮管理&quot;&gt;&lt;a href=&quot;#領導管理-vs-指揮管理&quot; class=&quot;headerlink&quot; title=&quot;領導管理 vs 指揮管理&quot;&gt;&lt;/a&gt;領導管理 vs 指揮管理&lt;/h3&gt;&lt;p&gt;使指揮管理俱有破壞性的原因是它強調個人並讓員工互相為敵，使領
    
    </summary>
    
    
      <category term="Choice Theory" scheme="http://alincode.github.io/tags/Choice-Theory/"/>
    
  </entry>
  
  <entry>
    <title>Choice Theory - 重點整理(1)</title>
    <link href="http://alincode.github.io/2016/05/24/choice-theory-1/"/>
    <id>http://alincode.github.io/2016/05/24/choice-theory-1/</id>
    <published>2016-05-24T14:49:51.000Z</published>
    <updated>2016-06-05T16:21:56.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;完全行為&quot;&gt;&lt;a href=&quot;#完全行為&quot; class=&quot;headerlink&quot; title=&quot;完全行為&quot;&gt;&lt;/a&gt;完全行為&lt;/h3&gt;&lt;p&gt;動作 -&amp;gt; 思考 -&amp;gt; 感覺 -&amp;gt; 生理機能&lt;/p&gt;
&lt;h3 id=&quot;選擇焦慮-選擇恐懼&quot;&gt;&lt;a href=&quot;#選擇焦慮-選擇恐懼&quot; class=&quot;headerlink&quot; title=&quot;選擇焦慮 / 選擇恐懼&quot;&gt;&lt;/a&gt;選擇焦慮 / 選擇恐懼&lt;/h3&gt;&lt;p&gt;焦慮症會被稱為做正在焦慮或選擇焦慮，新的說法會比舊的說法來得精確，因為它們是活的、主動的說法。因為這些是選擇的結果，所以有希望。如果你能夠做一個選擇，自然就能做別的「更好的選擇」。你的選擇可能很痛苦，但不是不能取消的。感到憂慮是被動的做法，好像它發生在我們身上，我們是受害者，我們沒法控制它，這種名詞和形容詞的使用會誤導我們，使我們誤信我們不能為自己做些什麼。&lt;/p&gt;
&lt;h3 id=&quot;成功人士的煩惱&quot;&gt;&lt;a href=&quot;#成功人士的煩惱&quot; class=&quot;headerlink&quot; title=&quot;成功人士的煩惱&quot;&gt;&lt;/a&gt;成功人士的煩惱&lt;/h3&gt;&lt;p&gt;他們傾向對不是朋友的人，特別是不比他們富有的人表示不信任。假使這些人管理他人的人，幾乎他們所有的人都對愛與歸屬感有正常或正常以上的需求，能夠學習選擇理論，並在他們個人的生活裡運用，他們可能就會和他們管理的人做更友善的接觸。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;完全行為&quot;&gt;&lt;a href=&quot;#完全行為&quot; class=&quot;headerlink&quot; title=&quot;完全行為&quot;&gt;&lt;/a&gt;完全行為&lt;/h3&gt;&lt;p&gt;動作 -&amp;gt; 思考 -&amp;gt; 感覺 -&amp;gt; 生理機能&lt;/p&gt;
&lt;h3 id=&quot;選擇焦慮-選擇恐懼&quot;&gt;&lt;a href
    
    </summary>
    
    
      <category term="Choice Theory" scheme="http://alincode.github.io/tags/Choice-Theory/"/>
    
  </entry>
  
  <entry>
    <title>有效的時間管理 - 如何一周多擠出十個小時 重點整理(6)</title>
    <link href="http://alincode.github.io/2016/05/23/Effective-Time-Management-6/"/>
    <id>http://alincode.github.io/2016/05/23/Effective-Time-Management-6/</id>
    <published>2016-05-23T14:14:29.000Z</published>
    <updated>2016-05-28T03:08:25.000Z</updated>
    
    <content type="html">&lt;img src=&quot;/blog/2016/05/23/Effective-Time-Management-6/time.jpg&quot; alt=&quot;time.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;辨識什麼是-Time-Killer-任務&quot;&gt;&lt;a href=&quot;#辨識什麼是-Time-Killer-任務&quot; class=&quot;headerlink&quot; title=&quot;辨識什麼是 Time Killer 任務&quot;&gt;&lt;/a&gt;辨識什麼是 Time Killer 任務&lt;/h3&gt;&lt;p&gt;你可以輕易地完成，但卻不會帶給你任何價值。&lt;/p&gt;
&lt;h3 id=&quot;哪些方式可以讓你脫離-Time-Killer&quot;&gt;&lt;a href=&quot;#哪些方式可以讓你脫離-Time-Killer&quot; class=&quot;headerlink&quot; title=&quot;哪些方式可以讓你脫離 Time Killer&quot;&gt;&lt;/a&gt;哪些方式可以讓你脫離 Time Killer&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;減少 check and read Email 次數&lt;/li&gt;
&lt;li&gt;檢查訊息(facebook, sms) 次數&lt;/li&gt;
&lt;li&gt;減少通勤 - 改用 remote work 和 online meeting&lt;/li&gt;
&lt;li&gt;減少重工&lt;/li&gt;
&lt;li&gt;Repeatedly picking up paper or viewing an email&lt;/li&gt;
&lt;li&gt;有技巧的性的多工&lt;ul&gt;
&lt;li&gt;多工常常是一件令人詬病的事，常常有人認為在同時做多件事情，好像可以在短時間內完成很多事，但卻忽略了分心帶來的負面影響，例如你做了也完成了，但卻做錯了，下次又要在做一次，在無形中，其實增加了更多的重工。&lt;/li&gt;
&lt;li&gt;比較好的方式，是專注做一件事，然後再進行下一件事&lt;/li&gt;
&lt;li&gt;但建議技巧性的多工，例如你同時想專研某種技術，然後又想學英文，你可以強迫自己在一段時間內，只看英文的影片跟文章。這樣就達到專心做一件事時，卻帶來兩份收獲。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;讓自己一段時間離線&lt;ul&gt;
&lt;li&gt;只專注在把某件 Task 完成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;避免過度使用社群工具，例如限制自己一天只花 15~30 分鐘瀏覽 Facebook&lt;/li&gt;
&lt;li&gt;設定有限的時間&lt;ul&gt;
&lt;li&gt;針對一個 Task 只給 25 分鐘，如果做不完再給 25 分鐘，時間到之後不管有沒有做完，都應該停止讓自己休息一下。&lt;/li&gt;
&lt;li&gt;重新思考是否有其他方式可以進行這個 Task，或把這個 Task 搬到明天在進行，並避免一個 Task 綁住你所有的時間。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;設定有限的時間瀏覽網頁，一天 15 ~ 30 分鐘&lt;ul&gt;
&lt;li&gt;在資訊爆炸的時候，人們總會花過多的時間在吸收新資訊而分心，忘了自己有其他更重要的目標。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;錯誤的開始&lt;ul&gt;
&lt;li&gt;大多數的人都花 1 ~ 2 個小時，規劃自己一天的日程，可以減少至 15 ~ 20 分鐘比較理想。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;超長的 TODO LIST&lt;ul&gt;
&lt;li&gt;只挑出三項高價值的 Task，跟其他兩項一定得做的 Task。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在家工作&lt;ul&gt;
&lt;li&gt;即使在家工作，你也必須設定工作時間，時間到了之後你就應該去做其他的事。&lt;/li&gt;
&lt;li&gt;跟你的家人聊天、去健身、學習跟改善其他技能，重新充電之後，再回到一天的循環。&lt;/li&gt;
&lt;li&gt;工作狂也是一種病，人生缺乏協調性，可參照「被討厭的勇氣」這本書，有更詳細的說明。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;娛樂管理&lt;ul&gt;
&lt;li&gt;如果你一天花 1 ~ 2 小時看電視，那一周就是 14 個小時，這樣的 Task 建議設定一周只做一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/effective-time-management/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udemy 免費線上課程網址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;/blog/2016/05/23/Effective-Time-Management-6/time.jpg&quot; alt=&quot;time.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;辨識什麼是-Time-Killer-任務&quot;&gt;&lt;a href=&quot;#辨識什麼是-Time
    
    </summary>
    
      <category term="時間管理" scheme="http://alincode.github.io/categories/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="時間管理" scheme="http://alincode.github.io/tags/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
      <category term="有效的時間管理" scheme="http://alincode.github.io/tags/%E6%9C%89%E6%95%88%E7%9A%84%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>有效的時間管理 - 重點整理(5)</title>
    <link href="http://alincode.github.io/2016/05/22/Effective-Time-Management-5/"/>
    <id>http://alincode.github.io/2016/05/22/Effective-Time-Management-5/</id>
    <published>2016-05-22T13:44:01.000Z</published>
    <updated>2016-05-24T14:13:50.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;七種方法把事情做完&quot;&gt;&lt;a href=&quot;#七種方法把事情做完&quot; class=&quot;headerlink&quot; title=&quot;七種方法把事情做完&quot;&gt;&lt;/a&gt;七種方法把事情做完&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;將符合 80/20 法則高價值的事情標注起來，將所有時間專注在這些任務，將低回報的事情，委派、轉交、刪除或重新設計。&lt;/li&gt;
&lt;li&gt;減少低回報的任務數量&lt;/li&gt;
&lt;li&gt;因為一些外在因素，有時候你很難控制你的日程，但至少確保每日有兩、三件是屬於高價值的任務&lt;/li&gt;
&lt;li&gt;選一天(或幾個小時)只專注在完成高價值的任務&lt;/li&gt;
&lt;li&gt;再早上十點半時間，將高價值的事情做完。&lt;/li&gt;
&lt;li&gt;將高價值的任務，排在你每日效率最高的時間。&lt;/li&gt;
&lt;li&gt;建立一個 Stop Doing 列表，將意識到那些事無意義的事。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/effective-time-management/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udemy 免費線上課程網址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;七種方法把事情做完&quot;&gt;&lt;a href=&quot;#七種方法把事情做完&quot; class=&quot;headerlink&quot; title=&quot;七種方法把事情做完&quot;&gt;&lt;/a&gt;七種方法把事情做完&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;將符合 80/20 法則高價值的事情標注起來，將所有時間專注在這些任務，
    
    </summary>
    
      <category term="時間管理" scheme="http://alincode.github.io/categories/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="時間管理" scheme="http://alincode.github.io/tags/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
      <category term="有效的時間管理" scheme="http://alincode.github.io/tags/%E6%9C%89%E6%95%88%E7%9A%84%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>有效的時間管理 - 重點整理(4)</title>
    <link href="http://alincode.github.io/2016/05/21/Effective-Time-Management-4/"/>
    <id>http://alincode.github.io/2016/05/21/Effective-Time-Management-4/</id>
    <published>2016-05-21T02:09:59.000Z</published>
    <updated>2016-05-24T13:32:03.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;建立成功循環&quot;&gt;&lt;a href=&quot;#建立成功循環&quot; class=&quot;headerlink&quot; title=&quot;建立成功循環&quot;&gt;&lt;/a&gt;建立成功循環&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;成功人士可以建立一年復一年地成功，是因為他們一日復一日都做成功的事。&lt;/li&gt;
&lt;li&gt;他們將成功經驗建立一個習慣路徑，並很少改變這個路徑，尤其是那些帶來高收獲的事情。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;建立屬於你自己的成功循環&quot;&gt;&lt;a href=&quot;#建立屬於你自己的成功循環&quot; class=&quot;headerlink&quot; title=&quot;建立屬於你自己的成功循環&quot;&gt;&lt;/a&gt;建立屬於你自己的成功循環&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;排進那些符合 80/20 法則的 TODO&lt;/li&gt;
&lt;li&gt;重現最佳的練習&lt;/li&gt;
&lt;li&gt;專注在改善跟自我發展&lt;/li&gt;
&lt;li&gt;時常休息、為自己找樂子、陪伴家人，將自己重新充電。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;練習&quot;&gt;&lt;a href=&quot;#練習&quot; class=&quot;headerlink&quot; title=&quot;練習&quot;&gt;&lt;/a&gt;練習&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;寫下每天必定會做的事情，如果想不起來的話，就寫下昨天做的所有事情。&lt;/li&gt;
&lt;li&gt;記下每件事情帶給你多少回報或未來可能帶給你的回報。&lt;/li&gt;
&lt;li&gt;問問自己，如果每天都重複這樣的循環，一年後你會創造多少價值。&lt;/li&gt;
&lt;li&gt;現在重新設計的你日程，讓所有你計劃每日要做的事情來自於四種成功類型。&lt;/li&gt;
&lt;li&gt;重新計算新設計的日程，會帶給你多少回報。&lt;/li&gt;
&lt;li&gt;問問自己，如果每天依照新日程重複循環，你會創造多少價值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/effective-time-management/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udemy 免費線上課程網址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;建立成功循環&quot;&gt;&lt;a href=&quot;#建立成功循環&quot; class=&quot;headerlink&quot; title=&quot;建立成功循環&quot;&gt;&lt;/a&gt;建立成功循環&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;成功人士可以建立一年復一年地成功，是因為他們一日復一日都做成功的事。&lt;/li&gt;
&lt;li&gt;他們將成
    
    </summary>
    
      <category term="時間管理" scheme="http://alincode.github.io/categories/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="時間管理" scheme="http://alincode.github.io/tags/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
      <category term="有效的時間管理" scheme="http://alincode.github.io/tags/%E6%9C%89%E6%95%88%E7%9A%84%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>時間管理 ---&gt; 任務管理 ---&gt; 目標管理</title>
    <link href="http://alincode.github.io/2016/05/20/evolution/"/>
    <id>http://alincode.github.io/2016/05/20/evolution/</id>
    <published>2016-05-20T14:18:59.000Z</published>
    <updated>2016-05-20T14:20:03.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;專科期間我曾沈迷在研究時間管理上，閱讀超過20本各種時間管理的理論，把自己當實驗品每種都試試看，但我漸漸的體認到時間管理無用論，因為真的照著規劃的時間管理走，必須要把其他所有變因都排除，在無人干擾的情況下，但這在現實生活中無法做到。&lt;/li&gt;
&lt;li&gt;後來我接觸到了任務管理的觀念，把每個想做的事，都切成一個小Task，接近強迫症的逼迫自己執行了一段時間，達成了許多之前我認為我自己無法達成的事情，但達成了之後，開始覺得精神疲乏，整天只想放空。&lt;/li&gt;
&lt;li&gt;後來又接觸了目標管理，是目前我覺得最好的做法，不需要做時間管理，先計劃中短期目標，針對這個目標須具備的人格特色或任務，設定一系列的養成計劃，透過神奇的21天效應，讓這件事變成一個習慣，每天就會不知覺的重複去執行，在不知不覺中達成目標。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;專科期間我曾沈迷在研究時間管理上，閱讀超過20本各種時間管理的理論，把自己當實驗品每種都試試看，但我漸漸的體認到時間管理無用論，因為真的照著規劃的時間管理走，必須要把其他所有變因都排除，在無人干擾的情況下，但這在現實生活中無法做到。&lt;/li&gt;
&lt;li&gt;後來我接觸
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>信仰</title>
    <link href="http://alincode.github.io/2016/05/19/belief/"/>
    <id>http://alincode.github.io/2016/05/19/belief/</id>
    <published>2016-05-19T00:35:14.000Z</published>
    <updated>2016-05-20T14:20:20.000Z</updated>
    
    <content type="html">&lt;p&gt;我是一個沒有特定信仰的人，唯一的信仰就是，每個人生來這世上都有一個專屬於自己的目的，你完成你的目的，儘量帶來一些改變，越深遠越好，然後離開這個世界。離開之後，什麼都會漸漸地消失，除了那些你帶來的那些改變。&lt;/p&gt;
&lt;p&gt;雖然我沒有特定信仰，但我有許多不容動搖的價值觀。&lt;/p&gt;
&lt;h3 id=&quot;道德觀&quot;&gt;&lt;a href=&quot;#道德觀&quot; class=&quot;headerlink&quot; title=&quot;道德觀&quot;&gt;&lt;/a&gt;道德觀&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;我相信人是一致性的慣性動物，當你容許自己有灰色地帶，那個灰色地帶會漸漸就會把你吞噬。&lt;/li&gt;
&lt;li&gt;蝴蝶效應即使微小的不誠實，將蔓延到整個人生。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;專注&quot;&gt;&lt;a href=&quot;#專注&quot; class=&quot;headerlink&quot; title=&quot;專注&quot;&gt;&lt;/a&gt;專注&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一次，只專注一件事&lt;/li&gt;
&lt;li&gt;人們總是忽略多工帶來的影響，如果你說你多工也沒差，某種程度是在對自己說謊，因為如果你改成只做一件事，肯定比你多工時更快更好。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;人生需要多方面發展&quot;&gt;&lt;a href=&quot;#人生需要多方面發展&quot; class=&quot;headerlink&quot; title=&quot;人生需要多方面發展&quot;&gt;&lt;/a&gt;人生需要多方面發展&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;就算你很愛吃Pizza，但你也不會想一輩子都只吃Pizza，所以我們總要穿插一點其他選擇。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我是一個沒有特定信仰的人，唯一的信仰就是，每個人生來這世上都有一個專屬於自己的目的，你完成你的目的，儘量帶來一些改變，越深遠越好，然後離開這個世界。離開之後，什麼都會漸漸地消失，除了那些你帶來的那些改變。&lt;/p&gt;
&lt;p&gt;雖然我沒有特定信仰，但我有許多不容動搖的價值觀。&lt;/p
    
    </summary>
    
    
      <category term="信仰" scheme="http://alincode.github.io/tags/%E4%BF%A1%E4%BB%B0/"/>
    
      <category term="價值觀" scheme="http://alincode.github.io/tags/%E5%83%B9%E5%80%BC%E8%A7%80/"/>
    
  </entry>
  
  <entry>
    <title>有效的時間管理 - 重點整理(3)</title>
    <link href="http://alincode.github.io/2016/05/18/Effective-Time-Management-3/"/>
    <id>http://alincode.github.io/2016/05/18/Effective-Time-Management-3/</id>
    <published>2016-05-18T15:52:40.000Z</published>
    <updated>2016-05-19T12:02:18.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;有三件事情可以幫助你，把高價值的事情做完&quot;&gt;&lt;a href=&quot;#有三件事情可以幫助你，把高價值的事情做完&quot; class=&quot;headerlink&quot; title=&quot;有三件事情可以幫助你，把高價值的事情做完&quot;&gt;&lt;/a&gt;有三件事情可以幫助你，把高價值的事情做完&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;識別真正的高價值的任務&lt;/li&gt;
&lt;li&gt;擴大規模&lt;/li&gt;
&lt;li&gt;確認它們真的被完成&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;識別真正的高價值的任務&quot;&gt;&lt;a href=&quot;#識別真正的高價值的任務&quot; class=&quot;headerlink&quot; title=&quot;識別真正的高價值的任務&quot;&gt;&lt;/a&gt;識別真正的高價值的任務&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;常見高價值任務&lt;ul&gt;
&lt;li&gt;高獲利的 idea&lt;/li&gt;
&lt;li&gt;高價值的人際關係&lt;/li&gt;
&lt;li&gt;建立強大的團隊&lt;/li&gt;
&lt;li&gt;建立高收益系統機制&lt;/li&gt;
&lt;li&gt;可讓成果翻倍突破性的任務&lt;/li&gt;
&lt;li&gt;找尋可以提供產能的機會&lt;/li&gt;
&lt;li&gt;Making profitable offers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;特別高價值任務&lt;ul&gt;
&lt;li&gt;花一分鐘的時間，寫下你認為目前帶給你高價值的任務&lt;/li&gt;
&lt;li&gt;寫下這些任務帶來的回饋價值，或未來預估會帶來的價值&lt;/li&gt;
&lt;li&gt;建立一個循環機制，讓它比以前更頻繁地被發生。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;擴大規模&quot;&gt;&lt;a href=&quot;#擴大規模&quot; class=&quot;headerlink&quot; title=&quot;擴大規模&quot;&gt;&lt;/a&gt;擴大規模&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;重新設計任務讓它可以用更少的資源，產生更高的價值。&lt;/li&gt;
&lt;li&gt;規模化之後，哪些價值會被倍增。&lt;/li&gt;
&lt;li&gt;如果你確定用更少的資源，無止境的提升產能，你會去做的？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;擴大規模常見高價值任務&quot;&gt;&lt;a href=&quot;#擴大規模常見高價值任務&quot; class=&quot;headerlink&quot; title=&quot;擴大規模常見高價值任務&quot;&gt;&lt;/a&gt;擴大規模常見高價值任務&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;高獲利的 idea —&amp;gt; 建立智囊團可以提供給你 ideas&lt;/li&gt;
&lt;li&gt;高價值的人際關係 —&amp;gt; 找尋可以幫你介紹給別人的高價值人際關係&lt;/li&gt;
&lt;li&gt;建立強大的團隊 —&amp;gt; 找個 CEO 幫你訓練你的團隊&lt;/li&gt;
&lt;li&gt;建立高收益系統 —&amp;gt; 直接購買一個別人建立好的高收益系統&lt;/li&gt;
&lt;li&gt;可讓成果翻倍突破性的任務 —&amp;gt; 建立突破性的團隊&lt;/li&gt;
&lt;li&gt;找尋可以提供產能的機會 —&amp;gt; 建立強大的團隊，幫助你找機會&lt;/li&gt;
&lt;li&gt;Making profitable offers —&amp;gt; Get offer making team&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/effective-time-management/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udemy 免費線上課程網址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;有三件事情可以幫助你，把高價值的事情做完&quot;&gt;&lt;a href=&quot;#有三件事情可以幫助你，把高價值的事情做完&quot; class=&quot;headerlink&quot; title=&quot;有三件事情可以幫助你，把高價值的事情做完&quot;&gt;&lt;/a&gt;有三件事情可以幫助你，把高價值的事情做完&lt;/h3&gt;&lt;
    
    </summary>
    
      <category term="時間管理" scheme="http://alincode.github.io/categories/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="時間管理" scheme="http://alincode.github.io/tags/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
      <category term="有效的時間管理" scheme="http://alincode.github.io/tags/%E6%9C%89%E6%95%88%E7%9A%84%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>如何改善英文閱讀能力 - 經驗分享</title>
    <link href="http://alincode.github.io/2016/05/17/how-to-improve-english-reading-skills/"/>
    <id>http://alincode.github.io/2016/05/17/how-to-improve-english-reading-skills/</id>
    <published>2016-05-17T14:43:31.000Z</published>
    <updated>2016-05-19T11:59:59.000Z</updated>
    
    <content type="html">&lt;p&gt;去年在加拿大語言學校的時候，入學測驗會先考聽說讀寫，考試的方式基本上就是寫考卷，交卷後去另一個教室，隨機指派一個老師幫你面試，基本就是自我介紹，然後他會說三個題目，你可以挑任何一個你覺得比較好發揮的題目回答。如果是半天課程的人只有兩堂課，溝通課是必修，然後他會告訴你成績最差的一科，建議你選課方向。&lt;/p&gt;
&lt;p&gt;通常台灣人最強的應該是讀，但讀卻是我最弱的一項，所以我被指派到了閱讀課，有些人會覺得閱讀課很浪費時間，不過之前已經在菲律賓上了 5 個月的一對一對話課程，閱讀課反而給我帶來一些新鮮感。在這個人人上大學的時代，閱讀有什麼困難呢？不就多花一點時間就好了？&lt;code&gt;但上了閱讀課之後，我才明白原來我真的不懂閱讀。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;「如何閱讀一本書」這本書有提到，閱讀有三個層次基礎閱讀、檢視閱讀、分析閱讀，只要有國中畢業得人，都不需要在乎基本閱讀這個層級，甚至我們從不知道有發生過這個階段，除了國小老師誰會記得國小上課內容？但所有內容我們已經內化成內功了，根本不需要思考。但在接觸另一個語言的時候，並沒有意識到，原來閱讀能力被降級了，所以我們仍用了以往讀母語書的技巧去讀英文書，發現效果很差。&lt;/p&gt;
&lt;p&gt;大概記錄一下，我自己體驗過覺得很重要的技能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如何知道這本書適不適合你閱讀？有兩件事必須要評估。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你有沒有興趣&lt;/li&gt;
&lt;li&gt;你能不能看懂&lt;ul&gt;
&lt;li&gt;如果一頁有超過十個單字你看不懂，那這本書遠遠超過你目前的閱讀能力，你應該換更簡單的書籍。&lt;/li&gt;
&lt;li&gt;有些人會選擇硬 K 它，通常最後會轉變成直接放棄。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;同個內容分三種技巧閱讀&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一遍&lt;ul&gt;
&lt;li&gt;用極快的速度用跳躍的方式閱讀&lt;/li&gt;
&lt;li&gt;&lt;code&gt;挑出三個一直重複出現的關鍵字&lt;/code&gt;，如果這三個字不懂，試著從前後文推敲，真的不行在查字典。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第二遍&lt;ul&gt;
&lt;li&gt;用中等速度閱讀&lt;/li&gt;
&lt;li&gt;每個段落挑出最重要的一行句子，然後把被挑句子&lt;code&gt;濃縮成一段話&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第三遍&lt;ul&gt;
&lt;li&gt;細讀&lt;/li&gt;
&lt;li&gt;如果不知道這個字就不知道整句句子的意思的字，特別挑出來嘗試 &lt;code&gt;猜測&lt;/code&gt; 單字的意思。&lt;/li&gt;
&lt;li&gt;通常八成不懂的單字，都可以靠從句子中推測，抓出大概的意思，可以逐漸磨練出猜測的準度提升閱讀技巧。&lt;/li&gt;
&lt;li&gt;如果每個不懂的單字都查，很快就破壞你閱讀的興致而放棄閱讀。&lt;/li&gt;
&lt;li&gt;有些單字會依照情境不同而有不同意義，所以有時候查了也沒用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;去年在加拿大語言學校的時候，入學測驗會先考聽說讀寫，考試的方式基本上就是寫考卷，交卷後去另一個教室，隨機指派一個老師幫你面試，基本就是自我介紹，然後他會說三個題目，你可以挑任何一個你覺得比較好發揮的題目回答。如果是半天課程的人只有兩堂課，溝通課是必修，然後他會告訴你成績最差
    
    </summary>
    
    
      <category term="學英文" scheme="http://alincode.github.io/tags/%E5%AD%B8%E8%8B%B1%E6%96%87/"/>
    
      <category term="經驗分享" scheme="http://alincode.github.io/tags/%E7%B6%93%E9%A9%97%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>有效的時間管理 - 重點整理(2)</title>
    <link href="http://alincode.github.io/2016/05/16/Effective-Time-Management-2/"/>
    <id>http://alincode.github.io/2016/05/16/Effective-Time-Management-2/</id>
    <published>2016-05-16T10:29:09.000Z</published>
    <updated>2016-05-19T12:02:01.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;什麼是高價值的事情&quot;&gt;&lt;a href=&quot;#什麼是高價值的事情&quot; class=&quot;headerlink&quot; title=&quot;什麼是高價值的事情&quot;&gt;&lt;/a&gt;什麼是高價值的事情&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;相對於其他事情，它可以帶給你更高的報酬。&lt;/li&gt;
&lt;li&gt;這項活動將帶你更趨近於你的願景。&lt;/li&gt;
&lt;li&gt;這項活動將帶你領你，跳到更高一層的階段。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;找出過去你專注的事情？&quot;&gt;&lt;a href=&quot;#找出過去你專注的事情？&quot; class=&quot;headerlink&quot; title=&quot;找出過去你專注的事情？&quot;&gt;&lt;/a&gt;找出過去你專注的事情？&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;列出你昨天做的每件事&lt;/li&gt;
&lt;li&gt;接著寫下你預期會從這些事情回報到你自己身上價值的數值。&lt;/li&gt;
&lt;li&gt;回顧你的列表，你到底得到多少回報？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;80-20法則&quot;&gt;&lt;a href=&quot;#80-20法則&quot; class=&quot;headerlink&quot; title=&quot;80 / 20法則&quot;&gt;&lt;/a&gt;80 / 20法則&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;80% 的收獲，來自於 20% 的付出。&lt;/li&gt;
&lt;li&gt;80% 的結果，來自於 20% 的原因。&lt;/li&gt;
&lt;li&gt;反過來說，在我們所做的全部努力之中，有 80% 的付出只能帶來 20% 的結果。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/effective-time-management/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udemy 免費線上課程網址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什麼是高價值的事情&quot;&gt;&lt;a href=&quot;#什麼是高價值的事情&quot; class=&quot;headerlink&quot; title=&quot;什麼是高價值的事情&quot;&gt;&lt;/a&gt;什麼是高價值的事情&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;相對於其他事情，它可以帶給你更高的報酬。&lt;/li&gt;
&lt;li&gt;這項活動將帶
    
    </summary>
    
      <category term="時間管理" scheme="http://alincode.github.io/categories/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="時間管理" scheme="http://alincode.github.io/tags/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
      <category term="有效的時間管理" scheme="http://alincode.github.io/tags/%E6%9C%89%E6%95%88%E7%9A%84%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>有效的時間管理 - 重點整理(1)</title>
    <link href="http://alincode.github.io/2016/05/15/Effective-Time-Management/"/>
    <id>http://alincode.github.io/2016/05/15/Effective-Time-Management/</id>
    <published>2016-05-15T09:01:19.000Z</published>
    <updated>2016-05-19T11:59:59.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;如何用一半的時間，完成10倍的 Task Done。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好聳動的口號，讓我決定開始看這篇線上教學。&lt;/p&gt;
&lt;h3 id=&quot;有效的時間管理&quot;&gt;&lt;a href=&quot;#有效的時間管理&quot; class=&quot;headerlink&quot; title=&quot;有效的時間管理&quot;&gt;&lt;/a&gt;有效的時間管理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;時間管理是一種數學&lt;ul&gt;
&lt;li&gt;時間管理無用論，即使知道了時間怎麼使用，還是無法把事情做完。&lt;/li&gt;
&lt;li&gt;原因是我們無法在擁有更多的時間，每個人都只有 24 小時。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;任務管理&lt;ul&gt;
&lt;li&gt;任務管理更重要，因為你可以無限的增加價值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;所有人都擁有相同的時間，但成功人士的差別在於他們將時間花在高價值，並會回饋到自己身上的事。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;最大的挑戰是什麼？&quot;&gt;&lt;a href=&quot;#最大的挑戰是什麼？&quot; class=&quot;headerlink&quot; title=&quot;最大的挑戰是什麼？&quot;&gt;&lt;/a&gt;最大的挑戰是什麼？&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;被 TODO List 淹沒&lt;/li&gt;
&lt;li&gt;我們傾向做很多事情，但不幸的事，只有少部分的事情真正對我們有價值。&lt;/li&gt;
&lt;li&gt;無論我們決定要做哪件事，我們都只有有限的時間。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;專注是關鍵&quot;&gt;&lt;a href=&quot;#專注是關鍵&quot; class=&quot;headerlink&quot; title=&quot;專注是關鍵&quot;&gt;&lt;/a&gt;專注是關鍵&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;只專注在最高價值的事情&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/effective-time-management/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udemy 免費線上課程網址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;如何用一半的時間，完成10倍的 Task Done。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好聳動的口號，讓我決定開始看這篇線上教學。&lt;/p&gt;
&lt;h3 id=&quot;有效的時間管理&quot;&gt;&lt;a href=&quot;#有效的時間管理&quot; class=&quot;headerlink&quot; title=&quot;有效
    
    </summary>
    
      <category term="時間管理" scheme="http://alincode.github.io/categories/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="80/20 法則" scheme="http://alincode.github.io/tags/80-20-%E6%B3%95%E5%89%87/"/>
    
      <category term="時間管理" scheme="http://alincode.github.io/tags/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
      <category term="有效的時間管理" scheme="http://alincode.github.io/tags/%E6%9C%89%E6%95%88%E7%9A%84%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>React Bind</title>
    <link href="http://alincode.github.io/2016/05/14/react-about-bind/"/>
    <id>http://alincode.github.io/2016/05/14/react-about-bind/</id>
    <published>2016-05-14T15:15:27.000Z</published>
    <updated>2016-05-19T11:59:59.000Z</updated>
    
    <content type="html">&lt;p&gt;React on ES6 不再 &lt;code&gt;自動綁定&lt;/code&gt;，這是在很多網路文章都會提到的事，但總是覺得矇矇懂，今天看到一個範例終於比較有感了。&lt;/p&gt;
&lt;p&gt;就是在之前 handleOptionsButtonClick 內的 this 不需要綁定，就會預設為 this 是一個 component instance，但是在 ES6 的寫法，你需要加 &lt;code&gt;this.handleOptionsButtonClick.bind(this)&lt;/code&gt;，它才會將 handleOptionsButtonClick 內的 this 視為是 &lt;code&gt;component instance&lt;/code&gt;，否則無法使用 component instance 的 method。&lt;/p&gt;
&lt;h3 id=&quot;範例一&quot;&gt;&lt;a href=&quot;#範例一&quot; class=&quot;headerlink&quot; title=&quot;範例一&quot;&gt;&lt;/a&gt;範例一&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class PostInfo extends React.Component &amp;#123;&amp;#10;  constructor(props) &amp;#123;&amp;#10;    super(props);&amp;#10;    // &amp;#25163;&amp;#21205;&amp;#32129;&amp;#23450;&amp;#65292;&amp;#36889;&amp;#35041;&amp;#30340; this &amp;#25351;&amp;#30340;&amp;#26159; component instance&amp;#10;    this.handleOptionsButtonClick = this.handleOptionsButtonClick.bind(this);&amp;#10;  &amp;#125;&amp;#10;  handleOptionsButtonClick(e) &amp;#123;&amp;#10;    // &amp;#34987; bind &amp;#20043;&amp;#24460;&amp;#65292;&amp;#36889;&amp;#35041;&amp;#30340; this &amp;#23559;&amp;#25351;&amp;#30340;&amp;#26159; component instance&amp;#12290;&amp;#10;    this.setState(&amp;#123;showOptionsModal: true&amp;#125;);&amp;#10;  &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;範例二&quot;&gt;&lt;a href=&quot;#範例二&quot; class=&quot;headerlink&quot; title=&quot;範例二&quot;&gt;&lt;/a&gt;範例二&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;_checkShopCode() &amp;#123;&amp;#10;// &amp;#8230; &amp;#30053;...&amp;#10;&amp;#125;&amp;#10;&amp;#10;_changeDeliverZone(e) &amp;#123;&amp;#10;  CartActions.changeDeliverZone(e.target.value);&amp;#10;  this._updateCartSum();&amp;#10;&amp;#125;&amp;#10;&amp;#10;&amp;#60;select style=&amp;#123;styles.select&amp;#125; value=&amp;#123;this.props.selectedDeliverZone&amp;#125; onChange=&amp;#123;this._changeDeliverZone.bind(this)&amp;#125;&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;React on ES6 不再 &lt;code&gt;自動綁定&lt;/code&gt;，這是在很多網路文章都會提到的事，但總是覺得矇矇懂，今天看到一個範例終於比較有感了。&lt;/p&gt;
&lt;p&gt;就是在之前 handleOptionsButtonClick 內的 this 不需要綁定，就會預設為 thi
    
    </summary>
    
    
      <category term="React" scheme="http://alincode.github.io/tags/React/"/>
    
  </entry>
  
</feed>
